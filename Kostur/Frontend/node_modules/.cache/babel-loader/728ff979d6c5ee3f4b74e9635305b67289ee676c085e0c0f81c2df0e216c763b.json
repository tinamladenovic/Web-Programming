{"ast":null,"code":"import { createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-9dea18fa\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  class: \"all-factories\"\n};\nconst _hoisted_2 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"thead\", null, [/*#__PURE__*/_createElementVNode(\"tr\", null, [/*#__PURE__*/_createElementVNode(\"th\", null, \"Logo\"), /*#__PURE__*/_createElementVNode(\"th\", null, \"Naziv\"), /*#__PURE__*/_createElementVNode(\"th\", null, \"Lokacija\"), /*#__PURE__*/_createElementVNode(\"th\", null, \"Ocena\"), /*#__PURE__*/_createElementVNode(\"th\")])], -1 /* HOISTED */));\nconst _hoisted_3 = [\"onClick\"];\nconst _hoisted_4 = [\"src\"];\nconst _hoisted_5 = [\"onClick\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"table\", null, [_hoisted_2, _createElementVNode(\"tbody\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($setup.sortedFactories, factory => {\n    return _openBlock(), _createElementBlock(\"tr\", {\n      key: factory.id,\n      onClick: $event => $setup.viewFactoryProfile(factory)\n    }, null, 8 /* PROPS */, _hoisted_3);\n  }), 128 /* KEYED_FRAGMENT */)), (_openBlock(true), _createElementBlock(_Fragment, null, _renderList($setup.sortedFactories, factory => {\n    return _openBlock(), _createElementBlock(\"tr\", {\n      key: factory.id\n    }, [_createElementVNode(\"td\", null, [_createElementVNode(\"img\", {\n      src: $setup.getFactoryLogo(factory.logo),\n      alt: \"Logo\",\n      class: \"factory-logo\"\n    }, null, 8 /* PROPS */, _hoisted_4)]), _createElementVNode(\"td\", null, _toDisplayString(factory.name), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(factory.location), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(factory.rating), 1 /* TEXT */), _createElementVNode(\"td\", null, [_createElementVNode(\"button\", {\n      onClick: $event => $setup.viewFactoryProfile(factory)\n    }, \"VIEW\", 8 /* PROPS */, _hoisted_5)])]);\n  }), 128 /* KEYED_FRAGMENT */))])])]);\n}","map":{"version":3,"names":["class","_createElementVNode","_createElementBlock","_hoisted_1","_hoisted_2","_Fragment","_renderList","$setup","sortedFactories","factory","key","id","onClick","$event","viewFactoryProfile","_hoisted_3","src","getFactoryLogo","logo","alt","_hoisted_4","_toDisplayString","name","location","rating","_hoisted_5"],"sources":["C:\\Users\\PC\\eclipse-workspace\\apache-tomcat-9.0.89\\apache-tomcat-9.0.89\\webapps\\chocolate-factory-2\\Kostur\\Frontend\\front-app\\src\\views\\AllChocolateFactories.vue"],"sourcesContent":["<template>\r\n  <div class=\"all-factories\">\r\n    <table>\r\n      <thead>\r\n        <tr>\r\n          <th>Logo</th>\r\n          <th>Naziv</th>\r\n          <th>Lokacija</th>\r\n          <th>Ocena</th>\r\n          <th></th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        <tr v-for=\"factory in sortedFactories\" :key=\"factory.id\" @click=\"viewFactoryProfile(factory)\"></tr>\r\n        <tr v-for=\"factory in sortedFactories\" :key=\"factory.id\">\r\n          <td><img :src=\"getFactoryLogo(factory.logo)\" alt=\"Logo\" class=\"factory-logo\" /></td>\r\n          <td>{{ factory.name }}</td>\r\n          <td>{{ factory.location }}</td>\r\n          <td>{{ factory.rating }}</td>\r\n          <td><button @click=\"viewFactoryProfile(factory)\">VIEW</button></td>\r\n        </tr>\r\n      </tbody>\r\n    </table>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nimport { ref, onMounted, computed } from 'vue';\r\nimport axios from 'axios';\r\nimport router from '@/router'; // Importujte instancu rutera\r\n\r\nconst factories = ref([]);\r\n\r\nasync function loadFactories() {\r\n  try {\r\n    const response = await axios.get('http://localhost:8080/WebShopAppREST/rest/chocolateFactoryObjects');\r\n    factories.value = response.data;\r\n  } catch (error) {\r\n    console.error(\"Greška pri učitavanju fabrika:\", error);\r\n  }\r\n}\r\n\r\nonMounted(() => {\r\n  loadFactories();\r\n});\r\n\r\nconst isFactoryOpen = (factory) => {\r\n  const currentTime = new Date();\r\n  const openingTime = new Date();\r\n  const closingTime = new Date();\r\n  \r\n  const [openHour, openMinute] = factory.openingTime.split(':');\r\n  const [closeHour, closeMinute] = factory.closingTime.split(':');\r\n\r\n  openingTime.setHours(openHour, openMinute);\r\n  closingTime.setHours(closeHour, closeMinute);\r\n\r\n  return currentTime >= openingTime && currentTime <= closingTime;\r\n};\r\n\r\nconst sortedFactories = computed(() => {\r\n  return factories.value.sort((a, b) => {\r\n    const aOpen = isFactoryOpen(a);\r\n    const bOpen = isFactoryOpen(b);\r\n    if (aOpen && !bOpen) return -1;\r\n    if (!aOpen && bOpen) return 1;\r\n    return 0;\r\n  });\r\n});\r\n\r\nconst getFactoryLogo = (logoFileName) => {\r\n  return `/images/${logoFileName}`;\r\n};\r\n\r\nconst viewFactoryProfile = (factory) => {\r\n  const router = useRouter();\r\n  // Preusmeravanje na stranicu profila fabrike i prosleđivanje podataka o fabrici kao props\r\n  router.push({ name: 'factoryprofile', params: { id: factory.id }, props: { factory: factory } });\r\n};\r\n\r\n\r\n</script>\r\n\r\n<style scoped>\r\n.all-factories {\r\n  padding: 20px;\r\n}\r\n\r\ntable {\r\n  width: 100%;\r\n  border-collapse: collapse;\r\n}\r\n\r\nth, td {\r\n  border: 1px solid #ddd;\r\n  padding: 8px;\r\n  text-align: left;\r\n}\r\n\r\nth {\r\n  background-color: #f2f2f2;\r\n}\r\n\r\n.factory-logo {\r\n  width: 100px;\r\n  height: 100px;\r\n}\r\n</style>\r\n"],"mappings":";;;EACOA,KAAK,EAAC;AAAe;gEAEtBC,mBAAA,CAQQ,gB,aAPNA,mBAAA,CAMK,a,aALHA,mBAAA,CAAa,YAAT,MAAI,G,aACRA,mBAAA,CAAc,YAAV,OAAK,G,aACTA,mBAAA,CAAiB,YAAb,UAAQ,G,aACZA,mBAAA,CAAc,YAAV,OAAK,G,aACTA,mBAAA,CAAS,M;mBATnB;mBAAA;mBAAA;;uBACEC,mBAAA,CAsBM,OAtBNC,UAsBM,GArBJF,mBAAA,CAoBQ,gBAnBNG,UAQQ,EACRH,mBAAA,CASQ,iB,kBARNC,mBAAA,CAAmGG,SAAA,QAb3GC,WAAA,CAa8BC,MAAA,CAAAC,eAAe,EAA1BC,OAAO;yBAAlBP,mBAAA,CAAmG;MAA3DQ,GAAG,EAAED,OAAO,CAACE,EAAE;MAAGC,OAAK,EAAAC,MAAA,IAAEN,MAAA,CAAAO,kBAAkB,CAACL,OAAO;4BAbnGM,UAAA;qDAcQb,mBAAA,CAMKG,SAAA,QApBbC,WAAA,CAc8BC,MAAA,CAAAC,eAAe,EAA1BC,OAAO;yBAAlBP,mBAAA,CAMK;MANmCQ,GAAG,EAAED,OAAO,CAACE;QACnDV,mBAAA,CAAoF,aAAhFA,mBAAA,CAA2E;MAArEe,GAAG,EAAET,MAAA,CAAAU,cAAc,CAACR,OAAO,CAACS,IAAI;MAAGC,GAAG,EAAC,MAAM;MAACnB,KAAK,EAAC;4BAfxEoB,UAAA,E,GAgBUnB,mBAAA,CAA2B,YAAAoB,gBAAA,CAApBZ,OAAO,CAACa,IAAI,kBACnBrB,mBAAA,CAA+B,YAAAoB,gBAAA,CAAxBZ,OAAO,CAACc,QAAQ,kBACvBtB,mBAAA,CAA6B,YAAAoB,gBAAA,CAAtBZ,OAAO,CAACe,MAAM,kBACrBvB,mBAAA,CAAmE,aAA/DA,mBAAA,CAA0D;MAAjDW,OAAK,EAAAC,MAAA,IAAEN,MAAA,CAAAO,kBAAkB,CAACL,OAAO;OAAG,MAAI,iBAnB/DgB,UAAA,E","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}