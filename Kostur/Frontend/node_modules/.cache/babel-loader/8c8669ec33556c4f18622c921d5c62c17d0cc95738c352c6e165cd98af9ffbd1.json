{"ast":null,"code":"import { createElementVNode as _createElementVNode, vModelText as _vModelText, withDirectives as _withDirectives, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, vModelSelect as _vModelSelect, vModelCheckbox as _vModelCheckbox, createCommentVNode as _createCommentVNode, createTextVNode as _createTextVNode, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-9dea18fa\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  class: \"all-factories\"\n};\nconst _hoisted_2 = {\n  class: \"search-filters\"\n};\nconst _hoisted_3 = {\n  class: \"row mb-3\"\n};\nconst _hoisted_4 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"label\", {\n  for: \"searchChocolate\",\n  class: \"col-sm-3 col-form-label text-start\"\n}, \"Search by Chocolate Name:\", -1 /* HOISTED */));\nconst _hoisted_5 = {\n  class: \"col-sm-9\"\n};\nconst _hoisted_6 = {\n  class: \"row mb-3\"\n};\nconst _hoisted_7 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"label\", {\n  for: \"searchName\",\n  class: \"col-sm-3 col-form-label text-start\"\n}, \"Search by Factory Name:\", -1 /* HOISTED */));\nconst _hoisted_8 = {\n  class: \"col-sm-9\"\n};\nconst _hoisted_9 = {\n  class: \"row mb-3\"\n};\nconst _hoisted_10 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"label\", {\n  for: \"searchLocation\",\n  class: \"col-sm-3 col-form-label text-start\"\n}, \"Search by Location:\", -1 /* HOISTED */));\nconst _hoisted_11 = {\n  class: \"col-sm-9\"\n};\nconst _hoisted_12 = {\n  class: \"row mb-3\"\n};\nconst _hoisted_13 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"label\", {\n  for: \"searchRating\",\n  class: \"col-sm-3 col-form-label text-start\"\n}, \"Search by Rating:\", -1 /* HOISTED */));\nconst _hoisted_14 = {\n  class: \"col-sm-9\"\n};\nconst _hoisted_15 = {\n  class: \"row mb-3\"\n};\nconst _hoisted_16 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"label\", {\n  for: \"searchChocolateType\",\n  class: \"col-sm-3 col-form-label text-start\"\n}, \"Chocolate Type:\", -1 /* HOISTED */));\nconst _hoisted_17 = {\n  class: \"col-sm-9\"\n};\nconst _hoisted_18 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"option\", {\n  value: \"\"\n}, \"All Types\", -1 /* HOISTED */));\nconst _hoisted_19 = {\n  class: \"row mb-3\"\n};\nconst _hoisted_20 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"label\", {\n  for: \"searchChocolateKind\",\n  class: \"col-sm-3 col-form-label text-start\"\n}, \"Chocolate Kind:\", -1 /* HOISTED */));\nconst _hoisted_21 = {\n  class: \"col-sm-9\"\n};\nconst _hoisted_22 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"option\", {\n  value: \"\"\n}, \"All Kinds\", -1 /* HOISTED */));\nconst _hoisted_23 = {\n  class: \"row mb-3\"\n};\nconst _hoisted_24 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"label\", {\n  for: \"openFactoriesOnly\",\n  class: \"col-sm-3 col-form-label text-start\"\n}, \"Show Only Open Factories:\", -1 /* HOISTED */));\nconst _hoisted_25 = {\n  class: \"col-sm-9\"\n};\nconst _hoisted_26 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"th\", null, \"Logo\", -1 /* HOISTED */));\nconst _hoisted_27 = {\n  key: 0\n};\nconst _hoisted_28 = {\n  key: 0\n};\nconst _hoisted_29 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"th\", null, \"Map\", -1 /* HOISTED */));\nconst _hoisted_30 = {\n  key: 0\n};\nconst _hoisted_31 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"th\", null, \"Actions\", -1 /* HOISTED */));\nconst _hoisted_32 = [\"src\"];\nconst _hoisted_33 = [\"id\"];\nconst _hoisted_34 = [\"onClick\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [_createElementVNode(\"div\", _hoisted_3, [_hoisted_4, _createElementVNode(\"div\", _hoisted_5, [_withDirectives(_createElementVNode(\"input\", {\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $setup.searchChocolate = $event),\n    onInput: $setup.filterFactories,\n    id: \"searchChocolate\",\n    name: \"searchChocolate\",\n    placeholder: \"Search by Chocolate Name\",\n    class: \"form-control\"\n  }, null, 544 /* NEED_HYDRATION, NEED_PATCH */), [[_vModelText, $setup.searchChocolate]])])]), _createElementVNode(\"div\", _hoisted_6, [_hoisted_7, _createElementVNode(\"div\", _hoisted_8, [_withDirectives(_createElementVNode(\"input\", {\n    \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $setup.searchName = $event),\n    onInput: $setup.filterFactories,\n    id: \"searchName\",\n    name: \"searchName\",\n    placeholder: \"Search by Factory Name\",\n    class: \"form-control\"\n  }, null, 544 /* NEED_HYDRATION, NEED_PATCH */), [[_vModelText, $setup.searchName]])])]), _createElementVNode(\"div\", _hoisted_9, [_hoisted_10, _createElementVNode(\"div\", _hoisted_11, [_withDirectives(_createElementVNode(\"input\", {\n    \"onUpdate:modelValue\": _cache[2] || (_cache[2] = $event => $setup.searchLocation = $event),\n    onInput: $setup.filterFactories,\n    id: \"searchLocation\",\n    name: \"searchLocation\",\n    placeholder: \"Search by Location\",\n    class: \"form-control\"\n  }, null, 544 /* NEED_HYDRATION, NEED_PATCH */), [[_vModelText, $setup.searchLocation]])])]), _createElementVNode(\"div\", _hoisted_12, [_hoisted_13, _createElementVNode(\"div\", _hoisted_14, [_withDirectives(_createElementVNode(\"input\", {\n    \"onUpdate:modelValue\": _cache[3] || (_cache[3] = $event => $setup.searchRating = $event),\n    onInput: $setup.filterFactories,\n    id: \"searchRating\",\n    name: \"searchRating\",\n    type: \"number\",\n    step: \"0.1\",\n    placeholder: \"Search by Rating\",\n    class: \"form-control\"\n  }, null, 544 /* NEED_HYDRATION, NEED_PATCH */), [[_vModelText, $setup.searchRating]])])]), _createElementVNode(\"div\", _hoisted_15, [_hoisted_16, _createElementVNode(\"div\", _hoisted_17, [_withDirectives(_createElementVNode(\"select\", {\n    \"onUpdate:modelValue\": _cache[4] || (_cache[4] = $event => $setup.searchChocolateType = $event),\n    onChange: $setup.filterFactories,\n    id: \"searchChocolateType\",\n    name: \"searchChocolateType\",\n    class: \"form-select\"\n  }, [_hoisted_18, (_openBlock(), _createElementBlock(_Fragment, null, _renderList($setup.chocolateTypes, type => {\n    return _createElementVNode(\"option\", {\n      key: type\n    }, _toDisplayString(type), 1 /* TEXT */);\n  }), 64 /* STABLE_FRAGMENT */))], 544 /* NEED_HYDRATION, NEED_PATCH */), [[_vModelSelect, $setup.searchChocolateType]])])]), _createElementVNode(\"div\", _hoisted_19, [_hoisted_20, _createElementVNode(\"div\", _hoisted_21, [_withDirectives(_createElementVNode(\"select\", {\n    \"onUpdate:modelValue\": _cache[5] || (_cache[5] = $event => $setup.searchChocolateKind = $event),\n    onChange: $setup.filterFactories,\n    id: \"searchChocolateKind\",\n    name: \"searchChocolateKind\",\n    class: \"form-select\"\n  }, [_hoisted_22, (_openBlock(), _createElementBlock(_Fragment, null, _renderList($setup.chocolateKinds, kind => {\n    return _createElementVNode(\"option\", {\n      key: kind\n    }, _toDisplayString(kind), 1 /* TEXT */);\n  }), 64 /* STABLE_FRAGMENT */))], 544 /* NEED_HYDRATION, NEED_PATCH */), [[_vModelSelect, $setup.searchChocolateKind]])])]), _createElementVNode(\"div\", _hoisted_23, [_hoisted_24, _createElementVNode(\"div\", _hoisted_25, [_withDirectives(_createElementVNode(\"input\", {\n    type: \"checkbox\",\n    \"onUpdate:modelValue\": _cache[6] || (_cache[6] = $event => $setup.openFactoriesOnly = $event),\n    onChange: $setup.filterFactories,\n    id: \"openFactoriesOnly\",\n    name: \"openFactoriesOnly\"\n  }, null, 544 /* NEED_HYDRATION, NEED_PATCH */), [[_vModelCheckbox, $setup.openFactoriesOnly]])])])]), _createElementVNode(\"table\", null, [_createElementVNode(\"thead\", null, [_createElementVNode(\"tr\", null, [_hoisted_26, _createElementVNode(\"th\", {\n    onClick: _cache[7] || (_cache[7] = $event => $setup.sortBy('name'))\n  }, [_createTextVNode(\"Factory Name \"), $setup.sortKey === 'name' ? (_openBlock(), _createElementBlock(\"span\", _hoisted_27, _toDisplayString($setup.sortOrders.name), 1 /* TEXT */)) : _createCommentVNode(\"v-if\", true)]), _createElementVNode(\"th\", {\n    onClick: _cache[8] || (_cache[8] = $event => $setup.sortBy('location'))\n  }, [_createTextVNode(\"Location \"), $setup.sortKey === 'location' ? (_openBlock(), _createElementBlock(\"span\", _hoisted_28, _toDisplayString($setup.sortOrders.location), 1 /* TEXT */)) : _createCommentVNode(\"v-if\", true)]), _hoisted_29, _createElementVNode(\"th\", {\n    onClick: _cache[9] || (_cache[9] = $event => $setup.sortBy('rating'))\n  }, [_createTextVNode(\"Rating \"), $setup.sortKey === 'rating' ? (_openBlock(), _createElementBlock(\"span\", _hoisted_30, _toDisplayString($setup.sortOrders.rating), 1 /* TEXT */)) : _createCommentVNode(\"v-if\", true)]), _hoisted_31])]), _createElementVNode(\"tbody\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($setup.filteredFactories, factory => {\n    return _openBlock(), _createElementBlock(\"tr\", {\n      key: factory.id\n    }, [_createElementVNode(\"td\", null, [_createElementVNode(\"img\", {\n      src: $setup.getFactoryLogo(factory.logo),\n      alt: \"Logo\",\n      class: \"factory-logo\"\n    }, null, 8 /* PROPS */, _hoisted_32)]), _createElementVNode(\"td\", null, _toDisplayString(factory.name), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(factory.location.address), 1 /* TEXT */), _createElementVNode(\"td\", null, [_createElementVNode(\"div\", {\n      id: 'map-' + factory.id,\n      class: \"map-container\"\n    }, null, 8 /* PROPS */, _hoisted_33)]), _createElementVNode(\"td\", null, _toDisplayString(factory.rating), 1 /* TEXT */), _createElementVNode(\"td\", null, [_createElementVNode(\"button\", {\n      onClick: $event => $setup.viewFactoryProfile(factory.factoryId)\n    }, \"View\", 8 /* PROPS */, _hoisted_34)])]);\n  }), 128 /* KEYED_FRAGMENT */))])])]);\n}","map":{"version":3,"names":["class","_createElementVNode","for","value","key","_createElementBlock","_hoisted_1","_hoisted_2","_hoisted_3","_hoisted_4","_hoisted_5","_cache","$event","$setup","searchChocolate","onInput","filterFactories","id","name","placeholder","_hoisted_6","_hoisted_7","_hoisted_8","searchName","_hoisted_9","_hoisted_10","_hoisted_11","searchLocation","_hoisted_12","_hoisted_13","_hoisted_14","searchRating","type","step","_hoisted_15","_hoisted_16","_hoisted_17","searchChocolateType","onChange","_hoisted_18","_Fragment","_renderList","chocolateTypes","_toDisplayString","_hoisted_19","_hoisted_20","_hoisted_21","searchChocolateKind","_hoisted_22","chocolateKinds","kind","_hoisted_23","_hoisted_24","_hoisted_25","openFactoriesOnly","_hoisted_26","onClick","sortBy","_createTextVNode","sortKey","_hoisted_27","sortOrders","_createCommentVNode","_hoisted_28","location","_hoisted_29","_hoisted_30","rating","_hoisted_31","filteredFactories","factory","src","getFactoryLogo","logo","alt","_hoisted_32","address","_hoisted_33","viewFactoryProfile","factoryId","_hoisted_34"],"sources":["C:\\Users\\PC\\eclipse-workspace\\apache-tomcat-9.0.89\\apache-tomcat-9.0.89\\webapps\\chocolate-factory-2\\Kostur\\Frontend\\front-app\\src\\views\\AllChocolateFactories.vue"],"sourcesContent":["<template>\r\n  <div class=\"all-factories\">\r\n    <div class=\"search-filters\">\r\n      <div class=\"row mb-3\">\r\n        <label for=\"searchChocolate\" class=\"col-sm-3 col-form-label text-start\">Search by Chocolate Name:</label>\r\n        <div class=\"col-sm-9\">\r\n          <input v-model=\"searchChocolate\" @input=\"filterFactories\" id=\"searchChocolate\" name=\"searchChocolate\" placeholder=\"Search by Chocolate Name\" class=\"form-control\" />\r\n        </div>\r\n      </div>\r\n\r\n      <div class=\"row mb-3\">\r\n        <label for=\"searchName\" class=\"col-sm-3 col-form-label text-start\">Search by Factory Name:</label>\r\n        <div class=\"col-sm-9\">\r\n          <input v-model=\"searchName\" @input=\"filterFactories\" id=\"searchName\" name=\"searchName\" placeholder=\"Search by Factory Name\" class=\"form-control\" />\r\n        </div>\r\n      </div>\r\n\r\n      <div class=\"row mb-3\">\r\n        <label for=\"searchLocation\" class=\"col-sm-3 col-form-label text-start\">Search by Location:</label>\r\n        <div class=\"col-sm-9\">\r\n          <input v-model=\"searchLocation\" @input=\"filterFactories\" id=\"searchLocation\" name=\"searchLocation\" placeholder=\"Search by Location\" class=\"form-control\" />\r\n        </div>\r\n      </div>\r\n\r\n      <div class=\"row mb-3\">\r\n        <label for=\"searchRating\" class=\"col-sm-3 col-form-label text-start\">Search by Rating:</label>\r\n        <div class=\"col-sm-9\">\r\n          <input v-model=\"searchRating\" @input=\"filterFactories\" id=\"searchRating\" name=\"searchRating\" type=\"number\" step=\"0.1\" placeholder=\"Search by Rating\" class=\"form-control\" />\r\n        </div>\r\n      </div>\r\n\r\n      <div class=\"row mb-3\">\r\n        <label for=\"searchChocolateType\" class=\"col-sm-3 col-form-label text-start\">Chocolate Type:</label>\r\n        <div class=\"col-sm-9\">\r\n          <select v-model=\"searchChocolateType\" @change=\"filterFactories\" id=\"searchChocolateType\" name=\"searchChocolateType\" class=\"form-select\">\r\n            <option value=\"\">All Types</option>\r\n            <option v-for=\"type in chocolateTypes\" :key=\"type\">{{ type }}</option>\r\n          </select>\r\n        </div>\r\n      </div>\r\n\r\n      <div class=\"row mb-3\">\r\n        <label for=\"searchChocolateKind\" class=\"col-sm-3 col-form-label text-start\">Chocolate Kind:</label>\r\n        <div class=\"col-sm-9\">\r\n          <select v-model=\"searchChocolateKind\" @change=\"filterFactories\" id=\"searchChocolateKind\" name=\"searchChocolateKind\" class=\"form-select\">\r\n            <option value=\"\">All Kinds</option>\r\n            <option v-for=\"kind in chocolateKinds\" :key=\"kind\">{{ kind }}</option>\r\n          </select>\r\n        </div>\r\n      </div>\r\n\r\n      <div class=\"row mb-3\">\r\n        <label for=\"openFactoriesOnly\" class=\"col-sm-3 col-form-label text-start\">Show Only Open Factories:</label>\r\n        <div class=\"col-sm-9\">\r\n          <input type=\"checkbox\" v-model=\"openFactoriesOnly\" @change=\"filterFactories\" id=\"openFactoriesOnly\" name=\"openFactoriesOnly\" />\r\n        </div>\r\n      </div>\r\n    </div>\r\n    \r\n    <table>\r\n      <thead>\r\n        <tr>\r\n          <th>Logo</th>\r\n          <th @click=\"sortBy('name')\">Factory Name <span v-if=\"sortKey === 'name'\">{{ sortOrders.name }}</span></th>\r\n          <th @click=\"sortBy('location')\">Location <span v-if=\"sortKey === 'location'\">{{ sortOrders.location }}</span></th>\r\n          <th>Map</th>\r\n          <th @click=\"sortBy('rating')\">Rating <span v-if=\"sortKey === 'rating'\">{{ sortOrders.rating }}</span></th>\r\n          <th>Actions</th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        <tr v-for=\"factory in filteredFactories\" :key=\"factory.id\">\r\n          <td><img :src=\"getFactoryLogo(factory.logo)\" alt=\"Logo\" class=\"factory-logo\" /></td>\r\n          <td>{{ factory.name }}</td>\r\n          <td>{{ factory.location.address }}</td>\r\n          <td><div :id=\"'map-' + factory.id\" class=\"map-container\"></div></td>\r\n          <td>{{ factory.rating }}</td>\r\n          <td>\r\n            <button @click=\"viewFactoryProfile(factory.factoryId)\">View</button>\r\n          </td>\r\n        </tr>\r\n      </tbody>\r\n    </table>\r\n  </div>\r\n</template>\r\n\r\n\r\n<script setup>\r\nimport { ref, onMounted, computed, nextTick, watch } from 'vue';\r\nimport axios from 'axios';\r\nimport { useRouter } from 'vue-router';\r\nimport { Map, View } from 'ol';\r\nimport TileLayer from 'ol/layer/Tile';\r\nimport OSM from 'ol/source/OSM';\r\nimport Feature from 'ol/Feature';\r\nimport Point from 'ol/geom/Point';\r\nimport { fromLonLat } from 'ol/proj';\r\nimport VectorLayer from 'ol/layer/Vector';\r\nimport { Vector as VectorSource } from 'ol/source';\r\nimport { Icon, Style } from 'ol/style';\r\n\r\nconst router = useRouter();\r\nconst factories = ref([]);\r\nconst chocolates = ref([]);\r\nconst searchName = ref('');\r\nconst searchChocolate = ref('');\r\nconst searchLocation = ref('');\r\nconst searchRating = ref('');\r\nconst searchChocolateType = ref('');\r\nconst searchChocolateKind = ref('');\r\nconst openFactoriesOnly = ref(false);\r\n\r\nconst chocolateTypes = ['PLAIN', 'FOR_COOKING', 'FOR_DRINKING'];\r\nconst chocolateKinds = ['DARK', 'MILK', 'WHITE'];\r\n\r\nconst sortKey = ref('');\r\nconst sortOrders = ref({\r\n  name: 1,\r\n  location: 1,\r\n  rating: 1\r\n});\r\n\r\nasync function loadFactories() {\r\n  try {\r\n    const response = await axios.get('http://localhost:8080/WebShopAppREST/rest/chocolateFactoryObjects');\r\n    factories.value = response.data;\r\n    console.log(\"Loaded factories:\", factories.value);  // Debug log\r\n    await nextTick(); // Wait for the DOM to update\r\n    initializeMaps(); // Initialize maps after the DOM update\r\n  } catch (error) {\r\n    console.error(\"Error loading factories:\", error);\r\n  }\r\n}\r\n\r\nasync function loadChocolates() {\r\n  try {\r\n    const response = await axios.get('http://localhost:8080/WebShopAppREST/rest/chocolates');\r\n    chocolates.value = response.data;\r\n    console.log(\"Loaded chocolates:\", chocolates.value);  // Debug log\r\n  } catch (error) {\r\n    console.error(\"Error loading chocolates:\", error);\r\n  }\r\n}\r\n\r\nonMounted(() => {\r\n  loadFactories();\r\n  loadChocolates();\r\n});\r\n\r\nconst isFactoryOpen = (factory) => {\r\n  return factory.status === 'OPEN';\r\n};\r\n\r\nconst sortedFactories = computed(() => {\r\n  return factories.value.sort((a, b) => {\r\n    const aValue = a.name.toLowerCase();\r\n    const bValue = b.name.toLowerCase();\r\n    return aValue.localeCompare(bValue); // Default sorting by name\r\n  });\r\n});\r\n\r\nconst filteredFactories = computed(() => {\r\n  return sortedFactories.value.filter(factory => {\r\n    const matchesName = factory.name.toLowerCase().includes(searchName.value.toLowerCase());\r\n    const matchesLocation = factory.location.address.toLowerCase().includes(searchLocation.value.toLowerCase());\r\n    const matchesRating = searchRating.value === '' || factory.rating >= parseFloat(searchRating.value);\r\n    const isOpenFactory = !openFactoriesOnly.value || isFactoryOpen(factory);\r\n\r\n    // Filter factories based on chocolates\r\n    const matchesChocolate = searchChocolate.value === '' || chocolates.value.some(chocolate =>\r\n      chocolate.name.toLowerCase().includes(searchChocolate.value.toLowerCase()) && chocolate.factoryId === factory.id\r\n    );\r\n    const matchesChocolateType = !searchChocolateType.value || chocolates.value.some(chocolate =>\r\n      chocolate.type === searchChocolateType.value && chocolate.factoryId === factory.id\r\n    );\r\n    const matchesChocolateKind = !searchChocolateKind.value || chocolates.value.some(chocolate =>\r\n      chocolate.kind === searchChocolateKind.value && chocolate.factoryId === factory.id\r\n    );\r\n\r\n    return matchesName && matchesLocation && matchesRating && isOpenFactory &&\r\n           matchesChocolate && matchesChocolateType && matchesChocolateKind;\r\n  });\r\n});\r\n\r\nconst getFactoryLogo = (logoFileName) => {\r\n  return `/images/${logoFileName}`;\r\n};\r\n\r\nconst viewFactoryProfile = (factoryId) => {\r\n  if (factoryId) {\r\n    router.push({ name: 'factoryprofile', params: { id: factoryId }});\r\n  } else {\r\n    console.error('factoryId nije definiran ili je null.');\r\n  }\r\n};\r\n\r\nconst filterFactories = () => {\r\n  // No need for explicit return here, computed property `filteredFactories` will handle it\r\n  console.log(\"Search Parameters:\");\r\n  console.log(\"Chocolate Name:\", searchChocolate.value);\r\n  console.log(\"Factory Name:\", searchName.value);\r\n  console.log(\"Location:\", searchLocation.value);\r\n  console.log(\"Rating:\", searchRating.value);\r\n  console.log(\"Chocolate Type:\", searchChocolateType.value);\r\n  console.log(\"Chocolate Kind:\", searchChocolateKind.value);\r\n  console.log(\"Show Only Open Factories:\", openFactoriesOnly.value);\r\n};\r\n\r\nconst sortBy = key => {\r\n  sortKey.value = key;\r\n  sortOrders.value[key] = sortOrders.value[key] * -1;\r\n  filteredFactories.value.sort((a, b) => {\r\n    const modifier = sortOrders.value[key];\r\n    if (key === 'name' || key === 'location') {\r\n      const aValue = key === 'location' ? a.location.address.toLowerCase() : a[key].toLowerCase();\r\n      const bValue = key === 'location' ? b.location.address.toLowerCase() : b[key].toLowerCase();\r\n      return modifier * aValue.localeCompare(bValue);\r\n    } else {\r\n      return modifier * (a[key] - b[key]);\r\n    }\r\n  });\r\n};\r\n\r\nfunction initializeMaps() {\r\n  // Remove all existing maps first\r\n  document.querySelectorAll('.map-container').forEach((mapContainer) => {\r\n    mapContainer.innerHTML = '';\r\n  });\r\n\r\n  filteredFactories.value.forEach(factory => {\r\n    const mapContainer = document.getElementById(`map-${factory.id}`);\r\n    if (mapContainer) {\r\n      const coordinates = fromLonLat([factory.location.longitude, factory.location.latitude]);\r\n      const map = new Map({\r\n        target: mapContainer,\r\n        layers: [\r\n          new TileLayer({\r\n            source: new OSM()\r\n          }),\r\n          new VectorLayer({\r\n            source: new VectorSource({\r\n              features: [\r\n                new Feature({\r\n                  geometry: new Point(coordinates)\r\n                })\r\n              ]\r\n            }),\r\n            style: new Style({\r\n              image: new Icon({\r\n                src: '/images/map-marker.png',\r\n                imgSize: [32, 32],\r\n                anchor: [0.5, 1]\r\n              })\r\n            })\r\n          })\r\n        ],\r\n        view: new View({\r\n          center: coordinates,\r\n          zoom: 15\r\n        })\r\n      });\r\n    } else {\r\n      console.log(`Map container for factory ${factory.name}: ${mapContainer}`);\r\n    }\r\n  });\r\n}\r\n\r\nwatch(filteredFactories, async () => {\r\n  await nextTick();\r\n  initializeMaps();\r\n});\r\n</script>\r\n\r\n<style scoped>\r\n.all-factories {\r\n  padding: 20px;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n}\r\n\r\n.search-filters {\r\n  margin-bottom: 20px;\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  gap: 10px;\r\n  padding: 10px;\r\n  border: 1px solid #e0e0e0;\r\n  border-radius: 4px;\r\n  justify-content: center; /* Centrira sadržaj unutar kontejnera */\r\n}\r\n\r\n.search-filters button {\r\n  padding: 10px 20px;\r\n  background-color: #f5e7f5; /* Svetlija lila boja za dugmad */\r\n  color: #333;\r\n  border: none;\r\n  border-radius: 4px;\r\n  cursor: pointer;\r\n  transition: background-color 0.3s ease;\r\n}\r\n\r\n.search-filters button:hover {\r\n  background-color: #d8bfd8; /* Tamnija nijansa lila boje prilikom hovera */\r\n  color: #fff;\r\n}\r\n\r\ntable {\r\n  width: 100%;\r\n  border-collapse: collapse;\r\n  margin: 0 auto;\r\n  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);\r\n}\r\n\r\nth, td {\r\n  border: 1px solid #e0e0e0;\r\n  padding: 12px;\r\n  text-align: left;\r\n}\r\n\r\nth {\r\n  background-color: #f5e7f5; /* Svetlija lila boja za pozadinu zaglavlja */\r\n  color: #333;\r\n  font-weight: 600;\r\n  text-transform: uppercase;\r\n  cursor: pointer;\r\n}\r\n\r\ntd {\r\n  background-color: #fff;\r\n}\r\n\r\n.factory-logo {\r\n  width: 120px;\r\n  height: 60px;\r\n  object-fit: cover;\r\n  border-radius: 4px;\r\n}\r\n\r\n.map-container {\r\n  width: 80px;\r\n  height: 80px;\r\n  object-fit: cover;\r\n  border-radius: 50%;\r\n  overflow: hidden;\r\n}\r\n</style>\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}