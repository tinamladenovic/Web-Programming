{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport axios from 'axios';\nimport { Map, View } from 'ol';\nimport TileLayer from 'ol/layer/Tile';\nimport OSM from 'ol/source/OSM';\nimport Feature from 'ol/Feature';\nimport Point from 'ol/geom/Point';\nimport { fromLonLat } from 'ol/proj';\nimport VectorLayer from 'ol/layer/Vector';\nimport { Vector as VectorSource } from 'ol/source';\nimport { Icon, Style } from 'ol/style';\nexport default {\n  props: {\n    id: String\n  },\n  data() {\n    return {\n      factory: null,\n      chocolates: [],\n      currentUser: null,\n      isManager: false\n    };\n  },\n  methods: {\n    async loadFactory() {\n      try {\n        const response = await axios.get(`http://localhost:8080/WebShopAppREST/rest/chocolateFactoryObjects/${this.id}`);\n        this.factory = response.data;\n        console.log('Podaci o fabrici:', this.factory);\n        await this.loadChocolates();\n        this.$nextTick(this.initializeMap); // Inicijalizujte mapu nakon učitavanja podataka o fabrici i renderovanja DOM-a\n      } catch (error) {\n        console.error(\"Greška pri učitavanju fabrike:\", error);\n      }\n    },\n    async loadChocolates() {\n      if (this.factory) {\n        try {\n          const response = await axios.get(`http://localhost:8080/WebShopAppREST/rest/chocolates`);\n          // Filtriranje čokolada koje pripadaju trenutnoj fabrici\n          this.chocolates = response.data.filter(chocolate => chocolate.factoryId === this.factory.factoryId);\n          console.log('Podaci o čokoladama:', this.chocolates);\n        } catch (error) {\n          console.error(\"Greška pri učitavanju čokolada:\", error);\n        }\n      }\n    },\n    async fetchCurrentUser() {\n      try {\n        const response = await axios.get('http://localhost:8080/WebShopAppREST/rest/currentUser');\n        this.currentUser = response.data;\n        if (this.currentUser && this.currentUser.role === 'MANAGER') {\n          this.isManager = true;\n          console.log('Korisnik je menadžer:', this.isManager);\n        } else if (this.currentUser) {\n          console.log('Korisnik nije menadžer:', this.currentUser.role);\n        } else {\n          console.log('Nema podataka o trenutnom korisniku.');\n        }\n      } catch (error) {\n        console.error('Greška pri dobavljanju trenutnog korisnika:', error);\n      }\n    },\n    addWorker() {\n      this.$router.push({\n        name: 'addworker',\n        params: {\n          factoryId: this.factory.factoryId\n        }\n      });\n    },\n    addChocolate() {\n      this.$router.push({\n        name: 'addchocolate',\n        params: {\n          factoryId: this.factory.factoryId\n        }\n      });\n    },\n    getFactoryLogo(logoFileName) {\n      return `/images/${logoFileName}`;\n    },\n    initializeMap() {\n      if (this.factory) {\n        const coordinates = fromLonLat([this.factory.location.longitude, this.factory.location.latitude]);\n        const map = new Map({\n          target: 'factory-map',\n          layers: [new TileLayer({\n            source: new OSM()\n          }), new VectorLayer({\n            source: new VectorSource({\n              features: [new Feature({\n                geometry: new Point(coordinates)\n              })]\n            }),\n            style: new Style({\n              image: new Icon({\n                src: '/images/map-marker.png',\n                imgSize: [32, 32],\n                anchor: [0.5, 1]\n              })\n            })\n          })],\n          view: new View({\n            center: coordinates,\n            zoom: 15\n          })\n        });\n      }\n    }\n  },\n  async mounted() {\n    await this.fetchCurrentUser();\n    await this.loadFactory();\n  }\n};","map":{"version":3,"names":["axios","Map","View","TileLayer","OSM","Feature","Point","fromLonLat","VectorLayer","Vector","VectorSource","Icon","Style","props","id","String","data","factory","chocolates","currentUser","isManager","methods","loadFactory","response","get","console","log","loadChocolates","$nextTick","initializeMap","error","filter","chocolate","factoryId","fetchCurrentUser","role","addWorker","$router","push","name","params","addChocolate","getFactoryLogo","logoFileName","coordinates","location","longitude","latitude","map","target","layers","source","features","geometry","style","image","src","imgSize","anchor","view","center","zoom","mounted"],"sources":["C:\\Users\\PC\\eclipse-workspace\\apache-tomcat-9.0.89\\apache-tomcat-9.0.89\\webapps\\chocolate-factory-2\\Kostur\\Frontend\\front-app\\src\\views\\FactoryProfile.vue"],"sourcesContent":["<template>\r\n  <div class=\"factory-profile\" v-if=\"factory\">\r\n    <div class=\"factory-info\">\r\n      <img :src=\"getFactoryLogo(factory.logo)\" alt=\"Logo\" class=\"factory-logo\" />\r\n      <h2>{{ factory.name }}</h2>\r\n      <form>\r\n        <div class=\"form-group\">\r\n          <label for=\"openingTime\">Radno vreme:</label>\r\n          <input type=\"text\" id=\"openingTime\" v-model=\"factory.openingTime\" readonly name=\"openingTime\" autocomplete=\"off\">\r\n          <span> - </span>\r\n          <input type=\"text\" id=\"closingTime\" v-model=\"factory.closingTime\" readonly name=\"closingTime\" autocomplete=\"off\">\r\n        </div>\r\n        <div class=\"form-group\">\r\n          <label for=\"status\">Status:</label>\r\n          <input type=\"text\" id=\"status\" v-model=\"factory.status\" readonly name=\"status\" autocomplete=\"off\">\r\n        </div>\r\n        <div class=\"form-group\">\r\n          <label for=\"location\">Lokacija:</label>\r\n          <input type=\"text\" id=\"location\" v-model=\"factory.location.address\" readonly name=\"location\" autocomplete=\"address-line1\">\r\n        </div>\r\n        <div id=\"factory-map\" class=\"map-container\"></div>\r\n        <div class=\"form-group\" v-if=\"factory.rating !== undefined\">\r\n          <label for=\"rating\">Ocena:</label>\r\n          <input type=\"text\" id=\"rating\" v-model=\"factory.rating\" readonly name=\"rating\" autocomplete=\"off\">\r\n        </div>\r\n      </form>\r\n    </div>\r\n\r\n    <div class=\"factory-chocolates\">\r\n      <h3>Čokolade koje fabrika nudi:</h3>\r\n      <table>\r\n        <thead>\r\n          <tr>\r\n            <th>Naziv</th>\r\n            <th>Cena</th>\r\n            <th>Tip</th>\r\n            <th>Vrsta</th>\r\n            <th>Težina</th>\r\n            <th>Opis</th>\r\n            <th>Status</th>\r\n            <th>Količina</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          <tr v-for=\"chocolate in chocolates\" :key=\"chocolate.id\" class=\"chocolate-item\">\r\n            <td>{{ chocolate.name }}</td>\r\n            <td>{{ chocolate.price }}</td>\r\n            <td>{{ chocolate.type }}</td>\r\n            <td>{{ chocolate.kind }}</td>\r\n            <td>{{ chocolate.weight }}g</td>\r\n            <td>{{ chocolate.description }}</td>\r\n            <td>{{ chocolate.status }}</td>\r\n            <td>{{ chocolate.quantity }}</td>\r\n          </tr>\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n\r\n    <div class=\"factory-comments\">\r\n      <h3>Komentari:</h3>\r\n      <ul v-if=\"factory.comments && factory.comments.length\">\r\n        <li v-for=\"comment in factory.comments\" :key=\"comment.id\" class=\"comment-item\">\r\n          <div class=\"comment-header\">\r\n            <strong>Korisnik:</strong> {{ comment.user }}\r\n          </div>\r\n          <div class=\"comment-text\">\r\n            <p>{{ comment.text }}</p>\r\n          </div>\r\n        </li>\r\n      </ul>\r\n      <p v-else>Nema dostupnih komentara.</p>\r\n    </div>\r\n\r\n    <!-- Dugmad za dodavanje radnika i čokolade - vidljivo samo menadžeru -->\r\n    <div class=\"actions\" v-if=\"isManager\">\r\n      <button @click=\"addWorker\" class=\"add-worker-button\">ADD WORKER</button>\r\n      <button @click=\"addChocolate\" class=\"add-worker-button\">ADD CHOCOLATE</button>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from 'axios';\r\nimport { Map, View } from 'ol';\r\nimport TileLayer from 'ol/layer/Tile';\r\nimport OSM from 'ol/source/OSM';\r\nimport Feature from 'ol/Feature';\r\nimport Point from 'ol/geom/Point';\r\nimport { fromLonLat } from 'ol/proj';\r\nimport VectorLayer from 'ol/layer/Vector';\r\nimport { Vector as VectorSource } from 'ol/source';\r\nimport { Icon, Style } from 'ol/style';\r\n\r\nexport default {\r\n  props: {\r\n    id: String,\r\n  },\r\n  data() {\r\n    return {\r\n      factory: null,\r\n      chocolates: [],\r\n      currentUser: null,\r\n      isManager: false,\r\n    };\r\n  },\r\n  methods: {\r\n    async loadFactory() {\r\n      try {\r\n        const response = await axios.get(`http://localhost:8080/WebShopAppREST/rest/chocolateFactoryObjects/${this.id}`);\r\n        this.factory = response.data;\r\n        console.log('Podaci o fabrici:', this.factory);\r\n        await this.loadChocolates();\r\n        this.$nextTick(this.initializeMap); // Inicijalizujte mapu nakon učitavanja podataka o fabrici i renderovanja DOM-a\r\n      } catch (error) {\r\n        console.error(\"Greška pri učitavanju fabrike:\", error);\r\n      }\r\n    },\r\n    async loadChocolates() {\r\n      if (this.factory) {\r\n        try {\r\n          const response = await axios.get(`http://localhost:8080/WebShopAppREST/rest/chocolates`);\r\n          // Filtriranje čokolada koje pripadaju trenutnoj fabrici\r\n          this.chocolates = response.data.filter(chocolate => chocolate.factoryId === this.factory.factoryId);\r\n          console.log('Podaci o čokoladama:', this.chocolates);\r\n        } catch (error) {\r\n          console.error(\"Greška pri učitavanju čokolada:\", error);\r\n        }\r\n      }\r\n    },\r\n    async fetchCurrentUser() {\r\n    try {\r\n      const response = await axios.get('http://localhost:8080/WebShopAppREST/rest/currentUser');\r\n      this.currentUser = response.data;\r\n\r\n      if (this.currentUser && this.currentUser.role === 'MANAGER') {\r\n        this.isManager = true;\r\n        console.log('Korisnik je menadžer:', this.isManager);\r\n      } else if (this.currentUser) {\r\n        console.log('Korisnik nije menadžer:', this.currentUser.role);\r\n      } else {\r\n        console.log('Nema podataka o trenutnom korisniku.');\r\n      }\r\n    } catch (error) {\r\n      console.error('Greška pri dobavljanju trenutnog korisnika:', error);\r\n    }\r\n  },\r\n    addWorker() {\r\n      this.$router.push({ name: 'addworker', params: { factoryId: this.factory.factoryId } });\r\n    },\r\n    addChocolate() {\r\n      this.$router.push({ name: 'addchocolate', params: { factoryId: this.factory.factoryId } });\r\n    },\r\n    getFactoryLogo(logoFileName) {\r\n      return `/images/${logoFileName}`;\r\n    },\r\n    initializeMap() {\r\n      if (this.factory) {\r\n        const coordinates = fromLonLat([this.factory.location.longitude, this.factory.location.latitude]);\r\n        const map = new Map({\r\n          target: 'factory-map',\r\n          layers: [\r\n            new TileLayer({\r\n              source: new OSM()\r\n            }),\r\n            new VectorLayer({\r\n              source: new VectorSource({\r\n                features: [\r\n                  new Feature({\r\n                    geometry: new Point(coordinates)\r\n                  })\r\n                ]\r\n              }),\r\n              style: new Style({\r\n                image: new Icon({\r\n                  src: '/images/map-marker.png',\r\n                  imgSize: [32, 32],\r\n                  anchor: [0.5, 1]\r\n                })\r\n              })\r\n            })\r\n          ],\r\n          view: new View({\r\n            center: coordinates,\r\n            zoom: 15\r\n          })\r\n        });\r\n      }\r\n    },\r\n  },\r\n  async mounted() {\r\n    await this.fetchCurrentUser();\r\n    await this.loadFactory();\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.factory-profile {\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 20px;\r\n  padding: 20px;\r\n}\r\n\r\n.factory-info,\r\n.factory-chocolates,\r\n.factory-comments {\r\n  border: 1px solid #ccc;\r\n  border-radius: 8px;\r\n  padding: 20px;\r\n}\r\n\r\n.factory-info {\r\n  max-width: 300px;\r\n  margin: 0 auto;\r\n}\r\n\r\n.factory-chocolates {\r\n  max-width: 700px;\r\n  margin: 0 auto;\r\n}\r\n\r\n.factory-comments {\r\n  max-width: 300px;\r\n  margin: 0 auto;\r\n}\r\n\r\n.map-container {\r\n  width: 100%;\r\n  height: 300px;\r\n  margin-top: 20px;\r\n}\r\n\r\n.factory-logo {\r\n  max-width: 100%;\r\n  height: auto;\r\n  margin-bottom: 10px;\r\n}\r\n\r\n.actions {\r\n  display: flex;\r\n  justify-content: center;\r\n  margin-top: 20px;\r\n}\r\n\r\n.add-worker-button {\r\n  padding: 10px 20px;\r\n  background-color: #f5e7f5;\r\n  color: #333;\r\n  border: none;\r\n  border-radius: 4px;\r\n  cursor: pointer;\r\n  transition: background-color 0.3s ease;\r\n  margin: 5px;\r\n}\r\n\r\n.add-worker-button:hover {\r\n  background-color: #d8bfd8;\r\n  color: #fff;\r\n}\r\n</style>\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}