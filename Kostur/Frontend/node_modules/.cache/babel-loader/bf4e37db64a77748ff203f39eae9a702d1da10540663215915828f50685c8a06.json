{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nexport default {\n  data() {\n    return {\n      username: '',\n      password: '',\n      errorMessage: ''\n    };\n  },\n  methods: {\n    async handleLogin() {\n      try {\n        const response = await fetch('http://localhost:8080/WebShopAppREST/rest/login', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            username: this.username,\n            password: this.password\n          }),\n          credentials: 'include'\n        });\n        if (!response.ok) {\n          throw new Error('Invalid username or password');\n        }\n        const userData = await response.json();\n        localStorage.setItem('user', JSON.stringify(userData));\n        const currentUserResponse = await fetch('http://localhost:8080/WebShopAppREST/rest/currentUser', {\n          method: 'GET',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          credentials: 'include'\n        });\n        if (!currentUserResponse.ok) {\n          throw new Error('Failed to fetch current user');\n        }\n        const currentUserData = await currentUserResponse.json();\n        this.$router.push('/');\n      } catch (error) {\n        this.errorMessage = error.message || 'An error occurred. Please try again.';\n      }\n    }\n  }\n};","map":{"version":3,"names":["data","username","password","errorMessage","methods","handleLogin","response","fetch","method","headers","body","JSON","stringify","credentials","ok","Error","userData","json","localStorage","setItem","currentUserResponse","currentUserData","$router","push","error","message"],"sources":["C:\\Users\\PC\\eclipse-workspace\\apache-tomcat-9.0.89\\apache-tomcat-9.0.89\\webapps\\chocolate-factory-2\\Kostur\\Frontend\\front-app\\src\\views\\Login.vue"],"sourcesContent":["<template>\r\n  <div class=\"d-flex justify-content-center align-items-center vh-100\">\r\n    <div class=\"card p-5 shadow-lg\" style=\"width: 100%; max-width: 500px;\">\r\n      \r\n      <form @submit.prevent=\"handleLogin\">\r\n        <div class=\"row mb-3\">\r\n          <label for=\"username\" class=\"col-sm-3 col-form-label text-start\">Username</label>\r\n          <div class=\"col-sm-9\">\r\n            <input type=\"text\" id=\"username\" v-model=\"username\" class=\"form-control\" required autocomplete=\"username\">\r\n          </div>\r\n        </div>\r\n        <div class=\"row mb-3\">\r\n          <label for=\"password\" class=\"col-sm-3 col-form-label text-start\">Password</label>\r\n          <div class=\"col-sm-9\">\r\n            <input type=\"password\" id=\"password\" v-model=\"password\" class=\"form-control\" required autocomplete=\"current-password\">\r\n          </div>\r\n        </div>\r\n        <div class=\"row\">\r\n          <div class=\"col-12\">\r\n            <button type=\"submit\" class=\"btn btn-primary w-100\">Login</button>\r\n          </div>\r\n        </div>\r\n      </form>\r\n      <p v-if=\"errorMessage\" class=\"text-danger text-center mt-3\">{{ errorMessage }}</p>\r\n      <p class=\"text-center mt-3\">\r\n        New user? <router-link to=\"/register\">Register here</router-link>\r\n      </p>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  data() {\r\n    return {\r\n      username: '',\r\n      password: '',\r\n      errorMessage: ''\r\n    };\r\n  },\r\n  methods: {\r\n    async handleLogin() {\r\n      try {\r\n        const response = await fetch('http://localhost:8080/WebShopAppREST/rest/login', {\r\n          method: 'POST',\r\n          headers: {\r\n            'Content-Type': 'application/json'\r\n          },\r\n          body: JSON.stringify({\r\n            username: this.username,\r\n            password: this.password\r\n          }),\r\n          credentials: 'include'\r\n        });\r\n\r\n        if (!response.ok) {\r\n          throw new Error('Invalid username or password');\r\n        }\r\n\r\n        const userData = await response.json();\r\n        localStorage.setItem('user', JSON.stringify(userData));\r\n\r\n        const currentUserResponse = await fetch('http://localhost:8080/WebShopAppREST/rest/currentUser', {\r\n          method: 'GET',\r\n          headers: {\r\n            'Content-Type': 'application/json'\r\n          },\r\n          credentials: 'include'\r\n        });\r\n\r\n        if (!currentUserResponse.ok) {\r\n          throw new Error('Failed to fetch current user');\r\n        }\r\n\r\n        const currentUserData = await currentUserResponse.json();\r\n        this.$router.push('/');\r\n      } catch (error) {\r\n        this.errorMessage = error.message || 'An error occurred. Please try again.';\r\n      }\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.d-flex {\r\n  min-height: 100vh;\r\n}\r\n\r\n.card {\r\n  border: 1px solid #ddd;\r\n  border-radius: 8px;\r\n  padding: 30px;\r\n  background-color: #f0f8ff;\r\n  box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);\r\n}\r\n\r\nh2 {\r\n  color: #343a40;\r\n  text-align: center;\r\n  font-size: 2rem;\r\n  font-weight: normal;\r\n}\r\n\r\n.form-label {\r\n  font-weight: normal;\r\n}\r\n\r\ninput[type=\"text\"],\r\ninput[type=\"password\"],\r\nbutton {\r\n  border: 1px solid #007bff;\r\n  border-radius: 8px;\r\n  font-size: 1.1rem;\r\n  transition: border-color 0.3s ease, box-shadow 0.3s ease;\r\n}\r\n\r\ninput[type=\"text\"]:focus,\r\ninput[type=\"password\"]:focus {\r\n  border-color: #007bff;\r\n  box-shadow: 0 0 5px rgba(0, 123, 255, 0.25);\r\n}\r\n\r\nbutton[type=\"submit\"],\r\n.btn-outline-secondary {\r\n  border: 1px solid #007bff;\r\n  background-color: transparent;\r\n  color: #007bff;\r\n  font-size: 1.1rem;\r\n  transition: background-color 0.3s ease, color 0.3s ease;\r\n}\r\n\r\nbutton[type=\"submit\"]:hover,\r\n.btn-outline-secondary:hover {\r\n  background-color: #007bff;\r\n  color: white;\r\n}\r\n\r\nbutton[type=\"submit\"] {\r\n  margin-top: 20px;\r\n}\r\n\r\n.text-danger {\r\n  margin-top: 15px;\r\n}\r\n</style>\r\n"],"mappings":";AAgCA,eAAe;EACbA,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,QAAQ,EAAE,EAAE;MACZC,QAAQ,EAAE,EAAE;MACZC,YAAY,EAAE;IAChB,CAAC;EACH,CAAC;EACDC,OAAO,EAAE;IACP,MAAMC,WAAWA,CAAA,EAAG;MAClB,IAAI;QACF,MAAMC,QAAO,GAAI,MAAMC,KAAK,CAAC,iDAAiD,EAAE;UAC9EC,MAAM,EAAE,MAAM;UACdC,OAAO,EAAE;YACP,cAAc,EAAE;UAClB,CAAC;UACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;YACnBX,QAAQ,EAAE,IAAI,CAACA,QAAQ;YACvBC,QAAQ,EAAE,IAAI,CAACA;UACjB,CAAC,CAAC;UACFW,WAAW,EAAE;QACf,CAAC,CAAC;QAEF,IAAI,CAACP,QAAQ,CAACQ,EAAE,EAAE;UAChB,MAAM,IAAIC,KAAK,CAAC,8BAA8B,CAAC;QACjD;QAEA,MAAMC,QAAO,GAAI,MAAMV,QAAQ,CAACW,IAAI,CAAC,CAAC;QACtCC,YAAY,CAACC,OAAO,CAAC,MAAM,EAAER,IAAI,CAACC,SAAS,CAACI,QAAQ,CAAC,CAAC;QAEtD,MAAMI,mBAAkB,GAAI,MAAMb,KAAK,CAAC,uDAAuD,EAAE;UAC/FC,MAAM,EAAE,KAAK;UACbC,OAAO,EAAE;YACP,cAAc,EAAE;UAClB,CAAC;UACDI,WAAW,EAAE;QACf,CAAC,CAAC;QAEF,IAAI,CAACO,mBAAmB,CAACN,EAAE,EAAE;UAC3B,MAAM,IAAIC,KAAK,CAAC,8BAA8B,CAAC;QACjD;QAEA,MAAMM,eAAc,GAAI,MAAMD,mBAAmB,CAACH,IAAI,CAAC,CAAC;QACxD,IAAI,CAACK,OAAO,CAACC,IAAI,CAAC,GAAG,CAAC;MACxB,EAAE,OAAOC,KAAK,EAAE;QACd,IAAI,CAACrB,YAAW,GAAIqB,KAAK,CAACC,OAAM,IAAK,sCAAsC;MAC7E;IACF;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}