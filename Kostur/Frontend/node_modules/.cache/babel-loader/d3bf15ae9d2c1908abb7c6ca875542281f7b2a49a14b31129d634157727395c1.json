{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nexport default {\n  data() {\n    return {\n      username: '',\n      password: '',\n      errorMessage: ''\n    };\n  },\n  methods: {\n    async handleLogin() {\n      try {\n        const response = await fetch('http://localhost:8080/WebShopAppREST/rest/login', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            username: this.username,\n            password: this.password\n          })\n        });\n        const data = await response.json();\n        if (response.ok) {\n          // Handle successful login\n          console.log('Login successful:', data);\n          this.$router.push('/dashboard'); // Redirect to dashboard or any other route\n        } else {\n          // Handle errors\n          this.errorMessage = data.error || 'Invalid username or password';\n        }\n      } catch (error) {\n        console.error('Error logging in:', error);\n        this.errorMessage = 'An error occurred. Please try again.';\n      }\n    }\n  }\n};","map":{"version":3,"names":["data","username","password","errorMessage","methods","handleLogin","response","fetch","method","headers","body","JSON","stringify","json","ok","console","log","$router","push","error"],"sources":["C:\\Users\\PC\\eclipse-workspace\\apache-tomcat-9.0.89\\apache-tomcat-9.0.89\\webapps\\chocolate-factory-2\\Kostur\\Frontend\\front-app\\src\\views\\Login.vue"],"sourcesContent":["<template>\r\n    <div class=\"login-container\">\r\n      <h2>Login</h2>\r\n      <form @submit.prevent=\"handleLogin\">\r\n        <div class=\"form-group\">\r\n          <label for=\"username\">Username</label>\r\n          <input type=\"text\" id=\"username\" v-model=\"username\" required>\r\n        </div>\r\n        <div class=\"form-group\">\r\n          <label for=\"password\">Password</label>\r\n          <input type=\"password\" id=\"password\" v-model=\"password\" required>\r\n        </div>\r\n        <button type=\"submit\">Login</button>\r\n      </form>\r\n      <p v-if=\"errorMessage\" class=\"error\">{{ errorMessage }}</p>\r\n      <p>\r\n        New user? <router-link to=\"/register\">Register here</router-link>\r\n      </p>\r\n    </div>\r\n  </template>\r\n  \r\n  <script>\r\n  export default {\r\n    data() {\r\n      return {\r\n        username: '',\r\n        password: '',\r\n        errorMessage: ''\r\n      };\r\n    },\r\n    methods: {\r\n      async handleLogin() {\r\n        try {\r\n          const response = await fetch('http://localhost:8080/WebShopAppREST/rest/login', {\r\n            method: 'POST',\r\n            headers: {\r\n              'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify({\r\n              username: this.username,\r\n              password: this.password\r\n            })\r\n          });\r\n  \r\n          const data = await response.json();\r\n  \r\n          if (response.ok) {\r\n            // Handle successful login\r\n            console.log('Login successful:', data);\r\n            this.$router.push('/dashboard'); // Redirect to dashboard or any other route\r\n          } else {\r\n            // Handle errors\r\n            this.errorMessage = data.error || 'Invalid username or password';\r\n          }\r\n        } catch (error) {\r\n          console.error('Error logging in:', error);\r\n          this.errorMessage = 'An error occurred. Please try again.';\r\n        }\r\n      }\r\n    }\r\n  };\r\n  </script>\r\n  \r\n  <style scoped>\r\n  .login-container {\r\n    max-width: 400px;\r\n    margin: 0 auto;\r\n    padding: 20px;\r\n    border: 1px solid #ccc;\r\n    border-radius: 10px;\r\n  }\r\n  \r\n  .form-group {\r\n    margin-bottom: 15px;\r\n  }\r\n  \r\n  label {\r\n    display: block;\r\n    margin-bottom: 5px;\r\n  }\r\n  \r\n  input {\r\n    width: 100%;\r\n    padding: 8px;\r\n    box-sizing: border-box;\r\n  }\r\n  \r\n  button {\r\n    width: 100%;\r\n    padding: 10px;\r\n    background-color: #007bff;\r\n    color: white;\r\n    border: none;\r\n    border-radius: 5px;\r\n    cursor: pointer;\r\n  }\r\n  \r\n  button:hover {\r\n    background-color: #0056b3;\r\n  }\r\n  \r\n  .error {\r\n    color: red;\r\n    margin-top: 10px;\r\n  }\r\n  </style>\r\n  "],"mappings":";AAsBE,eAAe;EACbA,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,QAAQ,EAAE,EAAE;MACZC,QAAQ,EAAE,EAAE;MACZC,YAAY,EAAE;IAChB,CAAC;EACH,CAAC;EACDC,OAAO,EAAE;IACP,MAAMC,WAAWA,CAAA,EAAG;MAClB,IAAI;QACF,MAAMC,QAAO,GAAI,MAAMC,KAAK,CAAC,iDAAiD,EAAE;UAC9EC,MAAM,EAAE,MAAM;UACdC,OAAO,EAAE;YACP,cAAc,EAAE;UAClB,CAAC;UACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;YACnBX,QAAQ,EAAE,IAAI,CAACA,QAAQ;YACvBC,QAAQ,EAAE,IAAI,CAACA;UACjB,CAAC;QACH,CAAC,CAAC;QAEF,MAAMF,IAAG,GAAI,MAAMM,QAAQ,CAACO,IAAI,CAAC,CAAC;QAElC,IAAIP,QAAQ,CAACQ,EAAE,EAAE;UACf;UACAC,OAAO,CAACC,GAAG,CAAC,mBAAmB,EAAEhB,IAAI,CAAC;UACtC,IAAI,CAACiB,OAAO,CAACC,IAAI,CAAC,YAAY,CAAC,EAAE;QACnC,OAAO;UACL;UACA,IAAI,CAACf,YAAW,GAAIH,IAAI,CAACmB,KAAI,IAAK,8BAA8B;QAClE;MACF,EAAE,OAAOA,KAAK,EAAE;QACdJ,OAAO,CAACI,KAAK,CAAC,mBAAmB,EAAEA,KAAK,CAAC;QACzC,IAAI,CAAChB,YAAW,GAAI,sCAAsC;MAC5D;IACF;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}