{"ast":null,"code":"import { createElementVNode as _createElementVNode, vModelText as _vModelText, withDirectives as _withDirectives, withModifiers as _withModifiers, openBlock as _openBlock, createElementBlock as _createElementBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-6c1efe63\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  class: \"add-factory\"\n};\nconst _hoisted_2 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"h2\", null, \"Create New Chocolate Factory\", -1 /* HOISTED */));\nconst _hoisted_3 = {\n  class: \"form-group\"\n};\nconst _hoisted_4 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"label\", {\n  for: \"factoryName\"\n}, \"Factory Name:\", -1 /* HOISTED */));\nconst _hoisted_5 = {\n  class: \"form-group\"\n};\nconst _hoisted_6 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"label\", {\n  for: \"factoryLocation\"\n}, \"Location:\", -1 /* HOISTED */));\nconst _hoisted_7 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"div\", {\n  id: \"map\",\n  class: \"map\"\n}, null, -1 /* HOISTED */));\nconst _hoisted_8 = {\n  class: \"form-group\"\n};\nconst _hoisted_9 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"label\", {\n  for: \"workingHours\"\n}, \"Working Hours:\", -1 /* HOISTED */));\nconst _hoisted_10 = {\n  class: \"time-inputs\"\n};\nconst _hoisted_11 = {\n  class: \"form-group\"\n};\nconst _hoisted_12 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"label\", {\n  for: \"logoFile\"\n}, \"Select Logo:\", -1 /* HOISTED */));\nconst _hoisted_13 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"button\", {\n  type: \"submit\"\n}, \"Create Factory\", -1 /* HOISTED */));\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_hoisted_2, _createElementVNode(\"form\", {\n    onSubmit: _withModifiers($setup.submitFactory, [\"prevent\"])\n  }, [_createElementVNode(\"div\", _hoisted_3, [_hoisted_4, _withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    id: \"factoryName\",\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $setup.factory.name = $event),\n    required: \"\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $setup.factory.name]])]), _createElementVNode(\"div\", _hoisted_5, [_hoisted_6, _hoisted_7, _withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    id: \"factoryLocation\",\n    \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $setup.factory.location = $event),\n    readonly: \"\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $setup.factory.location]])]), _createElementVNode(\"div\", _hoisted_8, [_hoisted_9, _createElementVNode(\"div\", _hoisted_10, [_withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    id: \"openingTime\",\n    \"onUpdate:modelValue\": _cache[2] || (_cache[2] = $event => $setup.factory.openingTime = $event),\n    placeholder: \"Opening Time\",\n    required: \"\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $setup.factory.openingTime]]), _withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    id: \"closingTime\",\n    \"onUpdate:modelValue\": _cache[3] || (_cache[3] = $event => $setup.factory.closingTime = $event),\n    placeholder: \"Closing Time\",\n    required: \"\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $setup.factory.closingTime]])])]), _createElementVNode(\"div\", _hoisted_11, [_hoisted_12, _createElementVNode(\"input\", {\n    type: \"file\",\n    id: \"logoFile\",\n    onChange: $setup.handleLogoUpload,\n    accept: \"image/*\",\n    required: \"\"\n  }, null, 32 /* NEED_HYDRATION */)]), _hoisted_13], 32 /* NEED_HYDRATION */)]);\n}","map":{"version":3,"names":["class","_createElementVNode","for","id","type","_createElementBlock","_hoisted_1","_hoisted_2","onSubmit","_withModifiers","$setup","submitFactory","_hoisted_3","_hoisted_4","_cache","$event","factory","name","required","_hoisted_5","_hoisted_6","_hoisted_7","location","readonly","_hoisted_8","_hoisted_9","_hoisted_10","openingTime","placeholder","closingTime","_hoisted_11","_hoisted_12","onChange","handleLogoUpload","accept","_hoisted_13"],"sources":["C:\\Users\\PC\\eclipse-workspace\\apache-tomcat-9.0.89\\apache-tomcat-9.0.89\\webapps\\chocolate-factory-2\\Kostur\\Frontend\\front-app\\src\\views\\AddFactory.vue"],"sourcesContent":["<template>\r\n    <div class=\"add-factory\">\r\n      <h2>Create New Chocolate Factory</h2>\r\n      <form @submit.prevent=\"submitFactory\">\r\n        <div class=\"form-group\">\r\n          <label for=\"factoryName\">Factory Name:</label>\r\n          <input type=\"text\" id=\"factoryName\" v-model=\"factory.name\" required>\r\n        </div>\r\n        <div class=\"form-group\">\r\n          <label for=\"factoryLocation\">Location:</label>\r\n          <div id=\"map\" class=\"map\"></div>\r\n          <input type=\"text\" id=\"factoryLocation\" v-model=\"factory.location\" readonly>\r\n        </div>\r\n        <div class=\"form-group\">\r\n          <label for=\"workingHours\">Working Hours:</label>\r\n          <div class=\"time-inputs\">\r\n            <input type=\"text\" id=\"openingTime\" v-model=\"factory.openingTime\" placeholder=\"Opening Time\" required>\r\n            <input type=\"text\" id=\"closingTime\" v-model=\"factory.closingTime\" placeholder=\"Closing Time\" required>\r\n          </div>\r\n        </div>\r\n        <div class=\"form-group\">\r\n          <label for=\"logoFile\">Select Logo:</label>\r\n          <input type=\"file\" id=\"logoFile\" @change=\"handleLogoUpload\" accept=\"image/*\" required>\r\n        </div>\r\n        <button type=\"submit\">Create Factory</button>\r\n      </form>\r\n    </div>\r\n  </template>\r\n  \r\n  <script setup>\r\n  import { ref, onMounted } from 'vue';\r\n  import { useRouter } from 'vue-router';\r\n  import axios from 'axios';\r\n  import Map from 'ol/Map';\r\n  import View from 'ol/View';\r\n  import TileLayer from 'ol/layer/Tile';\r\n  import OSM from 'ol/source/OSM';\r\n  import { fromLonLat, transform } from 'ol/proj';\r\n  import { Feature } from 'ol';\r\n  import { Point } from 'ol/geom';\r\n  import { Vector as VectorLayer } from 'ol/layer';\r\n  import { Vector as VectorSource } from 'ol/source';\r\n  import { Style, Icon } from 'ol/style';\r\n  \r\n  const router = useRouter();\r\n  const factory = ref({\r\n    name: '',\r\n    location: '',\r\n    openingTime: '',\r\n    closingTime: '',\r\n    logo: null\r\n  });\r\n  \r\n  let map;\r\n  let markerLayer;\r\n  const iconStyle = new Style({\r\n    image: new Icon({\r\n      anchor: [0.5, 1],\r\n      src: 'https://openlayers.org/en/latest/examples/data/icon.png'\r\n    })\r\n  });\r\n  \r\n  // Initialize OpenLayers map\r\n  onMounted(() => {\r\n    markerLayer = new VectorLayer({\r\n      source: new VectorSource(),\r\n      style: iconStyle\r\n    });\r\n  \r\n    map = new Map({\r\n      target: 'map',\r\n      layers: [\r\n        new TileLayer({\r\n          source: new OSM()\r\n        }),\r\n        markerLayer\r\n      ],\r\n      view: new View({\r\n        center: fromLonLat([0, 0]),\r\n        zoom: 2\r\n      })\r\n    });\r\n  \r\n    map.on('click', function (event) {\r\n      const coordinate = event.coordinate;\r\n      const location = transform(coordinate, 'EPSG:3857', 'EPSG:4326');\r\n      factory.value.location = `${location[1]}, ${location[0]}`;\r\n  \r\n      const marker = new Feature({\r\n        geometry: new Point(coordinate)\r\n      });\r\n  \r\n      markerLayer.getSource().clear(); // Clear existing markers\r\n      markerLayer.getSource().addFeature(marker);\r\n    });\r\n  });\r\n  \r\n  const handleLogoUpload = (event) => {\r\n    const file = event.target.files[0];\r\n    factory.value.logo = file;\r\n  };\r\n  \r\n  const submitFactory = async () => {\r\n    try {\r\n      const formData = new FormData();\r\n      formData.append('name', factory.value.name);\r\n      formData.append('location', factory.value.location);\r\n      formData.append('openingTime', factory.value.openingTime);\r\n      formData.append('closingTime', factory.value.closingTime);\r\n      formData.append('logo', factory.value.logo);\r\n  \r\n      await axios.post('http://localhost:8080/WebShopAppREST/rest/chocolateFactoryObjects', formData, {\r\n        headers: {\r\n          'Content-Type': 'multipart/form-data'\r\n        }\r\n      });\r\n  \r\n      // Redirect to factory list or other appropriate route after successful creation\r\n      router.push('/factories'); // Example route, adjust as needed\r\n    } catch (error) {\r\n      console.error('Error creating factory:', error);\r\n      // Handle error state or display error message\r\n    }\r\n  };\r\n  </script>\r\n  \r\n  <style scoped>\r\n  .add-factory {\r\n    max-width: 600px;\r\n    margin: 20px auto;\r\n    padding: 20px;\r\n    border: 1px solid #ccc;\r\n    border-radius: 8px;\r\n  }\r\n  \r\n  .form-group {\r\n    margin-bottom: 15px;\r\n  }\r\n  \r\n  label {\r\n    display: block;\r\n    margin-bottom: 5px;\r\n  }\r\n  \r\n  input[type=\"text\"], input[type=\"file\"] {\r\n    width: 100%;\r\n    padding: 8px;\r\n    font-size: 16px;\r\n  }\r\n  \r\n  button {\r\n    padding: 10px 20px;\r\n    background-color: #007bff;\r\n    color: #fff;\r\n    border: none;\r\n    cursor: pointer;\r\n    font-size: 16px;\r\n    border-radius: 4px;\r\n  }\r\n  \r\n  button:hover {\r\n    background-color: #0056b3;\r\n  }\r\n  \r\n  .map {\r\n    height: 300px; /* Adjust height as needed */\r\n    width: 100%;\r\n  }\r\n  </style>\r\n  "],"mappings":";;;EACSA,KAAK,EAAC;AAAa;gEACtBC,mBAAA,CAAqC,YAAjC,8BAA4B;;EAEzBD,KAAK,EAAC;AAAY;gEACrBC,mBAAA,CAA8C;EAAvCC,GAAG,EAAC;AAAa,GAAC,eAAa;;EAGnCF,KAAK,EAAC;AAAY;gEACrBC,mBAAA,CAA8C;EAAvCC,GAAG,EAAC;AAAiB,GAAC,WAAS;gEACtCD,mBAAA,CAAgC;EAA3BE,EAAE,EAAC,KAAK;EAACH,KAAK,EAAC;;;EAGjBA,KAAK,EAAC;AAAY;gEACrBC,mBAAA,CAAgD;EAAzCC,GAAG,EAAC;AAAc,GAAC,gBAAc;;EACnCF,KAAK,EAAC;AAAa;;EAKrBA,KAAK,EAAC;AAAY;iEACrBC,mBAAA,CAA0C;EAAnCC,GAAG,EAAC;AAAU,GAAC,cAAY;iEAGpCD,mBAAA,CAA6C;EAArCG,IAAI,EAAC;AAAQ,GAAC,gBAAc;;uBAvBxCC,mBAAA,CAyBM,OAzBNC,UAyBM,GAxBJC,UAAqC,EACrCN,mBAAA,CAsBO;IAtBAO,QAAM,EAHnBC,cAAA,CAG6BC,MAAA,CAAAC,aAAa;MAClCV,mBAAA,CAGM,OAHNW,UAGM,GAFJC,UAA8C,E,gBAC9CZ,mBAAA,CAAoE;IAA7DG,IAAI,EAAC,MAAM;IAACD,EAAE,EAAC,aAAa;IAN7C,uBAAAW,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAMuDL,MAAA,CAAAM,OAAO,CAACC,IAAI,GAAAF,MAAA;IAAEG,QAAQ,EAAR;iDAAdR,MAAA,CAAAM,OAAO,CAACC,IAAI,E,KAE3DhB,mBAAA,CAIM,OAJNkB,UAIM,GAHJC,UAA8C,EAC9CC,UAAgC,E,gBAChCpB,mBAAA,CAA4E;IAArEG,IAAI,EAAC,MAAM;IAACD,EAAE,EAAC,iBAAiB;IAXjD,uBAAAW,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAW2DL,MAAA,CAAAM,OAAO,CAACM,QAAQ,GAAAP,MAAA;IAAEQ,QAAQ,EAAR;iDAAlBb,MAAA,CAAAM,OAAO,CAACM,QAAQ,E,KAEnErB,mBAAA,CAMM,OANNuB,UAMM,GALJC,UAAgD,EAChDxB,mBAAA,CAGM,OAHNyB,WAGM,G,gBAFJzB,mBAAA,CAAsG;IAA/FG,IAAI,EAAC,MAAM;IAACD,EAAE,EAAC,aAAa;IAhB/C,uBAAAW,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAgByDL,MAAA,CAAAM,OAAO,CAACW,WAAW,GAAAZ,MAAA;IAAEa,WAAW,EAAC,cAAc;IAACV,QAAQ,EAAR;iDAAhDR,MAAA,CAAAM,OAAO,CAACW,WAAW,E,mBAChE1B,mBAAA,CAAsG;IAA/FG,IAAI,EAAC,MAAM;IAACD,EAAE,EAAC,aAAa;IAjB/C,uBAAAW,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAiByDL,MAAA,CAAAM,OAAO,CAACa,WAAW,GAAAd,MAAA;IAAEa,WAAW,EAAC,cAAc;IAACV,QAAQ,EAAR;iDAAhDR,MAAA,CAAAM,OAAO,CAACa,WAAW,E,OAGpE5B,mBAAA,CAGM,OAHN6B,WAGM,GAFJC,WAA0C,EAC1C9B,mBAAA,CAAsF;IAA/EG,IAAI,EAAC,MAAM;IAACD,EAAE,EAAC,UAAU;IAAE6B,QAAM,EAAEtB,MAAA,CAAAuB,gBAAgB;IAAEC,MAAM,EAAC,SAAS;IAAChB,QAAQ,EAAR;uCAE/EiB,WAA6C,C","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}