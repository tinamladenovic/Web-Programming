{"ast":null,"code":"/**\n * @module ol/colorlike\n */\nimport ImageState from './ImageState.js';\nimport { createCanvasContext2D } from './dom.js';\nimport { get as getIconImage } from './style/IconImage.js';\nimport { shared as iconCache } from './style/IconImageCache.js';\nimport { toString } from './color.js';\n\n/**\n * @typedef {Object} PatternDescriptor\n * @property {string} src Pattern image URL\n * @property {import(\"./color.js\").Color|string} [color] Color to tint the pattern with.\n * @property {import(\"./size.js\").Size} [size] Size of the desired slice from the pattern image.\n * Use this together with `offset` when the pattern image is a sprite sheet.\n * @property {import(\"./size.js\").Size} [offset] Offset of the desired slice from the pattern image.\n * Use this together with `size` when the pattern image is a sprite sheet.\n */\n\n/**\n * A type accepted by CanvasRenderingContext2D.fillStyle\n * or CanvasRenderingContext2D.strokeStyle.\n * Represents a color, [CanvasPattern](https://developer.mozilla.org/en-US/docs/Web/API/CanvasPattern),\n * or [CanvasGradient](https://developer.mozilla.org/en-US/docs/Web/API/CanvasGradient). The origin for\n * patterns and gradients as fill style is an increment of 512 css pixels from map coordinate\n * `[0, 0]`. For seamless repeat patterns, width and height of the pattern image\n * must be a factor of two (2, 4, 8, ..., 512).\n *\n * @typedef {string|CanvasPattern|CanvasGradient} ColorLike\n * @api\n */\n\n/**\n * @param {import(\"./color.js\").Color|ColorLike|PatternDescriptor|null} color Color.\n * @return {ColorLike|null} The color as an {@link ol/colorlike~ColorLike}.\n * @api\n */\nexport function asColorLike(color) {\n  if (!color) {\n    return null;\n  }\n  if (Array.isArray(color)) {\n    return toString(color);\n  }\n  if (typeof color === 'object' && 'src' in color) {\n    return asCanvasPattern(color);\n  }\n  return color;\n}\n\n/**\n * @param {PatternDescriptor} pattern Pattern descriptor.\n * @return {CanvasPattern|null} Canvas pattern or null if the pattern referenced in the\n * PatternDescriptor was not found in the icon image cache.\n */\nfunction asCanvasPattern(pattern) {\n  if (!pattern.offset || !pattern.size) {\n    return iconCache.getPattern(pattern.src, 'anonymous', pattern.color);\n  }\n  const cacheKey = pattern.src + ':' + pattern.offset;\n  const canvasPattern = iconCache.getPattern(cacheKey, undefined, pattern.color);\n  if (canvasPattern) {\n    return canvasPattern;\n  }\n  const iconImage = iconCache.get(pattern.src, 'anonymous', null);\n  if (iconImage.getImageState() !== ImageState.LOADED) {\n    return null;\n  }\n  const patternCanvasContext = createCanvasContext2D(pattern.size[0], pattern.size[1]);\n  patternCanvasContext.drawImage(iconImage.getImage(1), pattern.offset[0], pattern.offset[1], pattern.size[0], pattern.size[1], 0, 0, pattern.size[0], pattern.size[1]);\n  getIconImage(patternCanvasContext.canvas, cacheKey, undefined, ImageState.LOADED, pattern.color, true);\n  return iconCache.getPattern(cacheKey, undefined, pattern.color);\n}","map":{"version":3,"names":["ImageState","createCanvasContext2D","get","getIconImage","shared","iconCache","toString","asColorLike","color","Array","isArray","asCanvasPattern","pattern","offset","size","getPattern","src","cacheKey","canvasPattern","undefined","iconImage","getImageState","LOADED","patternCanvasContext","drawImage","getImage","canvas"],"sources":["C:/Users/PC/eclipse-workspace/apache-tomcat-9.0.89/apache-tomcat-9.0.89/webapps/chocolate-factory-2/Kostur/Frontend/front-app/node_modules/ol/colorlike.js"],"sourcesContent":["/**\n * @module ol/colorlike\n */\nimport ImageState from './ImageState.js';\nimport {createCanvasContext2D} from './dom.js';\nimport {get as getIconImage} from './style/IconImage.js';\nimport {shared as iconCache} from './style/IconImageCache.js';\nimport {toString} from './color.js';\n\n/**\n * @typedef {Object} PatternDescriptor\n * @property {string} src Pattern image URL\n * @property {import(\"./color.js\").Color|string} [color] Color to tint the pattern with.\n * @property {import(\"./size.js\").Size} [size] Size of the desired slice from the pattern image.\n * Use this together with `offset` when the pattern image is a sprite sheet.\n * @property {import(\"./size.js\").Size} [offset] Offset of the desired slice from the pattern image.\n * Use this together with `size` when the pattern image is a sprite sheet.\n */\n\n/**\n * A type accepted by CanvasRenderingContext2D.fillStyle\n * or CanvasRenderingContext2D.strokeStyle.\n * Represents a color, [CanvasPattern](https://developer.mozilla.org/en-US/docs/Web/API/CanvasPattern),\n * or [CanvasGradient](https://developer.mozilla.org/en-US/docs/Web/API/CanvasGradient). The origin for\n * patterns and gradients as fill style is an increment of 512 css pixels from map coordinate\n * `[0, 0]`. For seamless repeat patterns, width and height of the pattern image\n * must be a factor of two (2, 4, 8, ..., 512).\n *\n * @typedef {string|CanvasPattern|CanvasGradient} ColorLike\n * @api\n */\n\n/**\n * @param {import(\"./color.js\").Color|ColorLike|PatternDescriptor|null} color Color.\n * @return {ColorLike|null} The color as an {@link ol/colorlike~ColorLike}.\n * @api\n */\nexport function asColorLike(color) {\n  if (!color) {\n    return null;\n  }\n  if (Array.isArray(color)) {\n    return toString(color);\n  }\n  if (typeof color === 'object' && 'src' in color) {\n    return asCanvasPattern(color);\n  }\n  return color;\n}\n\n/**\n * @param {PatternDescriptor} pattern Pattern descriptor.\n * @return {CanvasPattern|null} Canvas pattern or null if the pattern referenced in the\n * PatternDescriptor was not found in the icon image cache.\n */\nfunction asCanvasPattern(pattern) {\n  if (!pattern.offset || !pattern.size) {\n    return iconCache.getPattern(pattern.src, 'anonymous', pattern.color);\n  }\n\n  const cacheKey = pattern.src + ':' + pattern.offset;\n\n  const canvasPattern = iconCache.getPattern(\n    cacheKey,\n    undefined,\n    pattern.color,\n  );\n  if (canvasPattern) {\n    return canvasPattern;\n  }\n\n  const iconImage = iconCache.get(pattern.src, 'anonymous', null);\n  if (iconImage.getImageState() !== ImageState.LOADED) {\n    return null;\n  }\n  const patternCanvasContext = createCanvasContext2D(\n    pattern.size[0],\n    pattern.size[1],\n  );\n  patternCanvasContext.drawImage(\n    iconImage.getImage(1),\n    pattern.offset[0],\n    pattern.offset[1],\n    pattern.size[0],\n    pattern.size[1],\n    0,\n    0,\n    pattern.size[0],\n    pattern.size[1],\n  );\n  getIconImage(\n    patternCanvasContext.canvas,\n    cacheKey,\n    undefined,\n    ImageState.LOADED,\n    pattern.color,\n    true,\n  );\n  return iconCache.getPattern(cacheKey, undefined, pattern.color);\n}\n"],"mappings":"AAAA;AACA;AACA;AACA,OAAOA,UAAU,MAAM,iBAAiB;AACxC,SAAQC,qBAAqB,QAAO,UAAU;AAC9C,SAAQC,GAAG,IAAIC,YAAY,QAAO,sBAAsB;AACxD,SAAQC,MAAM,IAAIC,SAAS,QAAO,2BAA2B;AAC7D,SAAQC,QAAQ,QAAO,YAAY;;AAEnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,OAAO,SAASC,WAAWA,CAACC,KAAK,EAAE;EACjC,IAAI,CAACA,KAAK,EAAE;IACV,OAAO,IAAI;EACb;EACA,IAAIC,KAAK,CAACC,OAAO,CAACF,KAAK,CAAC,EAAE;IACxB,OAAOF,QAAQ,CAACE,KAAK,CAAC;EACxB;EACA,IAAI,OAAOA,KAAK,KAAK,QAAQ,IAAI,KAAK,IAAIA,KAAK,EAAE;IAC/C,OAAOG,eAAe,CAACH,KAAK,CAAC;EAC/B;EACA,OAAOA,KAAK;AACd;;AAEA;AACA;AACA;AACA;AACA;AACA,SAASG,eAAeA,CAACC,OAAO,EAAE;EAChC,IAAI,CAACA,OAAO,CAACC,MAAM,IAAI,CAACD,OAAO,CAACE,IAAI,EAAE;IACpC,OAAOT,SAAS,CAACU,UAAU,CAACH,OAAO,CAACI,GAAG,EAAE,WAAW,EAAEJ,OAAO,CAACJ,KAAK,CAAC;EACtE;EAEA,MAAMS,QAAQ,GAAGL,OAAO,CAACI,GAAG,GAAG,GAAG,GAAGJ,OAAO,CAACC,MAAM;EAEnD,MAAMK,aAAa,GAAGb,SAAS,CAACU,UAAU,CACxCE,QAAQ,EACRE,SAAS,EACTP,OAAO,CAACJ,KACV,CAAC;EACD,IAAIU,aAAa,EAAE;IACjB,OAAOA,aAAa;EACtB;EAEA,MAAME,SAAS,GAAGf,SAAS,CAACH,GAAG,CAACU,OAAO,CAACI,GAAG,EAAE,WAAW,EAAE,IAAI,CAAC;EAC/D,IAAII,SAAS,CAACC,aAAa,CAAC,CAAC,KAAKrB,UAAU,CAACsB,MAAM,EAAE;IACnD,OAAO,IAAI;EACb;EACA,MAAMC,oBAAoB,GAAGtB,qBAAqB,CAChDW,OAAO,CAACE,IAAI,CAAC,CAAC,CAAC,EACfF,OAAO,CAACE,IAAI,CAAC,CAAC,CAChB,CAAC;EACDS,oBAAoB,CAACC,SAAS,CAC5BJ,SAAS,CAACK,QAAQ,CAAC,CAAC,CAAC,EACrBb,OAAO,CAACC,MAAM,CAAC,CAAC,CAAC,EACjBD,OAAO,CAACC,MAAM,CAAC,CAAC,CAAC,EACjBD,OAAO,CAACE,IAAI,CAAC,CAAC,CAAC,EACfF,OAAO,CAACE,IAAI,CAAC,CAAC,CAAC,EACf,CAAC,EACD,CAAC,EACDF,OAAO,CAACE,IAAI,CAAC,CAAC,CAAC,EACfF,OAAO,CAACE,IAAI,CAAC,CAAC,CAChB,CAAC;EACDX,YAAY,CACVoB,oBAAoB,CAACG,MAAM,EAC3BT,QAAQ,EACRE,SAAS,EACTnB,UAAU,CAACsB,MAAM,EACjBV,OAAO,CAACJ,KAAK,EACb,IACF,CAAC;EACD,OAAOH,SAAS,CAACU,UAAU,CAACE,QAAQ,EAAEE,SAAS,EAAEP,OAAO,CAACJ,KAAK,CAAC;AACjE","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}