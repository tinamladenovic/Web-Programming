{"ast":null,"code":"import { createElementVNode as _createElementVNode, vModelText as _vModelText, withDirectives as _withDirectives, vModelSelect as _vModelSelect, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, createStaticVNode as _createStaticVNode, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-4af0b479\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"h2\", null, \"Registered Users\", -1 /* HOISTED */));\nconst _hoisted_2 = {\n  class: \"filters\"\n};\nconst _hoisted_3 = /*#__PURE__*/_createStaticVNode(\"<option value=\\\"\\\" data-v-4af0b479>All Roles</option><option value=\\\"ADMIN\\\" data-v-4af0b479>ADMIN</option><option value=\\\"CUSTOMER\\\" data-v-4af0b479>CUSTOMER</option><option value=\\\"MANAGER\\\" data-v-4af0b479>MANAGER</option><option value=\\\"WORKER\\\" data-v-4af0b479>WORKER</option>\", 5);\nconst _hoisted_8 = [_hoisted_3];\nconst _hoisted_9 = /*#__PURE__*/_createStaticVNode(\"<option value=\\\"\\\" data-v-4af0b479>All Customer Types</option><option value=\\\"NO_TYPE\\\" data-v-4af0b479>NO_TYPE</option><option value=\\\"BRONZE\\\" data-v-4af0b479>BRONZE</option><option value=\\\"SILVER\\\" data-v-4af0b479>SILVER</option><option value=\\\"GOLD\\\" data-v-4af0b479>GOLD</option>\", 5);\nconst _hoisted_14 = [_hoisted_9];\nconst _hoisted_15 = {\n  class: \"table\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", null, [_hoisted_1, _createElementVNode(\"div\", _hoisted_2, [_withDirectives(_createElementVNode(\"input\", {\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $setup.searchFirstName = $event),\n    id: \"search-first-name\",\n    placeholder: \"Search by first name\",\n    class: \"form-control\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $setup.searchFirstName]]), _withDirectives(_createElementVNode(\"input\", {\n    \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $setup.searchLastName = $event),\n    id: \"search-last-name\",\n    placeholder: \"Search by last name\",\n    class: \"form-control\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $setup.searchLastName]]), _withDirectives(_createElementVNode(\"input\", {\n    \"onUpdate:modelValue\": _cache[2] || (_cache[2] = $event => $setup.searchUsername = $event),\n    id: \"search-username\",\n    placeholder: \"Search by username\",\n    class: \"form-control\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $setup.searchUsername]]), _withDirectives(_createElementVNode(\"select\", {\n    \"onUpdate:modelValue\": _cache[3] || (_cache[3] = $event => $setup.filterRole = $event),\n    id: \"filter-role\",\n    class: \"form-control\"\n  }, [..._hoisted_8], 512 /* NEED_PATCH */), [[_vModelSelect, $setup.filterRole]]), _withDirectives(_createElementVNode(\"select\", {\n    \"onUpdate:modelValue\": _cache[4] || (_cache[4] = $event => $setup.filterCustomerType = $event),\n    id: \"filter-customer-type\",\n    class: \"form-control\"\n  }, [..._hoisted_14], 512 /* NEED_PATCH */), [[_vModelSelect, $setup.filterCustomerType]])]), _createElementVNode(\"table\", _hoisted_15, [_createElementVNode(\"thead\", null, [_createElementVNode(\"tr\", null, [_createElementVNode(\"th\", {\n    onClick: _cache[5] || (_cache[5] = $event => $setup.sortBy('firstName'))\n  }, \"First Name\"), _createElementVNode(\"th\", {\n    onClick: _cache[6] || (_cache[6] = $event => $setup.sortBy('lastName'))\n  }, \"Last Name\"), _createElementVNode(\"th\", {\n    onClick: _cache[7] || (_cache[7] = $event => $setup.sortBy('username'))\n  }, \"Username\"), _createElementVNode(\"th\", {\n    onClick: _cache[8] || (_cache[8] = $event => $setup.sortBy('earnedPoints'))\n  }, \"Earned Points\")])]), _createElementVNode(\"tbody\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($setup.filteredUsers, user => {\n    return _openBlock(), _createElementBlock(\"tr\", {\n      key: user.id\n    }, [_createElementVNode(\"td\", null, _toDisplayString(user.firstName), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(user.lastName), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(user.username), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(user.earnedPoints), 1 /* TEXT */)]);\n  }), 128 /* KEYED_FRAGMENT */))])])]);\n}","map":{"version":3,"names":["_createElementVNode","class","_createStaticVNode","_hoisted_3","_hoisted_9","_createElementBlock","_hoisted_1","_hoisted_2","_cache","$event","$setup","searchFirstName","id","placeholder","searchLastName","searchUsername","filterRole","_hoisted_8","filterCustomerType","_hoisted_14","_hoisted_15","onClick","sortBy","_Fragment","_renderList","filteredUsers","user","key","_toDisplayString","firstName","lastName","username","earnedPoints"],"sources":["C:\\Users\\PC\\eclipse-workspace\\apache-tomcat-9.0.89\\apache-tomcat-9.0.89\\webapps\\chocolate-factory-2\\Kostur\\Frontend\\front-app\\src\\views\\UserTable.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <h2>Registered Users</h2>\r\n    <div class=\"filters\">\r\n      <input v-model=\"searchFirstName\" id=\"search-first-name\" placeholder=\"Search by first name\" class=\"form-control\" />\r\n      <input v-model=\"searchLastName\" id=\"search-last-name\" placeholder=\"Search by last name\" class=\"form-control\" />\r\n      <input v-model=\"searchUsername\" id=\"search-username\" placeholder=\"Search by username\" class=\"form-control\" />\r\n      <select v-model=\"filterRole\" id=\"filter-role\" class=\"form-control\">\r\n        <option value=\"\">All Roles</option>\r\n        <option value=\"ADMIN\">ADMIN</option>\r\n        <option value=\"CUSTOMER\">CUSTOMER</option>\r\n        <option value=\"MANAGER\">MANAGER</option>\r\n        <option value=\"WORKER\">WORKER</option>\r\n      </select>\r\n      <select v-model=\"filterCustomerType\" id=\"filter-customer-type\" class=\"form-control\">\r\n        <option value=\"\">All Customer Types</option>\r\n        <option value=\"NO_TYPE\">NO_TYPE</option>\r\n        <option value=\"BRONZE\">BRONZE</option>\r\n        <option value=\"SILVER\">SILVER</option>\r\n        <option value=\"GOLD\">GOLD</option>\r\n      </select>\r\n    </div>\r\n    <table class=\"table\">\r\n      <thead>\r\n        <tr>\r\n          <th @click=\"sortBy('firstName')\">First Name</th>\r\n          <th @click=\"sortBy('lastName')\">Last Name</th>\r\n          <th @click=\"sortBy('username')\">Username</th>\r\n          <th @click=\"sortBy('earnedPoints')\">Earned Points</th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        <tr v-for=\"user in filteredUsers\" :key=\"user.id\">\r\n          <td>{{ user.firstName }}</td>\r\n          <td>{{ user.lastName }}</td>\r\n          <td>{{ user.username }}</td>\r\n          <td>{{ user.earnedPoints }}</td>\r\n        </tr>\r\n      </tbody>\r\n    </table>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from 'axios';\r\nimport { ref, computed, onMounted } from 'vue';\r\n\r\nexport default {\r\n  setup() {\r\n    const users = ref([]);\r\n    const searchFirstName = ref('');\r\n    const searchLastName = ref('');\r\n    const searchUsername = ref('');\r\n    const filterRole = ref('');\r\n    const filterCustomerType = ref('');\r\n    const sortKey = ref('');\r\n    const sortAsc = ref(true);\r\n\r\n    const fetchUsers = async () => {\r\n      try {\r\n        const response = await axios.get('http://localhost:8080/WebShopAppREST/rest/users', {\r\n          withCredentials: true,\r\n        });\r\n        users.value = response.data;\r\n      } catch (error) {\r\n        console.error('Error fetching users:', error);\r\n      }\r\n    };\r\n\r\n    const filteredUsers = computed(() => {\r\n      let result = users.value;\r\n\r\n      if (searchFirstName.value) {\r\n        const query = searchFirstName.value.toLowerCase();\r\n        result = result.filter(user => user.firstName.toLowerCase().includes(query));\r\n      }\r\n\r\n      if (searchLastName.value) {\r\n        const query = searchLastName.value.toLowerCase();\r\n        result = result.filter(user => user.lastName.toLowerCase().includes(query));\r\n      }\r\n\r\n      if (searchUsername.value) {\r\n        const query = searchUsername.value.toLowerCase();\r\n        result = result.filter(user => user.username.toLowerCase().includes(query));\r\n      }\r\n\r\n      if (filterRole.value) {\r\n        result = result.filter(user => user.role === filterRole.value);\r\n      }\r\n\r\n      if (filterCustomerType.value) {\r\n        result = result.filter(user => user.customerType === filterCustomerType.value);\r\n      }\r\n\r\n      if (sortKey.value) {\r\n        result.sort((a, b) => {\r\n          let res = 0;\r\n          if (a[sortKey.value] < b[sortKey.value]) res = -1;\r\n          if (a[sortKey.value] > b[sortKey.value]) res = 1;\r\n          return sortAsc.value ? res : -res;\r\n        });\r\n      }\r\n\r\n      return result;\r\n    });\r\n\r\n    const sortBy = key => {\r\n      if (sortKey.value === key) {\r\n        sortAsc.value = !sortAsc.value;\r\n      } else {\r\n        sortKey.value = key;\r\n        sortAsc.value = true;\r\n      }\r\n    };\r\n\r\n    onMounted(() => {\r\n      fetchUsers();\r\n    });\r\n\r\n    return {\r\n      users,\r\n      searchFirstName,\r\n      searchLastName,\r\n      searchUsername,\r\n      filterRole,\r\n      filterCustomerType,\r\n      sortKey,\r\n      sortAsc,\r\n      filteredUsers,\r\n      sortBy,\r\n    };\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.filters {\r\n  display: flex;\r\n  gap: 10px;\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.table th {\r\n  cursor: pointer;\r\n}\r\n</style>\r\n"],"mappings":";;gEAEIA,mBAAA,CAAyB,YAArB,kBAAgB;;EACfC,KAAK,EAAC;AAAS;gCAHxBC,kBAAA;oBAQQC,UAAmC,C;gCAR3CD,kBAAA;qBAeQE,UAA4C,C;;EAOzCH,KAAK,EAAC;AAAO;;uBArBtBI,mBAAA,CAuCM,cAtCJC,UAAyB,EACzBN,mBAAA,CAkBM,OAlBNO,UAkBM,G,gBAjBJP,mBAAA,CAAkH;IAJxH,uBAAAQ,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAIsBC,MAAA,CAAAC,eAAe,GAAAF,MAAA;IAAEG,EAAE,EAAC,mBAAmB;IAACC,WAAW,EAAC,sBAAsB;IAACZ,KAAK,EAAC;iDAAjFS,MAAA,CAAAC,eAAe,E,mBAC/BX,mBAAA,CAA+G;IALrH,uBAAAQ,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAKsBC,MAAA,CAAAI,cAAc,GAAAL,MAAA;IAAEG,EAAE,EAAC,kBAAkB;IAACC,WAAW,EAAC,qBAAqB;IAACZ,KAAK,EAAC;iDAA9ES,MAAA,CAAAI,cAAc,E,mBAC9Bd,mBAAA,CAA6G;IANnH,uBAAAQ,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAMsBC,MAAA,CAAAK,cAAc,GAAAN,MAAA;IAAEG,EAAE,EAAC,iBAAiB;IAACC,WAAW,EAAC,oBAAoB;IAACZ,KAAK,EAAC;iDAA5ES,MAAA,CAAAK,cAAc,E,mBAC9Bf,mBAAA,CAMS;IAbf,uBAAAQ,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAOuBC,MAAA,CAAAM,UAAU,GAAAP,MAAA;IAAEG,EAAE,EAAC,aAAa;IAACX,KAAK,EAAC;KAP1D,IAAAgB,UAAA,2B,gBAOuBP,MAAA,CAAAM,UAAU,E,mBAO3BhB,mBAAA,CAMS;IApBf,uBAAAQ,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAcuBC,MAAA,CAAAQ,kBAAkB,GAAAT,MAAA;IAAEG,EAAE,EAAC,sBAAsB;IAACX,KAAK,EAAC;KAd3E,IAAAkB,WAAA,2B,gBAcuBT,MAAA,CAAAQ,kBAAkB,E,KAQrClB,mBAAA,CAiBQ,SAjBRoB,WAiBQ,GAhBNpB,mBAAA,CAOQ,gBANNA,mBAAA,CAKK,aAJHA,mBAAA,CAAgD;IAA3CqB,OAAK,EAAAb,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAAEC,MAAA,CAAAY,MAAM;KAAe,YAAU,GAC3CtB,mBAAA,CAA8C;IAAzCqB,OAAK,EAAAb,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAAEC,MAAA,CAAAY,MAAM;KAAc,WAAS,GACzCtB,mBAAA,CAA6C;IAAxCqB,OAAK,EAAAb,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAAEC,MAAA,CAAAY,MAAM;KAAc,UAAQ,GACxCtB,mBAAA,CAAsD;IAAjDqB,OAAK,EAAAb,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAAEC,MAAA,CAAAY,MAAM;KAAkB,eAAa,E,KAGrDtB,mBAAA,CAOQ,iB,kBANNK,mBAAA,CAKKkB,SAAA,QArCbC,WAAA,CAgC2Bd,MAAA,CAAAe,aAAa,EAArBC,IAAI;yBAAfrB,mBAAA,CAKK;MAL8BsB,GAAG,EAAED,IAAI,CAACd;QAC3CZ,mBAAA,CAA6B,YAAA4B,gBAAA,CAAtBF,IAAI,CAACG,SAAS,kBACrB7B,mBAAA,CAA4B,YAAA4B,gBAAA,CAArBF,IAAI,CAACI,QAAQ,kBACpB9B,mBAAA,CAA4B,YAAA4B,gBAAA,CAArBF,IAAI,CAACK,QAAQ,kBACpB/B,mBAAA,CAAgC,YAAA4B,gBAAA,CAAzBF,IAAI,CAACM,YAAY,iB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}