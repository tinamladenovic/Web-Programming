{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { ref } from 'vue';\nimport axios from 'axios';\nimport { useRouter } from 'vue-router';\nexport default {\n  __name: 'AddLocation',\n  setup(__props, {\n    expose: __expose\n  }) {\n    __expose();\n    const router = useRouter();\n    const location = ref({\n      latitude: null,\n      longitude: null,\n      address: ''\n    });\n    const successMessage = ref('');\n    const errorMessage = ref('');\n    const submitLocation = async () => {\n      try {\n        // Geokodiranje adrese koristeći OpenStreetMap Nominatim API\n        const geocodeResponse = await axios.get('https://nominatim.openstreetmap.org/search', {\n          params: {\n            q: location.value.address,\n            format: 'json',\n            limit: 1\n          }\n        });\n        if (geocodeResponse.data.length > 0) {\n          const geocodeData = geocodeResponse.data[0];\n          location.value.latitude = parseFloat(geocodeData.lat);\n          location.value.longitude = parseFloat(geocodeData.lon);\n\n          // Sada šaljemo lokaciju sa koordinatama serveru\n          const response = await axios.post('http://localhost:8080/WebShopAppREST/rest/locations', location.value);\n          successMessage.value = 'Location added successfully!';\n          errorMessage.value = '';\n          router.push('/addfactory');\n        } else {\n          errorMessage.value = 'Failed to geocode the address.';\n          successMessage.value = '';\n        }\n      } catch (error) {\n        errorMessage.value = 'Failed to add location.';\n        successMessage.value = '';\n      }\n    };\n    const __returned__ = {\n      router,\n      location,\n      successMessage,\n      errorMessage,\n      submitLocation,\n      ref,\n      get axios() {\n        return axios;\n      },\n      get useRouter() {\n        return useRouter;\n      }\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["ref","axios","useRouter","router","location","latitude","longitude","address","successMessage","errorMessage","submitLocation","geocodeResponse","get","params","q","value","format","limit","data","length","geocodeData","parseFloat","lat","lon","response","post","push","error"],"sources":["C:/Users/PC/eclipse-workspace/apache-tomcat-9.0.89/apache-tomcat-9.0.89/webapps/chocolate-factory-2/Kostur/Frontend/front-app/src/views/AddLocation.vue"],"sourcesContent":["<template>\r\n  <div class=\"d-flex justify-content-center align-items-center vh-100\">\r\n    <div class=\"card p-5 shadow-lg\" style=\"width: 100%; max-width: 500px;\">\r\n      \r\n      <form @submit.prevent=\"submitLocation\" class=\"location-form\">\r\n        <div class=\"row mb-3\">\r\n          <label for=\"address\" class=\"col-sm-3 col-form-label text-start\">Address:</label>\r\n          <div class=\"col-sm-9\">\r\n            <input type=\"text\" id=\"address\" v-model=\"location.address\" class=\"form-control\" autocomplete=\"street-address\" required>\r\n          </div>\r\n        </div>\r\n\r\n        <div class=\"row\">\r\n          <div class=\"col-12\">\r\n            <button type=\"submit\" class=\"btn btn-primary w-100\">ADD LOCATION</button>\r\n          </div>\r\n        </div>\r\n      </form>\r\n\r\n      <p v-if=\"successMessage\" class=\"text-success text-center mt-3\">{{ successMessage }}</p>\r\n      <p v-if=\"errorMessage\" class=\"text-danger text-center mt-3\">{{ errorMessage }}</p>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nimport { ref } from 'vue';\r\nimport axios from 'axios';\r\nimport { useRouter } from 'vue-router';\r\n\r\nconst router = useRouter();\r\n\r\nconst location = ref({\r\n  latitude: null,\r\n  longitude: null,\r\n  address: ''\r\n});\r\n\r\nconst successMessage = ref('');\r\nconst errorMessage = ref('');\r\n\r\nconst submitLocation = async () => {\r\n  try {\r\n    // Geokodiranje adrese koristeći OpenStreetMap Nominatim API\r\n    const geocodeResponse = await axios.get('https://nominatim.openstreetmap.org/search', {\r\n      params: {\r\n        q: location.value.address,\r\n        format: 'json',\r\n        limit: 1\r\n      }\r\n    });\r\n\r\n    if (geocodeResponse.data.length > 0) {\r\n      const geocodeData = geocodeResponse.data[0];\r\n      location.value.latitude = parseFloat(geocodeData.lat);\r\n      location.value.longitude = parseFloat(geocodeData.lon);\r\n\r\n      // Sada šaljemo lokaciju sa koordinatama serveru\r\n      const response = await axios.post('http://localhost:8080/WebShopAppREST/rest/locations', location.value);\r\n      successMessage.value = 'Location added successfully!';\r\n      errorMessage.value = '';\r\n      router.push('/addfactory');\r\n    } else {\r\n      errorMessage.value = 'Failed to geocode the address.';\r\n      successMessage.value = '';\r\n    }\r\n  } catch (error) {\r\n    errorMessage.value = 'Failed to add location.';\r\n    successMessage.value = '';\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.d-flex {\r\n  min-height: 100vh;\r\n}\r\n\r\n.card {\r\n  border: 1px solid #ddd;\r\n  border-radius: 8px;\r\n  padding: 30px;\r\n  background-color: #f0f8ff;\r\n  box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);\r\n}\r\n\r\nh2 {\r\n  color: #343a40;\r\n  text-align: center;\r\n  font-size: 2rem;\r\n  font-weight: normal;\r\n}\r\n\r\n/* Stilizacija za labele */\r\n.form-label {\r\n  font-weight: normal;\r\n}\r\n\r\n/* Tanke linije za inpute i dugmad */\r\ninput[type=\"text\"],\r\nbutton[type=\"submit\"] {\r\n  border: 1px solid #007bff; /* Tanka plava linija */\r\n  border-radius: 8px;\r\n  font-size: 1.1rem;\r\n  transition: border-color 0.3s ease, box-shadow 0.3s ease;\r\n}\r\n\r\ninput[type=\"text\"]:focus {\r\n  border-color: #007bff;\r\n  box-shadow: 0 0 5px rgba(0, 123, 255, 0.25);\r\n}\r\n\r\n/* Dugmad sa plavim outline stilom */\r\nbutton[type=\"submit\"] {\r\n  border: 1px solid #007bff; /* Plavi outline */\r\n  background-color: transparent; /* Transparentna pozadina */\r\n  color: #007bff;\r\n  font-size: 1.1rem;\r\n  transition: background-color 0.3s ease, color 0.3s ease;\r\n}\r\n\r\nbutton[type=\"submit\"]:hover {\r\n  background-color: #007bff; /* Plava pozadina pri hover-u */\r\n  color: white; /* Bela boja teksta pri hover-u */\r\n}\r\n\r\n/* Dodavanje margine ispod dugmeta */\r\nbutton[type=\"submit\"] {\r\n  margin-top: 20px;\r\n}\r\n\r\n.text-success {\r\n  margin-top: 15px;\r\n  color: green;\r\n}\r\n\r\n.text-danger {\r\n  margin-top: 15px;\r\n  color: red;\r\n}\r\n\r\n</style>\r\n"],"mappings":";AA0BA,SAASA,GAAG,QAAQ,KAAK;AACzB,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,SAAS,QAAQ,YAAY;;;;;;;IAEtC,MAAMC,MAAM,GAAGD,SAAS,CAAC,CAAC;IAE1B,MAAME,QAAQ,GAAGJ,GAAG,CAAC;MACnBK,QAAQ,EAAE,IAAI;MACdC,SAAS,EAAE,IAAI;MACfC,OAAO,EAAE;IACX,CAAC,CAAC;IAEF,MAAMC,cAAc,GAAGR,GAAG,CAAC,EAAE,CAAC;IAC9B,MAAMS,YAAY,GAAGT,GAAG,CAAC,EAAE,CAAC;IAE5B,MAAMU,cAAc,GAAG,MAAAA,CAAA,KAAY;MACjC,IAAI;QACF;QACA,MAAMC,eAAe,GAAG,MAAMV,KAAK,CAACW,GAAG,CAAC,4CAA4C,EAAE;UACpFC,MAAM,EAAE;YACNC,CAAC,EAAEV,QAAQ,CAACW,KAAK,CAACR,OAAO;YACzBS,MAAM,EAAE,MAAM;YACdC,KAAK,EAAE;UACT;QACF,CAAC,CAAC;QAEF,IAAIN,eAAe,CAACO,IAAI,CAACC,MAAM,GAAG,CAAC,EAAE;UACnC,MAAMC,WAAW,GAAGT,eAAe,CAACO,IAAI,CAAC,CAAC,CAAC;UAC3Cd,QAAQ,CAACW,KAAK,CAACV,QAAQ,GAAGgB,UAAU,CAACD,WAAW,CAACE,GAAG,CAAC;UACrDlB,QAAQ,CAACW,KAAK,CAACT,SAAS,GAAGe,UAAU,CAACD,WAAW,CAACG,GAAG,CAAC;;UAEtD;UACA,MAAMC,QAAQ,GAAG,MAAMvB,KAAK,CAACwB,IAAI,CAAC,qDAAqD,EAAErB,QAAQ,CAACW,KAAK,CAAC;UACxGP,cAAc,CAACO,KAAK,GAAG,8BAA8B;UACrDN,YAAY,CAACM,KAAK,GAAG,EAAE;UACvBZ,MAAM,CAACuB,IAAI,CAAC,aAAa,CAAC;QAC5B,CAAC,MAAM;UACLjB,YAAY,CAACM,KAAK,GAAG,gCAAgC;UACrDP,cAAc,CAACO,KAAK,GAAG,EAAE;QAC3B;MACF,CAAC,CAAC,OAAOY,KAAK,EAAE;QACdlB,YAAY,CAACM,KAAK,GAAG,yBAAyB;QAC9CP,cAAc,CAACO,KAAK,GAAG,EAAE;MAC3B;IACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}