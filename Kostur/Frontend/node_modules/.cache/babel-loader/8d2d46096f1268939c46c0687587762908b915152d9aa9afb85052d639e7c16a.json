{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { ref, onMounted, computed, nextTick, watch } from 'vue';\nimport axios from 'axios';\nimport { useRouter } from 'vue-router';\nexport default {\n  __name: 'AllChocolateFactories',\n  setup(__props, {\n    expose: __expose\n  }) {\n    __expose();\n    const router = useRouter();\n    const factories = ref([]);\n    const chocolates = ref([]);\n    const searchName = ref('');\n    const searchChocolate = ref('');\n    const searchLocation = ref('');\n    const searchRating = ref('');\n    const searchChocolateType = ref('');\n    const searchChocolateKind = ref('');\n    const openFactoriesOnly = ref(false);\n    const chocolateTypes = ref(['PLAIN', 'FOR_COOKING', 'FOR_DRINKING']);\n    const chocolateKinds = ref(['DARK', 'MILK', 'WHITE']);\n    const sortKey = ref('');\n    const sortOrders = ref({\n      name: 1,\n      location: 1,\n      rating: 1\n    });\n    const loadFactories = async () => {\n      try {\n        const response = await axios.get('http://localhost:8080/WebShopAppREST/rest/chocolateFactoryObjects');\n        factories.value = response.data;\n      } catch (error) {\n        console.error(\"Error loading factories:\", error);\n      }\n    };\n    const loadChocolates = async () => {\n      try {\n        const response = await axios.get('http://localhost:8080/WebShopAppREST/rest/chocolates');\n        chocolates.value = response.data;\n      } catch (error) {\n        console.error(\"Error loading chocolates:\", error);\n      }\n    };\n    onMounted(() => {\n      loadFactories();\n      loadChocolates();\n    });\n    const isFactoryOpen = factory => factory.status === 'OPEN';\n    const sortedFactories = computed(() => {\n      return factories.value.sort((a, b) => a.name.toLowerCase().localeCompare(b.name.toLowerCase()));\n    });\n    const filteredFactories = computed(() => {\n      return sortedFactories.value.filter(factory => {\n        const matchesName = factory.name.toLowerCase().includes(searchName.value.toLowerCase());\n        const matchesLocation = factory.location.address.toLowerCase().includes(searchLocation.value.toLowerCase());\n        const matchesRating = searchRating.value === '' || factory.rating >= parseFloat(searchRating.value);\n        const isOpenFactory = !openFactoriesOnly.value || isFactoryOpen(factory);\n        const matchesChocolate = searchChocolate.value === '' || chocolates.value.some(chocolate => chocolate.name.toLowerCase().includes(searchChocolate.value.toLowerCase()) && chocolate.factoryId === factory.id);\n        const matchesChocolateType = !searchChocolateType.value || chocolates.value.some(chocolate => chocolate.type === searchChocolateType.value && chocolate.factoryId === factory.id);\n        const matchesChocolateKind = !searchChocolateKind.value || chocolates.value.some(chocolate => chocolate.kind === searchChocolateKind.value && chocolate.factoryId === factory.id);\n        return matchesName && matchesLocation && matchesRating && isOpenFactory && matchesChocolate && matchesChocolateType && matchesChocolateKind;\n      });\n    });\n    const getFactoryLogo = logoFileName => `/images/${logoFileName}`;\n    const viewFactoryProfile = factoryId => {\n      if (factoryId) {\n        router.push({\n          name: 'factoryprofile',\n          params: {\n            id: factoryId\n          }\n        });\n      }\n    };\n    const __returned__ = {\n      router,\n      factories,\n      chocolates,\n      searchName,\n      searchChocolate,\n      searchLocation,\n      searchRating,\n      searchChocolateType,\n      searchChocolateKind,\n      openFactoriesOnly,\n      chocolateTypes,\n      chocolateKinds,\n      sortKey,\n      sortOrders,\n      loadFactories,\n      loadChocolates,\n      isFactoryOpen,\n      sortedFactories,\n      filteredFactories,\n      getFactoryLogo,\n      viewFactoryProfile,\n      ref,\n      onMounted,\n      computed,\n      nextTick,\n      watch,\n      get axios() {\n        return axios;\n      },\n      get useRouter() {\n        return useRouter;\n      }\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["ref","onMounted","computed","nextTick","watch","axios","useRouter","router","factories","chocolates","searchName","searchChocolate","searchLocation","searchRating","searchChocolateType","searchChocolateKind","openFactoriesOnly","chocolateTypes","chocolateKinds","sortKey","sortOrders","name","location","rating","loadFactories","response","get","value","data","error","console","loadChocolates","isFactoryOpen","factory","status","sortedFactories","sort","a","b","toLowerCase","localeCompare","filteredFactories","filter","matchesName","includes","matchesLocation","address","matchesRating","parseFloat","isOpenFactory","matchesChocolate","some","chocolate","factoryId","id","matchesChocolateType","type","matchesChocolateKind","kind","getFactoryLogo","logoFileName","viewFactoryProfile","push","params"],"sources":["C:/Users/PC/eclipse-workspace/apache-tomcat-9.0.89/apache-tomcat-9.0.89/webapps/chocolate-factory-2/Kostur/Frontend/front-app/src/views/AllChocolateFactories.vue"],"sourcesContent":["<template>\r\n  <div class=\"d-flex justify-content-center align-items-center vh-100\">\r\n    <div class=\"container\">\r\n      \r\n      <!-- Uokvirena sekcija za pretrage -->\r\n      <form class=\"mb-4 search-filter-container p-3\">\r\n        <div class=\"row mb-3\">\r\n          <label for=\"searchChocolate\" class=\"col-sm-3 col-form-label text-start\">Search by Chocolate Name:</label>\r\n          <div class=\"col-sm-9\">\r\n            <input v-model=\"searchChocolate\" @input=\"filterFactories\" id=\"searchChocolate\" name=\"searchChocolate\" placeholder=\"Search by Chocolate Name\" class=\"form-control\" />\r\n          </div>\r\n        </div>\r\n        <div class=\"row mb-3\">\r\n          <label for=\"searchName\" class=\"col-sm-3 col-form-label text-start\">Search by Factory Name:</label>\r\n          <div class=\"col-sm-9\">\r\n            <input v-model=\"searchName\" @input=\"filterFactories\" id=\"searchName\" name=\"searchName\" placeholder=\"Search by Factory Name\" class=\"form-control\" />\r\n          </div>\r\n        </div>\r\n        <div class=\"row mb-3\">\r\n          <label for=\"searchLocation\" class=\"col-sm-3 col-form-label text-start\">Search by Location:</label>\r\n          <div class=\"col-sm-9\">\r\n            <input v-model=\"searchLocation\" @input=\"filterFactories\" id=\"searchLocation\" name=\"searchLocation\" placeholder=\"Search by Location\" class=\"form-control\" />\r\n          </div>\r\n        </div>\r\n        <div class=\"row mb-3\">\r\n          <label for=\"searchRating\" class=\"col-sm-3 col-form-label text-start\">Search by Rating:</label>\r\n          <div class=\"col-sm-9\">\r\n            <input v-model=\"searchRating\" @input=\"filterFactories\" id=\"searchRating\" name=\"searchRating\" type=\"number\" step=\"0.1\" placeholder=\"Search by Rating\" class=\"form-control\" />\r\n          </div>\r\n        </div>\r\n        <div class=\"row mb-3\">\r\n          <label for=\"searchChocolateType\" class=\"col-sm-3 col-form-label text-start\">Chocolate Type:</label>\r\n          <div class=\"col-sm-9\">\r\n            <select v-model=\"searchChocolateType\" @change=\"filterFactories\" id=\"searchChocolateType\" name=\"searchChocolateType\" class=\"form-select\">\r\n              <option value=\"\">All Types</option>\r\n              <option v-for=\"type in chocolateTypes\" :key=\"type\">{{ type }}</option>\r\n            </select>\r\n          </div>\r\n        </div>\r\n        <div class=\"row mb-3\">\r\n          <label for=\"searchChocolateKind\" class=\"col-sm-3 col-form-label text-start\">Chocolate Kind:</label>\r\n          <div class=\"col-sm-9\">\r\n            <select v-model=\"searchChocolateKind\" @change=\"filterFactories\" id=\"searchChocolateKind\" name=\"searchChocolateKind\" class=\"form-select\">\r\n              <option value=\"\">All Kinds</option>\r\n              <option v-for=\"kind in chocolateKinds\" :key=\"kind\">{{ kind }}</option>\r\n            </select>\r\n          </div>\r\n        </div>\r\n        <div class=\"row mb-3\">\r\n          <label for=\"openFactoriesOnly\" class=\"col-sm-3 col-form-label text-start\">Show Only Open Factories:</label>\r\n          <div class=\"col-sm-9\">\r\n            <input type=\"checkbox\" v-model=\"openFactoriesOnly\" @change=\"filterFactories\" id=\"openFactoriesOnly\" name=\"openFactoriesOnly\" class=\"form-check-input\" />\r\n          </div>\r\n        </div>\r\n      </form>\r\n\r\n      <!-- Kartice za profile fabrika -->\r\n      <div class=\"row\">\r\n        <div v-for=\"factory in filteredFactories\" :key=\"factory.id\" class=\"col-md-4 mb-4\">\r\n          <div class=\"card h-100\">\r\n            <img :src=\"getFactoryLogo(factory.logo)\" class=\"card-img-top factory-logo\" alt=\"Factory Logo\">\r\n            <div class=\"card-body\">\r\n              <h5 class=\"card-title\">{{ factory.name }}</h5>\r\n              <p class=\"card-text\"><strong>Location:</strong> {{ factory.location.address }}</p>\r\n              <p class=\"card-text\"><strong>Rating:</strong> {{ factory.rating }}</p>\r\n              <button @click=\"viewFactoryProfile(factory.factoryId)\" class=\"btn btn-outline-primary w-100\">VIEW</button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nimport { ref, onMounted, computed, nextTick, watch } from 'vue';\r\nimport axios from 'axios';\r\nimport { useRouter } from 'vue-router';\r\n\r\nconst router = useRouter();\r\nconst factories = ref([]);\r\nconst chocolates = ref([]);\r\nconst searchName = ref('');\r\nconst searchChocolate = ref('');\r\nconst searchLocation = ref('');\r\nconst searchRating = ref('');\r\nconst searchChocolateType = ref('');\r\nconst searchChocolateKind = ref('');\r\nconst openFactoriesOnly = ref(false);\r\n\r\nconst chocolateTypes = ref(['PLAIN', 'FOR_COOKING', 'FOR_DRINKING']);\r\nconst chocolateKinds = ref(['DARK', 'MILK', 'WHITE']);\r\n\r\nconst sortKey = ref('');\r\nconst sortOrders = ref({\r\n  name: 1,\r\n  location: 1,\r\n  rating: 1\r\n});\r\n\r\nconst loadFactories = async () => {\r\n  try {\r\n    const response = await axios.get('http://localhost:8080/WebShopAppREST/rest/chocolateFactoryObjects');\r\n    factories.value = response.data;\r\n  } catch (error) {\r\n    console.error(\"Error loading factories:\", error);\r\n  }\r\n};\r\n\r\nconst loadChocolates = async () => {\r\n  try {\r\n    const response = await axios.get('http://localhost:8080/WebShopAppREST/rest/chocolates');\r\n    chocolates.value = response.data;\r\n  } catch (error) {\r\n    console.error(\"Error loading chocolates:\", error);\r\n  }\r\n};\r\n\r\nonMounted(() => {\r\n  loadFactories();\r\n  loadChocolates();\r\n});\r\n\r\nconst isFactoryOpen = (factory) => factory.status === 'OPEN';\r\n\r\nconst sortedFactories = computed(() => {\r\n  return factories.value.sort((a, b) => a.name.toLowerCase().localeCompare(b.name.toLowerCase()));\r\n});\r\n\r\nconst filteredFactories = computed(() => {\r\n  return sortedFactories.value.filter(factory => {\r\n    const matchesName = factory.name.toLowerCase().includes(searchName.value.toLowerCase());\r\n    const matchesLocation = factory.location.address.toLowerCase().includes(searchLocation.value.toLowerCase());\r\n    const matchesRating = searchRating.value === '' || factory.rating >= parseFloat(searchRating.value);\r\n    const isOpenFactory = !openFactoriesOnly.value || isFactoryOpen(factory);\r\n\r\n    const matchesChocolate = searchChocolate.value === '' || chocolates.value.some(chocolate =>\r\n      chocolate.name.toLowerCase().includes(searchChocolate.value.toLowerCase()) && chocolate.factoryId === factory.id\r\n    );\r\n    const matchesChocolateType = !searchChocolateType.value || chocolates.value.some(chocolate =>\r\n      chocolate.type === searchChocolateType.value && chocolate.factoryId === factory.id\r\n    );\r\n    const matchesChocolateKind = !searchChocolateKind.value || chocolates.value.some(chocolate =>\r\n      chocolate.kind === searchChocolateKind.value && chocolate.factoryId === factory.id\r\n    );\r\n\r\n    return matchesName && matchesLocation && matchesRating && isOpenFactory &&\r\n           matchesChocolate && matchesChocolateType && matchesChocolateKind;\r\n  });\r\n});\r\n\r\nconst getFactoryLogo = (logoFileName) => `/images/${logoFileName}`;\r\n\r\nconst viewFactoryProfile = (factoryId) => {\r\n  if (factoryId) {\r\n    router.push({ name: 'factoryprofile', params: { id: factoryId } });\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.d-flex {\r\n  min-height: 100vh;\r\n}\r\n\r\n.container {\r\n  max-width: 1200px;\r\n}\r\n\r\n.card {\r\n  border-radius: 8px;\r\n  box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);\r\n}\r\n\r\n.card-body {\r\n  text-align: center;\r\n}\r\n\r\n.factory-logo {\r\n  width: 100%;\r\n  height: 200px;\r\n  object-fit: cover;\r\n  border-top-left-radius: 8px;\r\n  border-top-right-radius: 8px;\r\n}\r\n\r\n.search-filter-container {\r\n  border: 2px solid #007bff;\r\n  border-radius: 8px;\r\n  padding: 20px;\r\n  background-color: #e9f5ff;\r\n}\r\n\r\n.btn {\r\n  margin-top: 10px;\r\n}\r\n</style>\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}