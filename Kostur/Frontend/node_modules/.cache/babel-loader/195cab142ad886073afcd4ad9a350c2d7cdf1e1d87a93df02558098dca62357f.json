{"ast":null,"code":"import { createElementVNode as _createElementVNode, createCommentVNode as _createCommentVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, vModelText as _vModelText, withDirectives as _withDirectives, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-06a8eb7d\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  class: \"d-flex justify-content-center align-items-center vh-100\"\n};\nconst _hoisted_2 = {\n  class: \"card p-0 shadow-none\",\n  style: {\n    \"width\": \"100%\",\n    \"max-width\": \"500px\"\n  }\n};\nconst _hoisted_3 = {\n  key: 0\n};\nconst _hoisted_4 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"h2\", {\n  class: \"text-center mb-4 blue-label\"\n}, \"CHOCOLATES\", -1 /* HOISTED */));\nconst _hoisted_5 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"h3\", null, \"Select a chocolate to update quantity:\", -1 /* HOISTED */));\nconst _hoisted_6 = {\n  class: \"chocolates-list\"\n};\nconst _hoisted_7 = [\"onClick\"];\nconst _hoisted_8 = {\n  key: 0,\n  class: \"edit-quantity text-center\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [$setup.chocolates.length || $setup.selectedChocolate ? (_openBlock(), _createElementBlock(\"div\", _hoisted_3, [_hoisted_4, _createCommentVNode(\" Lista čokolada \"), _hoisted_5, _createElementVNode(\"ul\", _hoisted_6, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($setup.chocolates, chocolate => {\n    return _openBlock(), _createElementBlock(\"li\", {\n      key: chocolate.id,\n      onClick: $event => $setup.selectChocolate(chocolate)\n    }, _toDisplayString(chocolate.name) + \" - \" + _toDisplayString(chocolate.quantity) + \" pcs \", 9 /* TEXT, PROPS */, _hoisted_7);\n  }), 128 /* KEYED_FRAGMENT */))]), _createCommentVNode(\" Sekcija za ažuriranje količine \"), $setup.selectedChocolate ? (_openBlock(), _createElementBlock(\"div\", _hoisted_8, [_createElementVNode(\"h3\", null, \"Update quantity for: \" + _toDisplayString($setup.selectedChocolate.name), 1 /* TEXT */), _withDirectives(_createElementVNode(\"input\", {\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $setup.newQuantity = $event),\n    type: \"number\",\n    min: \"0\",\n    placeholder: \"Enter new quantity\",\n    class: \"form-control half-width\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $setup.newQuantity, void 0, {\n    number: true\n  }]]), _createElementVNode(\"button\", {\n    onClick: _cache[1] || (_cache[1] = (...args) => $setup.updateQuantity && $setup.updateQuantity(...args)),\n    class: \"btn btn-outline-primary mt-2\"\n  }, \"Update Quantity\")])) : _createCommentVNode(\"v-if\", true)])) : _createCommentVNode(\"v-if\", true)])]);\n}","map":{"version":3,"names":["class","style","key","_createElementVNode","_createElementBlock","_hoisted_1","_hoisted_2","$setup","chocolates","length","selectedChocolate","_hoisted_3","_hoisted_4","_createCommentVNode","_hoisted_5","_hoisted_6","_Fragment","_renderList","chocolate","id","onClick","$event","selectChocolate","name","_toDisplayString","quantity","_hoisted_7","_hoisted_8","_cache","newQuantity","type","min","placeholder","number","args","updateQuantity"],"sources":["C:\\Users\\PC\\eclipse-workspace\\apache-tomcat-9.0.89\\apache-tomcat-9.0.89\\webapps\\chocolate-factory-2\\Kostur\\Frontend\\front-app\\src\\views\\WorkerView.vue"],"sourcesContent":["<template>\r\n  <div class=\"d-flex justify-content-center align-items-center vh-100\">\r\n    <div class=\"card p-0 shadow-none\" style=\"width: 100%; max-width: 500px;\">\r\n      <div v-if=\"chocolates.length || selectedChocolate\">\r\n        <h2 class=\"text-center mb-4 blue-label\">CHOCOLATES</h2>\r\n        \r\n        <!-- Lista čokolada -->\r\n        <h3>Select a chocolate to update quantity:</h3>\r\n        <ul class=\"chocolates-list\">\r\n          <li v-for=\"chocolate in chocolates\" :key=\"chocolate.id\" @click=\"selectChocolate(chocolate)\">\r\n            {{ chocolate.name }} - {{ chocolate.quantity }} pcs\r\n          </li>\r\n        </ul>\r\n\r\n        <!-- Sekcija za ažuriranje količine -->\r\n        <div v-if=\"selectedChocolate\" class=\"edit-quantity text-center\">\r\n          <h3>Update quantity for: {{ selectedChocolate.name }}</h3>\r\n          <input v-model.number=\"newQuantity\" type=\"number\" min=\"0\" placeholder=\"Enter new quantity\" class=\"form-control half-width\">\r\n          <button @click=\"updateQuantity\" class=\"btn btn-outline-primary mt-2\">Update Quantity</button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from 'axios';\r\nimport { ref, onMounted } from 'vue';\r\n\r\nexport default {\r\n  setup() {\r\n    const chocolates = ref([]);\r\n    const selectedChocolate = ref(null);\r\n    const newQuantity = ref(0);\r\n\r\n    const fetchWorkerData = async () => {\r\n      try {\r\n        const response = await axios.get('http://localhost:8080/WebShopAppREST/rest/currentUser', {\r\n          withCredentials: true,\r\n        });\r\n        const worker = response.data;\r\n\r\n        // Fetch chocolates from the worker's factory\r\n        const factoryResponse = await axios.get(`http://localhost:8080/WebShopAppREST/rest/chocolateFactoryObjects/${worker.factoryId}`, {\r\n          withCredentials: true,\r\n        });\r\n        chocolates.value = factoryResponse.data.chocolates;\r\n      } catch (error) {\r\n        console.error('Error fetching worker data:', error);\r\n      }\r\n    };\r\n\r\n    const selectChocolate = (chocolate) => {\r\n      selectedChocolate.value = chocolate;\r\n      newQuantity.value = chocolate.quantity;\r\n    };\r\n\r\n    const updateQuantity = async () => {\r\n      if (selectedChocolate.value && newQuantity.value >= 0) {\r\n        try {\r\n          const updatedChocolate = { ...selectedChocolate.value, quantity: newQuantity.value };\r\n          await axios.put(`http://localhost:8080/WebShopAppREST/rest/chocolates/${selectedChocolate.value.id}`, updatedChocolate, {\r\n            withCredentials: true,\r\n          });\r\n          selectedChocolate.value.quantity = newQuantity.value;\r\n          alert('Quantity updated successfully.');\r\n        } catch (error) {\r\n          console.error('Error updating chocolate quantity:', error);\r\n          alert('An error occurred while updating quantity.');\r\n        }\r\n      }\r\n    };\r\n\r\n    onMounted(() => {\r\n      fetchWorkerData();\r\n    });\r\n\r\n    return {\r\n      chocolates,\r\n      selectedChocolate,\r\n      newQuantity,\r\n      selectChocolate,\r\n      updateQuantity,\r\n    };\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.d-flex {\r\n  min-height: 100vh;\r\n}\r\n\r\n.card {\r\n  padding: 0; /* Uklanjanje padding-a */\r\n  background-color: transparent; /* Transparentna pozadina kartice */\r\n  box-shadow: none; /* Bez senki i okvira spolja */\r\n  border: none; /* Bez ivica kartice */\r\n}\r\n\r\nh2, h3 {\r\n  color: #007bff;\r\n  text-align: center;\r\n  font-size: 2rem; /* Isto kao u prethodnom kodu */\r\n  font-weight: normal;\r\n}\r\n\r\n.chocolates-list {\r\n  list-style-type: none;\r\n  padding: 0;\r\n}\r\n\r\n.chocolates-list li {\r\n  padding: 10px;\r\n  cursor: pointer;\r\n  background-color: #f2f2f2;\r\n  margin-bottom: 10px;\r\n  border-radius: 4px;\r\n  text-align: center;\r\n}\r\n\r\n.chocolates-list li:hover {\r\n  background-color: #e0e0e0;\r\n}\r\n\r\n.edit-quantity {\r\n  margin-top: 20px;\r\n}\r\n\r\n.edit-quantity input {\r\n  margin-right: 10px;\r\n  padding: 10px;\r\n  width: 50%;\r\n  border: 1px solid #007bff;\r\n  border-radius: 8px;\r\n  font-size: 1.1rem;\r\n  transition: border-color 0.3s ease, box-shadow 0.3s ease;\r\n}\r\n\r\n.edit-quantity input:focus {\r\n  border-color: #007bff;\r\n  box-shadow: 0 0 5px rgba(0, 123, 255, 0.25);\r\n}\r\n\r\n.edit-quantity button {\r\n  padding: 10px;\r\n  background-color: transparent;\r\n  color: #007bff;\r\n  border: 1px solid #007bff;\r\n  border-radius: 8px;\r\n  font-size: 1.1rem;\r\n  transition: background-color 0.3s ease, color 0.3s ease;\r\n}\r\n\r\n.edit-quantity button:hover {\r\n  background-color: #007bff;\r\n  color: white;\r\n}\r\n</style>\r\n"],"mappings":";;;EACOA,KAAK,EAAC;AAAyD;;EAC7DA,KAAK,EAAC,sBAAsB;EAACC,KAAsC,EAAtC;IAAA;IAAA;EAAA;;;EAFtCC,GAAA;AAAA;gEAIQC,mBAAA,CAAuD;EAAnDH,KAAK,EAAC;AAA6B,GAAC,YAAU;gEAGlDG,mBAAA,CAA+C,YAA3C,wCAAsC;;EACtCH,KAAK,EAAC;AAAiB;mBARnC;;EAAAE,GAAA;EAesCF,KAAK,EAAC;;;uBAd1CI,mBAAA,CAqBM,OArBNC,UAqBM,GApBJF,mBAAA,CAmBM,OAnBNG,UAmBM,GAlBOC,MAAA,CAAAC,UAAU,CAACC,MAAM,IAAIF,MAAA,CAAAG,iBAAiB,I,cAAjDN,mBAAA,CAiBM,OApBZO,UAAA,GAIQC,UAAuD,EAEvDC,mBAAA,oBAAuB,EACvBC,UAA+C,EAC/CX,mBAAA,CAIK,MAJLY,UAIK,I,kBAHHX,mBAAA,CAEKY,SAAA,QAXfC,WAAA,CASkCV,MAAA,CAAAC,UAAU,EAAvBU,SAAS;yBAApBd,mBAAA,CAEK;MAFgCF,GAAG,EAAEgB,SAAS,CAACC,EAAE;MAAGC,OAAK,EAAAC,MAAA,IAAEd,MAAA,CAAAe,eAAe,CAACJ,SAAS;wBACpFA,SAAS,CAACK,IAAI,IAAG,KAAG,GAAAC,gBAAA,CAAGN,SAAS,CAACO,QAAQ,IAAG,OACjD,uBAXVC,UAAA;oCAcQb,mBAAA,oCAAuC,EAC5BN,MAAA,CAAAG,iBAAiB,I,cAA5BN,mBAAA,CAIM,OAJNuB,UAIM,GAHJxB,mBAAA,CAA0D,YAAtD,uBAAqB,GAAAqB,gBAAA,CAAGjB,MAAA,CAAAG,iBAAiB,CAACa,IAAI,kB,gBAClDpB,mBAAA,CAA2H;IAjBrI,uBAAAyB,MAAA,QAAAA,MAAA,MAAAP,MAAA,IAiBiCd,MAAA,CAAAsB,WAAW,GAAAR,MAAA;IAAES,IAAI,EAAC,QAAQ;IAACC,GAAG,EAAC,GAAG;IAACC,WAAW,EAAC,oBAAoB;IAAChC,KAAK,EAAC;iDAA1EO,MAAA,CAAAsB,WAAW,E;IAjB5CI,MAAA,EAiBiB;EAA4B,E,IACnC9B,mBAAA,CAA6F;IAApFiB,OAAK,EAAAQ,MAAA,QAAAA,MAAA,UAAAM,IAAA,KAAE3B,MAAA,CAAA4B,cAAA,IAAA5B,MAAA,CAAA4B,cAAA,IAAAD,IAAA,CAAc;IAAElC,KAAK,EAAC;KAA+B,iBAAe,E,KAlB9Fa,mBAAA,e,KAAAA,mBAAA,e","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}