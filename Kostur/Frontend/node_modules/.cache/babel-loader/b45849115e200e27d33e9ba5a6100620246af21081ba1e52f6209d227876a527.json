{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { ref, onMounted, computed } from 'vue';\nimport axios from 'axios';\nimport { useRouter } from 'vue-router';\nexport default {\n  __name: 'AllChocolateFactories',\n  setup(__props, {\n    expose: __expose\n  }) {\n    __expose();\n    const router = useRouter();\n    const factories = ref([]);\n    const searchName = ref('');\n    const searchChocolate = ref('');\n    const searchLocation = ref('');\n    const searchRating = ref('');\n    const searchChocolateType = ref('');\n    const searchChocolateKind = ref('');\n    const openFactoriesOnly = ref(false);\n    const chocolateTypes = ['Mlečna', 'Tamna', 'Bela', 'Nugat'];\n    const chocolateKinds = ['Tablice', 'Praline', 'Čokoladne kuglice', 'Čokoladice'];\n    async function loadFactories() {\n      try {\n        const response = await axios.get('http://localhost:8080/WebShopAppREST/rest/chocolateFactoryObjects');\n        factories.value = response.data;\n        console.log(\"Učitane fabrike:\", factories.value); // Debug log\n      } catch (error) {\n        console.error(\"Greška pri učitavanju fabrika:\", error);\n      }\n    }\n    onMounted(() => {\n      loadFactories();\n    });\n    const isFactoryOpen = factory => {\n      const currentTime = new Date();\n      const openingTime = new Date();\n      const closingTime = new Date();\n      const [openHour, openMinute] = factory.openingTime.split(':');\n      const [closeHour, closeMinute] = factory.closingTime.split(':');\n      openingTime.setHours(openHour, openMinute);\n      closingTime.setHours(closeHour, closeMinute);\n      return currentTime >= openingTime && currentTime <= closingTime;\n    };\n    const sortedFactories = computed(() => {\n      return factories.value.sort((a, b) => {\n        const aValue = a.name.toLowerCase();\n        const bValue = b.name.toLowerCase();\n        return aValue.localeCompare(bValue); // Default sorting by name\n      });\n    });\n    const filteredFactories = computed(() => {\n      return sortedFactories.value.filter(factory => {\n        const matchesName = factory.name.toLowerCase().includes(searchName.value.toLowerCase());\n        const matchesChocolate = searchChocolate.value === '' || factory.chocolates.some(chocolate => chocolate.name.toLowerCase().includes(searchChocolate.value.toLowerCase()));\n        const matchesLocation = factory.location.address.toLowerCase().includes(searchLocation.value.toLowerCase());\n        const matchesRating = searchRating.value === '' || factory.rating >= parseFloat(searchRating.value);\n        const matchesChocolateType = !searchChocolateType.value || factory.chocolates.some(chocolate => chocolate.type === searchChocolateType.value);\n        const matchesChocolateKind = !searchChocolateKind.value || factory.chocolates.some(chocolate => chocolate.kind === searchChocolateKind.value);\n        const isOpenFactory = !openFactoriesOnly.value || isFactoryOpen(factory);\n        return matchesName && matchesChocolate && matchesLocation && matchesRating && matchesChocolateType && matchesChocolateKind && isOpenFactory;\n      });\n    });\n    const getFactoryLogo = logoFileName => {\n      return `/images/${logoFileName}`;\n    };\n    const viewFactoryProfile = factoryId => {\n      router.push({\n        name: 'factoryprofile',\n        params: {\n          id: factoryId\n        }\n      });\n    };\n    const filterFactories = () => {\n      // No need for explicit return here, computed property `filteredFactories` will handle it\n      console.log(\"Pretraga:\");\n      console.log(\"Naziv čokolade:\", searchChocolate.value);\n      console.log(\"Naziv fabrike:\", searchName.value);\n      console.log(\"Lokacija:\", searchLocation.value);\n      console.log(\"Ocena:\", searchRating.value);\n      console.log(\"Vrsta čokolade:\", searchChocolateType.value);\n      console.log(\"Tip čokolade:\", searchChocolateKind.value);\n      console.log(\"Samo otvorene fabrike:\", openFactoriesOnly.value);\n    };\n    const __returned__ = {\n      router,\n      factories,\n      searchName,\n      searchChocolate,\n      searchLocation,\n      searchRating,\n      searchChocolateType,\n      searchChocolateKind,\n      openFactoriesOnly,\n      chocolateTypes,\n      chocolateKinds,\n      loadFactories,\n      isFactoryOpen,\n      sortedFactories,\n      filteredFactories,\n      getFactoryLogo,\n      viewFactoryProfile,\n      filterFactories,\n      ref,\n      onMounted,\n      computed,\n      get axios() {\n        return axios;\n      },\n      get useRouter() {\n        return useRouter;\n      }\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["ref","onMounted","computed","axios","useRouter","router","factories","searchName","searchChocolate","searchLocation","searchRating","searchChocolateType","searchChocolateKind","openFactoriesOnly","chocolateTypes","chocolateKinds","loadFactories","response","get","value","data","console","log","error","isFactoryOpen","factory","currentTime","Date","openingTime","closingTime","openHour","openMinute","split","closeHour","closeMinute","setHours","sortedFactories","sort","a","b","aValue","name","toLowerCase","bValue","localeCompare","filteredFactories","filter","matchesName","includes","matchesChocolate","chocolates","some","chocolate","matchesLocation","location","address","matchesRating","rating","parseFloat","matchesChocolateType","type","matchesChocolateKind","kind","isOpenFactory","getFactoryLogo","logoFileName","viewFactoryProfile","factoryId","push","params","id","filterFactories"],"sources":["C:/Users/PC/eclipse-workspace/apache-tomcat-9.0.89/apache-tomcat-9.0.89/webapps/chocolate-factory-2/Kostur/Frontend/front-app/src/views/AllChocolateFactories.vue"],"sourcesContent":["<template>\r\n  <div class=\"all-factories\">\r\n    <div class=\"search-filters\">\r\n      <label for=\"searchChocolate\">Pretraga po nazivu čokolade:</label>\r\n      <input v-model=\"searchChocolate\" @input=\"filterFactories\" id=\"searchChocolate\" name=\"searchChocolate\" placeholder=\"Pretraga po nazivu čokolade\" />\r\n\r\n      <label for=\"searchName\">Pretraga po nazivu fabrike:</label>\r\n      <input v-model=\"searchName\" @input=\"filterFactories\" id=\"searchName\" name=\"searchName\" placeholder=\"Pretraga po nazivu fabrike\" />\r\n\r\n      <label for=\"searchLocation\">Pretraga po lokaciji:</label>\r\n      <input v-model=\"searchLocation\" @input=\"filterFactories\" id=\"searchLocation\" name=\"searchLocation\" placeholder=\"Pretraga po lokaciji\" />\r\n\r\n      <label for=\"searchRating\">Pretraga po oceni:</label>\r\n      <input v-model=\"searchRating\" @input=\"filterFactories\" id=\"searchRating\" name=\"searchRating\" type=\"number\" step=\"0.1\" placeholder=\"Pretraga po oceni\" />\r\n\r\n      <label for=\"searchChocolateType\">Vrsta čokolade:</label>\r\n      <select v-model=\"searchChocolateType\" @change=\"filterFactories\" id=\"searchChocolateType\" name=\"searchChocolateType\">\r\n        <option value=\"\">Svi tipovi</option>\r\n        <option v-for=\"type in chocolateTypes\" :key=\"type\">{{ type }}</option>\r\n      </select>\r\n\r\n      <label for=\"searchChocolateKind\">Tip čokolade:</label>\r\n      <select v-model=\"searchChocolateKind\" @change=\"filterFactories\" id=\"searchChocolateKind\" name=\"searchChocolateKind\">\r\n        <option value=\"\">Svi tipovi</option>\r\n        <option v-for=\"kind in chocolateKinds\" :key=\"kind\">{{ kind }}</option>\r\n      </select>\r\n\r\n      <label for=\"openFactoriesOnly\">Samo otvorene fabrike:</label>\r\n      <input type=\"checkbox\" v-model=\"openFactoriesOnly\" @change=\"filterFactories\" id=\"openFactoriesOnly\" name=\"openFactoriesOnly\" />\r\n    </div>\r\n    <table>\r\n      <thead>\r\n        <tr>\r\n          <th>Logo</th>\r\n          <th>Naziv</th>\r\n          <th>Lokacija</th>\r\n          <th>Ocena</th>\r\n          <th></th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        <tr v-for=\"factory in filteredFactories\" :key=\"factory.id\">\r\n          <td><img :src=\"getFactoryLogo(factory.logo)\" alt=\"Logo\" class=\"factory-logo\" /></td>\r\n          <td>{{ factory.name }}</td>\r\n          <td>{{ factory.location.address }}</td>\r\n          <td>{{ factory.rating }}</td>\r\n          <td><button @click=\"viewFactoryProfile(factory.id)\">VIEW</button></td>\r\n        </tr>\r\n      </tbody>\r\n    </table>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nimport { ref, onMounted, computed } from 'vue';\r\nimport axios from 'axios';\r\nimport { useRouter } from 'vue-router';\r\n\r\nconst router = useRouter();\r\nconst factories = ref([]);\r\nconst searchName = ref('');\r\nconst searchChocolate = ref('');\r\nconst searchLocation = ref('');\r\nconst searchRating = ref('');\r\nconst searchChocolateType = ref('');\r\nconst searchChocolateKind = ref('');\r\nconst openFactoriesOnly = ref(false);\r\n\r\nconst chocolateTypes = ['Mlečna', 'Tamna', 'Bela', 'Nugat'];\r\nconst chocolateKinds = ['Tablice', 'Praline', 'Čokoladne kuglice', 'Čokoladice'];\r\n\r\nasync function loadFactories() {\r\n  try {\r\n    const response = await axios.get('http://localhost:8080/WebShopAppREST/rest/chocolateFactoryObjects');\r\n    factories.value = response.data;\r\n    console.log(\"Učitane fabrike:\", factories.value);  // Debug log\r\n  } catch (error) {\r\n    console.error(\"Greška pri učitavanju fabrika:\", error);\r\n  }\r\n}\r\n\r\nonMounted(() => {\r\n  loadFactories();\r\n});\r\n\r\nconst isFactoryOpen = (factory) => {\r\n  const currentTime = new Date();\r\n  const openingTime = new Date();\r\n  const closingTime = new Date();\r\n\r\n  const [openHour, openMinute] = factory.openingTime.split(':');\r\n  const [closeHour, closeMinute] = factory.closingTime.split(':');\r\n\r\n  openingTime.setHours(openHour, openMinute);\r\n  closingTime.setHours(closeHour, closeMinute);\r\n\r\n  return currentTime >= openingTime && currentTime <= closingTime;\r\n};\r\n\r\nconst sortedFactories = computed(() => {\r\n  return factories.value.sort((a, b) => {\r\n    const aValue = a.name.toLowerCase();\r\n    const bValue = b.name.toLowerCase();\r\n    return aValue.localeCompare(bValue); // Default sorting by name\r\n  });\r\n});\r\n\r\nconst filteredFactories = computed(() => {\r\n  return sortedFactories.value.filter(factory => {\r\n    const matchesName = factory.name.toLowerCase().includes(searchName.value.toLowerCase());\r\n    const matchesChocolate = searchChocolate.value === '' || factory.chocolates.some(chocolate => \r\n      chocolate.name.toLowerCase().includes(searchChocolate.value.toLowerCase())\r\n    );\r\n    const matchesLocation = factory.location.address.toLowerCase().includes(searchLocation.value.toLowerCase());\r\n    const matchesRating = searchRating.value === '' || factory.rating >= parseFloat(searchRating.value);\r\n    const matchesChocolateType = !searchChocolateType.value || factory.chocolates.some(chocolate =>\r\n      chocolate.type === searchChocolateType.value\r\n    );\r\n    const matchesChocolateKind = !searchChocolateKind.value || factory.chocolates.some(chocolate =>\r\n      chocolate.kind === searchChocolateKind.value\r\n    );\r\n    const isOpenFactory = !openFactoriesOnly.value || isFactoryOpen(factory);\r\n\r\n    return matchesName && matchesChocolate && matchesLocation && matchesRating && matchesChocolateType && matchesChocolateKind && isOpenFactory;\r\n  });\r\n});\r\n\r\nconst getFactoryLogo = (logoFileName) => {\r\n  return `/images/${logoFileName}`;\r\n};\r\n\r\nconst viewFactoryProfile = (factoryId) => {\r\n  router.push({ name: 'factoryprofile', params: { id: factoryId }});\r\n};\r\n\r\nconst filterFactories = () => {\r\n  // No need for explicit return here, computed property `filteredFactories` will handle it\r\n  console.log(\"Pretraga:\");\r\n  console.log(\"Naziv čokolade:\", searchChocolate.value);\r\n  console.log(\"Naziv fabrike:\", searchName.value);\r\n  console.log(\"Lokacija:\", searchLocation.value);\r\n  console.log(\"Ocena:\", searchRating.value);\r\n  console.log(\"Vrsta čokolade:\", searchChocolateType.value);\r\n  console.log(\"Tip čokolade:\", searchChocolateKind.value);\r\n  console.log(\"Samo otvorene fabrike:\", openFactoriesOnly.value);\r\n};\r\n\r\n</script>\r\n\r\n<style scoped>\r\n.all-factories {\r\n  padding: 20px;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n}\r\n\r\n.search-filters {\r\n  margin-bottom: 20px;\r\n  display: flex;\r\n  gap: 10px;\r\n}\r\n\r\ntable {\r\n  max-width: 800px;\r\n  width: 100%;\r\n  border-collapse: collapse;\r\n  margin: 0 auto;\r\n}\r\n\r\nth, td {\r\n  border: 1px solid #ddd;\r\n  padding: 8px;\r\n  text-align: left;\r\n}\r\n\r\nth {\r\n  background-color: #f2f2f2;\r\n}\r\n\r\n.factory-logo {\r\n  width: 100px;\r\n  height: 100px;\r\n}\r\n</style>\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}