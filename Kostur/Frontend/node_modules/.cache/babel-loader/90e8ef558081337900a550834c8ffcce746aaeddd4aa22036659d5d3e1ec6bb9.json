{"ast":null,"code":"/**\n * @module ol/style/IconImageCache\n */\nimport ImageState from '../ImageState.js';\nimport { asArray } from '../color.js';\nimport { getSharedCanvasContext2D } from '../dom.js';\n\n/**\n * @classdesc\n * Singleton class. Available through {@link module:ol/style/IconImageCache.shared}.\n */\nclass IconImageCache {\n  constructor() {\n    /**\n     * @type {!Object<string, import(\"./IconImage.js\").default>}\n     * @private\n     */\n    this.cache_ = {};\n\n    /**\n     * @type {!Object<string, CanvasPattern>}\n     * @private\n     */\n    this.patternCache_ = {};\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.cacheSize_ = 0;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.maxCacheSize_ = 32;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  clear() {\n    this.cache_ = {};\n    this.patternCache_ = {};\n    this.cacheSize_ = 0;\n  }\n\n  /**\n   * @return {boolean} Can expire cache.\n   */\n  canExpireCache() {\n    return this.cacheSize_ > this.maxCacheSize_;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  expire() {\n    if (this.canExpireCache()) {\n      let i = 0;\n      for (const key in this.cache_) {\n        const iconImage = this.cache_[key];\n        if ((i++ & 3) === 0 && !iconImage.hasListener()) {\n          delete this.cache_[key];\n          delete this.patternCache_[key];\n          --this.cacheSize_;\n        }\n      }\n    }\n  }\n\n  /**\n   * @param {string} src Src.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"../color.js\").Color|string|null} color Color.\n   * @return {import(\"./IconImage.js\").default} Icon image.\n   */\n  get(src, crossOrigin, color) {\n    const key = getCacheKey(src, crossOrigin, color);\n    return key in this.cache_ ? this.cache_[key] : null;\n  }\n\n  /**\n   * @param {string} src Src.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"../color.js\").Color|string|null} color Color.\n   * @return {CanvasPattern} Icon image.\n   */\n  getPattern(src, crossOrigin, color) {\n    const key = getCacheKey(src, crossOrigin, color);\n    return key in this.patternCache_ ? this.patternCache_[key] : null;\n  }\n\n  /**\n   * @param {string} src Src.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"../color.js\").Color|string|null} color Color.\n   * @param {import(\"./IconImage.js\").default|null} iconImage Icon image.\n   * @param {boolean} [pattern] Also cache a `'repeat'` pattern with this `iconImage`.\n   */\n  set(src, crossOrigin, color, iconImage, pattern) {\n    const key = getCacheKey(src, crossOrigin, color);\n    const update = (key in this.cache_);\n    this.cache_[key] = iconImage;\n    if (pattern) {\n      if (iconImage.getImageState() === ImageState.IDLE) {\n        iconImage.load();\n      }\n      if (iconImage.getImageState() === ImageState.LOADING) {\n        iconImage.ready().then(() => {\n          this.patternCache_[key] = getSharedCanvasContext2D().createPattern(iconImage.getImage(1), 'repeat');\n        });\n      } else {\n        this.patternCache_[key] = getSharedCanvasContext2D().createPattern(iconImage.getImage(1), 'repeat');\n      }\n    }\n    if (!update) {\n      ++this.cacheSize_;\n    }\n  }\n\n  /**\n   * Set the cache size of the icon cache. Default is `32`. Change this value when\n   * your map uses more than 32 different icon images and you are not caching icon\n   * styles on the application level.\n   * @param {number} maxCacheSize Cache max size.\n   * @api\n   */\n  setSize(maxCacheSize) {\n    this.maxCacheSize_ = maxCacheSize;\n    this.expire();\n  }\n}\n\n/**\n * @param {string} src Src.\n * @param {?string} crossOrigin Cross origin.\n * @param {import(\"../color.js\").Color|string|null} color Color.\n * @return {string} Cache key.\n */\nexport function getCacheKey(src, crossOrigin, color) {\n  const colorString = color ? asArray(color) : 'null';\n  return crossOrigin + ':' + src + ':' + colorString;\n}\nexport default IconImageCache;\n\n/**\n * The {@link module:ol/style/IconImageCache~IconImageCache} for\n * {@link module:ol/style/Icon~Icon} images.\n * @api\n */\nexport const shared = new IconImageCache();","map":{"version":3,"names":["ImageState","asArray","getSharedCanvasContext2D","IconImageCache","constructor","cache_","patternCache_","cacheSize_","maxCacheSize_","clear","canExpireCache","expire","i","key","iconImage","hasListener","get","src","crossOrigin","color","getCacheKey","getPattern","set","pattern","update","getImageState","IDLE","load","LOADING","ready","then","createPattern","getImage","setSize","maxCacheSize","colorString","shared"],"sources":["C:/Users/PC/eclipse-workspace/apache-tomcat-9.0.89/apache-tomcat-9.0.89/webapps/chocolate-factory-2/Kostur/Frontend/front-app/node_modules/ol/style/IconImageCache.js"],"sourcesContent":["/**\n * @module ol/style/IconImageCache\n */\nimport ImageState from '../ImageState.js';\nimport {asArray} from '../color.js';\nimport {getSharedCanvasContext2D} from '../dom.js';\n\n/**\n * @classdesc\n * Singleton class. Available through {@link module:ol/style/IconImageCache.shared}.\n */\nclass IconImageCache {\n  constructor() {\n    /**\n     * @type {!Object<string, import(\"./IconImage.js\").default>}\n     * @private\n     */\n    this.cache_ = {};\n\n    /**\n     * @type {!Object<string, CanvasPattern>}\n     * @private\n     */\n    this.patternCache_ = {};\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.cacheSize_ = 0;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.maxCacheSize_ = 32;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  clear() {\n    this.cache_ = {};\n    this.patternCache_ = {};\n    this.cacheSize_ = 0;\n  }\n\n  /**\n   * @return {boolean} Can expire cache.\n   */\n  canExpireCache() {\n    return this.cacheSize_ > this.maxCacheSize_;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  expire() {\n    if (this.canExpireCache()) {\n      let i = 0;\n      for (const key in this.cache_) {\n        const iconImage = this.cache_[key];\n        if ((i++ & 3) === 0 && !iconImage.hasListener()) {\n          delete this.cache_[key];\n          delete this.patternCache_[key];\n          --this.cacheSize_;\n        }\n      }\n    }\n  }\n\n  /**\n   * @param {string} src Src.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"../color.js\").Color|string|null} color Color.\n   * @return {import(\"./IconImage.js\").default} Icon image.\n   */\n  get(src, crossOrigin, color) {\n    const key = getCacheKey(src, crossOrigin, color);\n    return key in this.cache_ ? this.cache_[key] : null;\n  }\n\n  /**\n   * @param {string} src Src.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"../color.js\").Color|string|null} color Color.\n   * @return {CanvasPattern} Icon image.\n   */\n  getPattern(src, crossOrigin, color) {\n    const key = getCacheKey(src, crossOrigin, color);\n    return key in this.patternCache_ ? this.patternCache_[key] : null;\n  }\n\n  /**\n   * @param {string} src Src.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"../color.js\").Color|string|null} color Color.\n   * @param {import(\"./IconImage.js\").default|null} iconImage Icon image.\n   * @param {boolean} [pattern] Also cache a `'repeat'` pattern with this `iconImage`.\n   */\n  set(src, crossOrigin, color, iconImage, pattern) {\n    const key = getCacheKey(src, crossOrigin, color);\n    const update = key in this.cache_;\n    this.cache_[key] = iconImage;\n    if (pattern) {\n      if (iconImage.getImageState() === ImageState.IDLE) {\n        iconImage.load();\n      }\n      if (iconImage.getImageState() === ImageState.LOADING) {\n        iconImage.ready().then(() => {\n          this.patternCache_[key] = getSharedCanvasContext2D().createPattern(\n            iconImage.getImage(1),\n            'repeat',\n          );\n        });\n      } else {\n        this.patternCache_[key] = getSharedCanvasContext2D().createPattern(\n          iconImage.getImage(1),\n          'repeat',\n        );\n      }\n    }\n    if (!update) {\n      ++this.cacheSize_;\n    }\n  }\n\n  /**\n   * Set the cache size of the icon cache. Default is `32`. Change this value when\n   * your map uses more than 32 different icon images and you are not caching icon\n   * styles on the application level.\n   * @param {number} maxCacheSize Cache max size.\n   * @api\n   */\n  setSize(maxCacheSize) {\n    this.maxCacheSize_ = maxCacheSize;\n    this.expire();\n  }\n}\n\n/**\n * @param {string} src Src.\n * @param {?string} crossOrigin Cross origin.\n * @param {import(\"../color.js\").Color|string|null} color Color.\n * @return {string} Cache key.\n */\nexport function getCacheKey(src, crossOrigin, color) {\n  const colorString = color ? asArray(color) : 'null';\n  return crossOrigin + ':' + src + ':' + colorString;\n}\n\nexport default IconImageCache;\n\n/**\n * The {@link module:ol/style/IconImageCache~IconImageCache} for\n * {@link module:ol/style/Icon~Icon} images.\n * @api\n */\nexport const shared = new IconImageCache();\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}