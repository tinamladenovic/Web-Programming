{"ast":null,"code":"import axios from 'axios';\nexport default {\n  props: {\n    id: String\n  },\n  data() {\n    return {\n      factory: null,\n      chocolates: [],\n      users: [] // Učitani korisnici\n    };\n  },\n  methods: {\n    loadFactory() {\n      axios.get(`http://localhost:8080/WebShopAppREST/rest/chocolateFactoryObjects/${this.id}`).then(response => {\n        this.factory = response.data;\n        this.loadChocolates();\n        this.loadComments(); // Učitavamo komentare\n        this.loadUsers(); // Učitavamo korisnike\n      }).catch(error => {\n        console.error(\"Error loading factory:\", error);\n      });\n    },\n    loadChocolates() {\n      axios.get(`http://localhost:8080/WebShopAppREST/rest/chocolates`).then(response => {\n        this.chocolates = response.data.filter(chocolate => chocolate.factoryId === this.factory.factoryId);\n      }).catch(error => {\n        console.error(\"Error loading chocolates:\", error);\n      });\n    },\n    loadComments() {\n      axios.get(`http://localhost:8080/WebShopAppREST/rest/comments`).then(response => {\n        this.factory.comments = response.data.filter(comment => comment.factoryId === this.factory.factoryId);\n      }).catch(error => {\n        console.error(\"Error loading comments:\", error);\n      });\n    },\n    loadUsers() {\n      axios.get('http://localhost:8080/WebShopAppREST/rest/users').then(response => {\n        this.users = response.data;\n        this.mapCommentsToUsers();\n      }).catch(error => {\n        console.error(\"Error loading users:\", error);\n      });\n    },\n    mapCommentsToUsers() {\n      // Dodeljujemo username svakom komentaru na osnovu userId\n      this.factory.comments.forEach(comment => {\n        const user = this.users.find(u => u.id === comment.userId);\n        comment.username = user ? user.username : 'Unknown User';\n      });\n    },\n    getFactoryLogo(logoFileName) {\n      return `/images/${logoFileName}`;\n    }\n  },\n  mounted() {\n    this.loadFactory();\n  }\n};","map":{"version":3,"names":["axios","props","id","String","data","factory","chocolates","users","methods","loadFactory","get","then","response","loadChocolates","loadComments","loadUsers","catch","error","console","filter","chocolate","factoryId","comments","comment","mapCommentsToUsers","forEach","user","find","u","userId","username","getFactoryLogo","logoFileName","mounted"],"sources":["C:\\Users\\PC\\eclipse-workspace\\apache-tomcat-9.0.89\\apache-tomcat-9.0.89\\webapps\\chocolate-factory-2\\Kostur\\Frontend\\front-app\\src\\views\\FactoryProfile.vue"],"sourcesContent":["<template>\r\n  <div class=\"factory-profile\" v-if=\"factory\">\r\n    <div class=\"factory-info\">\r\n      <img :src=\"getFactoryLogo(factory.logo)\" alt=\"Logo\" class=\"factory-logo\" />\r\n      <h2>{{ factory.name }}</h2>\r\n      <!-- Ostale informacije o fabrici -->\r\n    </div>\r\n\r\n    <div class=\"factory-comments\">\r\n      <h3>Comments:</h3>\r\n      <ul v-if=\"factory.comments && factory.comments.length\">\r\n        <li v-for=\"comment in factory.comments\" :key=\"comment.id\" class=\"comment-item\">\r\n          <div class=\"comment-header\">\r\n            <strong>User:</strong> {{ comment.username || 'Unknown User' }}\r\n          </div>\r\n          <div class=\"comment-text\">\r\n            <p>{{ comment.text }}</p>\r\n          </div>\r\n        </li>\r\n      </ul>\r\n      <p v-else>No comments available.</p>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from 'axios';\r\n\r\nexport default {\r\n  props: {\r\n    id: String,\r\n  },\r\n  data() {\r\n    return {\r\n      factory: null,\r\n      chocolates: [],\r\n      users: [], // Učitani korisnici\r\n    };\r\n  },\r\n  methods: {\r\n    loadFactory() {\r\n      axios.get(`http://localhost:8080/WebShopAppREST/rest/chocolateFactoryObjects/${this.id}`)\r\n        .then(response => {\r\n          this.factory = response.data;\r\n          this.loadChocolates();\r\n          this.loadComments(); // Učitavamo komentare\r\n          this.loadUsers(); // Učitavamo korisnike\r\n        })\r\n        .catch(error => {\r\n          console.error(\"Error loading factory:\", error);\r\n        });\r\n    },\r\n    loadChocolates() {\r\n      axios.get(`http://localhost:8080/WebShopAppREST/rest/chocolates`)\r\n        .then(response => {\r\n          this.chocolates = response.data.filter(chocolate => chocolate.factoryId === this.factory.factoryId);\r\n        })\r\n        .catch(error => {\r\n          console.error(\"Error loading chocolates:\", error);\r\n        });\r\n    },\r\n    loadComments() {\r\n      axios.get(`http://localhost:8080/WebShopAppREST/rest/comments`)\r\n        .then(response => {\r\n          this.factory.comments = response.data.filter(comment => comment.factoryId === this.factory.factoryId);\r\n        })\r\n        .catch(error => {\r\n          console.error(\"Error loading comments:\", error);\r\n        });\r\n    },\r\n    loadUsers() {\r\n      axios.get('http://localhost:8080/WebShopAppREST/rest/users')\r\n        .then(response => {\r\n          this.users = response.data;\r\n          this.mapCommentsToUsers();\r\n        })\r\n        .catch(error => {\r\n          console.error(\"Error loading users:\", error);\r\n        });\r\n    },\r\n    mapCommentsToUsers() {\r\n      // Dodeljujemo username svakom komentaru na osnovu userId\r\n      this.factory.comments.forEach(comment => {\r\n        const user = this.users.find(u => u.id === comment.userId);\r\n        comment.username = user ? user.username : 'Unknown User';\r\n      });\r\n    },\r\n    getFactoryLogo(logoFileName) {\r\n      return `/images/${logoFileName}`;\r\n    }\r\n  },\r\n  mounted() {\r\n    this.loadFactory();\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.d-flex {\r\n  min-height: 100vh;\r\n}\r\n\r\n.card {\r\n  border: 1px solid #ddd;\r\n  border-radius: 8px;\r\n  padding: 30px;\r\n  background-color: #f0f8ff;\r\n  box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);\r\n}\r\n\r\nh2 {\r\n  color: #343a40;\r\n  text-align: center;\r\n  font-size: 2rem;\r\n  font-weight: normal;\r\n}\r\n\r\n.form-label {\r\n  font-weight: normal;\r\n}\r\n\r\ninput[type=\"text\"],\r\nselect,\r\nbutton {\r\n  border: 1px solid #007bff;\r\n  border-radius: 8px;\r\n  font-size: 1.1rem;\r\n  transition: border-color 0.3s ease, box-shadow 0.3s ease;\r\n}\r\n\r\ninput[type=\"text\"]:focus,\r\nselect:focus {\r\n  border-color: #007bff;\r\n  box-shadow: 0 0 5px rgba(0, 123, 255, 0.25);\r\n}\r\n\r\nbutton[type=\"submit\"],\r\n.btn-outline-secondary {\r\n  border: 1px solid #007bff;\r\n  background-color: transparent;\r\n  color: #007bff;\r\n  font-size: 1.1rem;\r\n  transition: background-color 0.3s ease, color 0.3s ease;\r\n}\r\n\r\nbutton[type=\"submit\"]:hover,\r\n.btn-outline-secondary:hover {\r\n  background-color: #007bff;\r\n  color: white;\r\n}\r\n\r\nbutton[type=\"submit\"] {\r\n  margin-top: 20px;\r\n}\r\n\r\n.text-danger {\r\n  margin-top: 15px;\r\n}\r\n\r\n.text-success {\r\n  margin-top: 15px;\r\n}\r\n\r\n.factory-profile {\r\n  display: flex;\r\n  gap: 20px;\r\n  padding: 20px;\r\n  max-width: 100%;\r\n  margin: 0 auto;\r\n}\r\n\r\n.factory-info,\r\n.factory-chocolates,\r\n.factory-comments {\r\n  border: 1px solid #ddd;\r\n  border-radius: 8px;\r\n  padding: 30px;\r\n  background-color: #f0f8ff;\r\n  box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);\r\n  flex: 1;\r\n}\r\n\r\n.factory-info {\r\n  max-width: 500px;\r\n}\r\n\r\n.map-container {\r\n  width: 100%;\r\n  height: 300px;\r\n  margin-top: 20px;\r\n  border-radius: 8px;\r\n}\r\n\r\n.factory-logo {\r\n  max-width: 100%;\r\n  height: auto;\r\n  margin-bottom: 10px;\r\n  border-radius: 8px;\r\n}\r\n\r\ntable {\r\n  width: 100%;\r\n  border-collapse: collapse;\r\n  margin-bottom: 20px;\r\n}\r\n\r\nth, td {\r\n  border: 1px solid #ddd;\r\n  padding: 8px;\r\n  text-align: left;\r\n}\r\n\r\nth {\r\n  background-color: #f5e7f5;\r\n  font-weight: bold;\r\n}\r\n</style>\r\n"],"mappings":"AA0BA,OAAOA,KAAI,MAAO,OAAO;AAEzB,eAAe;EACbC,KAAK,EAAE;IACLC,EAAE,EAAEC;EACN,CAAC;EACDC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,OAAO,EAAE,IAAI;MACbC,UAAU,EAAE,EAAE;MACdC,KAAK,EAAE,EAAE,CAAE;IACb,CAAC;EACH,CAAC;EACDC,OAAO,EAAE;IACPC,WAAWA,CAAA,EAAG;MACZT,KAAK,CAACU,GAAG,CAAE,qEAAoE,IAAI,CAACR,EAAG,EAAC,EACrFS,IAAI,CAACC,QAAO,IAAK;QAChB,IAAI,CAACP,OAAM,GAAIO,QAAQ,CAACR,IAAI;QAC5B,IAAI,CAACS,cAAc,CAAC,CAAC;QACrB,IAAI,CAACC,YAAY,CAAC,CAAC,EAAE;QACrB,IAAI,CAACC,SAAS,CAAC,CAAC,EAAE;MACpB,CAAC,EACAC,KAAK,CAACC,KAAI,IAAK;QACdC,OAAO,CAACD,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;MAChD,CAAC,CAAC;IACN,CAAC;IACDJ,cAAcA,CAAA,EAAG;MACfb,KAAK,CAACU,GAAG,CAAE,sDAAqD,EAC7DC,IAAI,CAACC,QAAO,IAAK;QAChB,IAAI,CAACN,UAAS,GAAIM,QAAQ,CAACR,IAAI,CAACe,MAAM,CAACC,SAAQ,IAAKA,SAAS,CAACC,SAAQ,KAAM,IAAI,CAAChB,OAAO,CAACgB,SAAS,CAAC;MACrG,CAAC,EACAL,KAAK,CAACC,KAAI,IAAK;QACdC,OAAO,CAACD,KAAK,CAAC,2BAA2B,EAAEA,KAAK,CAAC;MACnD,CAAC,CAAC;IACN,CAAC;IACDH,YAAYA,CAAA,EAAG;MACbd,KAAK,CAACU,GAAG,CAAE,oDAAmD,EAC3DC,IAAI,CAACC,QAAO,IAAK;QAChB,IAAI,CAACP,OAAO,CAACiB,QAAO,GAAIV,QAAQ,CAACR,IAAI,CAACe,MAAM,CAACI,OAAM,IAAKA,OAAO,CAACF,SAAQ,KAAM,IAAI,CAAChB,OAAO,CAACgB,SAAS,CAAC;MACvG,CAAC,EACAL,KAAK,CAACC,KAAI,IAAK;QACdC,OAAO,CAACD,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC;MACjD,CAAC,CAAC;IACN,CAAC;IACDF,SAASA,CAAA,EAAG;MACVf,KAAK,CAACU,GAAG,CAAC,iDAAiD,EACxDC,IAAI,CAACC,QAAO,IAAK;QAChB,IAAI,CAACL,KAAI,GAAIK,QAAQ,CAACR,IAAI;QAC1B,IAAI,CAACoB,kBAAkB,CAAC,CAAC;MAC3B,CAAC,EACAR,KAAK,CAACC,KAAI,IAAK;QACdC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;MAC9C,CAAC,CAAC;IACN,CAAC;IACDO,kBAAkBA,CAAA,EAAG;MACnB;MACA,IAAI,CAACnB,OAAO,CAACiB,QAAQ,CAACG,OAAO,CAACF,OAAM,IAAK;QACvC,MAAMG,IAAG,GAAI,IAAI,CAACnB,KAAK,CAACoB,IAAI,CAACC,CAAA,IAAKA,CAAC,CAAC1B,EAAC,KAAMqB,OAAO,CAACM,MAAM,CAAC;QAC1DN,OAAO,CAACO,QAAO,GAAIJ,IAAG,GAAIA,IAAI,CAACI,QAAO,GAAI,cAAc;MAC1D,CAAC,CAAC;IACJ,CAAC;IACDC,cAAcA,CAACC,YAAY,EAAE;MAC3B,OAAQ,WAAUA,YAAa,EAAC;IAClC;EACF,CAAC;EACDC,OAAOA,CAAA,EAAG;IACR,IAAI,CAACxB,WAAW,CAAC,CAAC;EACpB;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}