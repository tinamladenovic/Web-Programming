{"ast":null,"code":"import axios from 'axios';\nimport { ref, onMounted } from 'vue';\nexport default {\n  setup() {\n    const chocolates = ref([]);\n    const selectedChocolate = ref(null);\n    const newQuantity = ref(0);\n    const userRole = ref(null); // Dodavanje uloge korisnika\n\n    const fetchWorkerData = async () => {\n      try {\n        // Dohvatanje trenutnog korisnika\n        const response = await axios.get('http://localhost:8080/WebShopAppREST/rest/currentUser', {\n          withCredentials: true\n        });\n        const worker = response.data;\n        userRole.value = worker.role; // Provera uloge korisnika\n\n        if (worker.role === 'WORKER') {\n          // Fetch chocolates from the worker's factory\n          const factoryResponse = await axios.get(`http://localhost:8080/WebShopAppREST/rest/chocolateFactoryObjects/${worker.factoryId}`, {\n            withCredentials: true\n          });\n          chocolates.value = factoryResponse.data.chocolates;\n        } else {\n          console.warn('Only workers can manage chocolate quantities.');\n        }\n      } catch (error) {\n        console.error('Error fetching worker data:', error);\n      }\n    };\n    const selectChocolate = chocolate => {\n      selectedChocolate.value = chocolate;\n      newQuantity.value = chocolate.quantity;\n    };\n    const updateQuantity = async () => {\n      if (selectedChocolate.value && newQuantity.value >= 0) {\n        try {\n          const updatedChocolate = {\n            ...selectedChocolate.value,\n            quantity: newQuantity.value\n          };\n          console.log(\"Updating chocolate:\", updatedChocolate);\n          const response = await axios.put(`http://localhost:8080/WebShopAppREST/rest/chocolates/${selectedChocolate.value.id}/quantity`, updatedChocolate, {\n            withCredentials: true\n          });\n          selectedChocolate.value.quantity = newQuantity.value;\n          alert('Quantity updated successfully.');\n        } catch (error) {\n          console.error('Error updating chocolate quantity:', error);\n          if (error.response && error.response.status === 403) {\n            alert('Access denied: You can only update quantities for chocolates in your factory.');\n          } else {\n            alert('An error occurred while updating quantity.');\n          }\n        }\n      }\n    };\n    onMounted(() => {\n      fetchWorkerData();\n    });\n    return {\n      chocolates,\n      selectedChocolate,\n      newQuantity,\n      selectChocolate,\n      updateQuantity,\n      userRole // Vraćanje uloge korisnika\n    };\n  }\n};","map":{"version":3,"names":["axios","ref","onMounted","setup","chocolates","selectedChocolate","newQuantity","userRole","fetchWorkerData","response","get","withCredentials","worker","data","value","role","factoryResponse","factoryId","console","warn","error","selectChocolate","chocolate","quantity","updateQuantity","updatedChocolate","log","put","id","alert","status"],"sources":["C:\\Users\\PC\\eclipse-workspace\\apache-tomcat-9.0.89\\apache-tomcat-9.0.89\\webapps\\chocolate-factory-2\\Kostur\\Frontend\\front-app\\src\\views\\WorkerView.vue"],"sourcesContent":["<template>\r\n  <div class=\"d-flex justify-content-center align-items-center vh-75\">\r\n    <div class=\"card p-5 shadow-lg\" style=\"width: 100%; max-width: 1000px; background-color: #e9f5ff; margin-top: -50px;\">\r\n     \r\n      <h2 class=\"text-center mb-4 blue-label\">CHOCOLATES</h2>\r\n      \r\n      <!-- Lista čokolada -->\r\n      <ul class=\"chocolates-list\">\r\n        <li v-for=\"chocolate in chocolates\" :key=\"chocolate.id\" @click=\"selectChocolate(chocolate)\">\r\n          <div class=\"chocolate-info\">\r\n            <span>{{ chocolate.name }}</span>\r\n            <span><strong>Type:</strong> {{ chocolate.type }}</span>\r\n            <span><strong>Kind:</strong> {{ chocolate.kind }}</span>\r\n            <span><strong>Weight:</strong> {{ chocolate.weight }}g</span>\r\n            <span><strong>Status:</strong> {{ chocolate.status }}</span>\r\n            <span><strong>Quantity:</strong> {{ chocolate.quantity }} pcs</span>\r\n          </div>\r\n        </li>\r\n      </ul>\r\n\r\n      <!-- Sekcija za ažuriranje količine, samo za WORKER ulogu -->\r\n      <div v-if=\"selectedChocolate && userRole === 'WORKER'\" class=\"edit-quantity text-center\">\r\n        <h3>Update quantity for: {{ selectedChocolate.name }}</h3>\r\n        <input v-model.number=\"newQuantity\" type=\"number\" min=\"0\" placeholder=\"Enter new quantity\" class=\"form-control half-width\">\r\n        <button @click=\"updateQuantity\" class=\"btn btn-outline-primary mt-2\">Update Quantity</button>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from 'axios';\r\nimport { ref, onMounted } from 'vue';\r\n\r\nexport default {\r\n  setup() {\r\n    const chocolates = ref([]);\r\n    const selectedChocolate = ref(null);\r\n    const newQuantity = ref(0);\r\n    const userRole = ref(null); // Dodavanje uloge korisnika\r\n\r\n    const fetchWorkerData = async () => {\r\n      try {\r\n        // Dohvatanje trenutnog korisnika\r\n        const response = await axios.get('http://localhost:8080/WebShopAppREST/rest/currentUser', {\r\n          withCredentials: true,\r\n        });\r\n        const worker = response.data;\r\n        userRole.value = worker.role; // Provera uloge korisnika\r\n\r\n        if (worker.role === 'WORKER') {\r\n          // Fetch chocolates from the worker's factory\r\n          const factoryResponse = await axios.get(`http://localhost:8080/WebShopAppREST/rest/chocolateFactoryObjects/${worker.factoryId}`, {\r\n            withCredentials: true,\r\n          });\r\n          chocolates.value = factoryResponse.data.chocolates;\r\n        } else {\r\n          console.warn('Only workers can manage chocolate quantities.');\r\n        }\r\n      } catch (error) {\r\n        console.error('Error fetching worker data:', error);\r\n      }\r\n    };\r\n\r\n    const selectChocolate = (chocolate) => {\r\n      selectedChocolate.value = chocolate;\r\n      newQuantity.value = chocolate.quantity;\r\n    };\r\n\r\n    const updateQuantity = async () => {\r\n      if (selectedChocolate.value && newQuantity.value >= 0) {\r\n        try {\r\n          const updatedChocolate = { ...selectedChocolate.value, quantity: newQuantity.value };\r\n          console.log(\"Updating chocolate:\", updatedChocolate);\r\n          const response = await axios.put(`http://localhost:8080/WebShopAppREST/rest/chocolates/${selectedChocolate.value.id}/quantity`, updatedChocolate, {\r\n            withCredentials: true,\r\n          });\r\n          selectedChocolate.value.quantity = newQuantity.value;\r\n          alert('Quantity updated successfully.');\r\n        } catch (error) {\r\n          console.error('Error updating chocolate quantity:', error);\r\n          if (error.response && error.response.status === 403) {\r\n            alert('Access denied: You can only update quantities for chocolates in your factory.');\r\n          } else {\r\n            alert('An error occurred while updating quantity.');\r\n          }\r\n        }\r\n      }\r\n    };\r\n\r\n    onMounted(() => {\r\n      fetchWorkerData();\r\n    });\r\n\r\n    return {\r\n      chocolates,\r\n      selectedChocolate,\r\n      newQuantity,\r\n      selectChocolate,\r\n      updateQuantity,\r\n      userRole, // Vraćanje uloge korisnika\r\n    };\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.d-flex {\r\n  min-height: 75vh;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n}\r\n\r\n.card {\r\n  border: 1px solid #ddd;\r\n  border-radius: 8px;\r\n  padding: 30px;\r\n  background-color: #e9f5ff; /* Svetlo plava pozadina */\r\n  box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);\r\n  text-align: center;\r\n}\r\n\r\nh2 {\r\n  color: #007bff;\r\n  font-size: 2rem;\r\n  font-weight: normal;\r\n}\r\n\r\n.chocolates-list {\r\n  list-style-type: none;\r\n  padding: 0;\r\n}\r\n\r\n.chocolates-list li {\r\n  padding: 10px;\r\n  cursor: pointer;\r\n  background-color: #f2f2f2;\r\n  margin-bottom: 10px;\r\n  border-radius: 8px;\r\n  text-align: center;\r\n  transition: background-color 0.3s ease;\r\n}\r\n\r\n.chocolates-list li:hover {\r\n  background-color: #e0e0e0;\r\n}\r\n\r\n.chocolate-info {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  flex-wrap: wrap;\r\n  gap: 10px;\r\n  text-align: left;\r\n}\r\n\r\n/* Sekcija za ažuriranje količine */\r\n.edit-quantity {\r\n  margin-top: 20px;\r\n}\r\n\r\n.edit-quantity input {\r\n  margin-right: 10px;\r\n  padding: 10px;\r\n  width: 50%;\r\n  border: 1px solid #007bff;\r\n  border-radius: 8px;\r\n  font-size: 1.1rem;\r\n  transition: border-color 0.3s ease, box-shadow 0.3s ease;\r\n}\r\n\r\n.edit-quantity input:focus {\r\n  border-color: #007bff;\r\n  box-shadow: 0 0 5px rgba(0, 123, 255, 0.25);\r\n}\r\n\r\n.edit-quantity button {\r\n  padding: 10px;\r\n  background-color: transparent;\r\n  color: #007bff;\r\n  border: 1px solid #007bff;\r\n  border-radius: 8px;\r\n  font-size: 1.1rem;\r\n  transition: background-color 0.3s ease, color 0.3s ease;\r\n}\r\n\r\n.edit-quantity button:hover {\r\n  background-color: #007bff;\r\n  color: white;\r\n}\r\n</style>\r\n"],"mappings":"AA+BA,OAAOA,KAAI,MAAO,OAAO;AACzB,SAASC,GAAG,EAAEC,SAAQ,QAAS,KAAK;AAEpC,eAAe;EACbC,KAAKA,CAAA,EAAG;IACN,MAAMC,UAAS,GAAIH,GAAG,CAAC,EAAE,CAAC;IAC1B,MAAMI,iBAAgB,GAAIJ,GAAG,CAAC,IAAI,CAAC;IACnC,MAAMK,WAAU,GAAIL,GAAG,CAAC,CAAC,CAAC;IAC1B,MAAMM,QAAO,GAAIN,GAAG,CAAC,IAAI,CAAC,EAAE;;IAE5B,MAAMO,eAAc,GAAI,MAAAA,CAAA,KAAY;MAClC,IAAI;QACF;QACA,MAAMC,QAAO,GAAI,MAAMT,KAAK,CAACU,GAAG,CAAC,uDAAuD,EAAE;UACxFC,eAAe,EAAE;QACnB,CAAC,CAAC;QACF,MAAMC,MAAK,GAAIH,QAAQ,CAACI,IAAI;QAC5BN,QAAQ,CAACO,KAAI,GAAIF,MAAM,CAACG,IAAI,EAAE;;QAE9B,IAAIH,MAAM,CAACG,IAAG,KAAM,QAAQ,EAAE;UAC5B;UACA,MAAMC,eAAc,GAAI,MAAMhB,KAAK,CAACU,GAAG,CAAE,qEAAoEE,MAAM,CAACK,SAAU,EAAC,EAAE;YAC/HN,eAAe,EAAE;UACnB,CAAC,CAAC;UACFP,UAAU,CAACU,KAAI,GAAIE,eAAe,CAACH,IAAI,CAACT,UAAU;QACpD,OAAO;UACLc,OAAO,CAACC,IAAI,CAAC,+CAA+C,CAAC;QAC/D;MACF,EAAE,OAAOC,KAAK,EAAE;QACdF,OAAO,CAACE,KAAK,CAAC,6BAA6B,EAAEA,KAAK,CAAC;MACrD;IACF,CAAC;IAED,MAAMC,eAAc,GAAKC,SAAS,IAAK;MACrCjB,iBAAiB,CAACS,KAAI,GAAIQ,SAAS;MACnChB,WAAW,CAACQ,KAAI,GAAIQ,SAAS,CAACC,QAAQ;IACxC,CAAC;IAED,MAAMC,cAAa,GAAI,MAAAA,CAAA,KAAY;MACjC,IAAInB,iBAAiB,CAACS,KAAI,IAAKR,WAAW,CAACQ,KAAI,IAAK,CAAC,EAAE;QACrD,IAAI;UACF,MAAMW,gBAAe,GAAI;YAAE,GAAGpB,iBAAiB,CAACS,KAAK;YAAES,QAAQ,EAAEjB,WAAW,CAACQ;UAAM,CAAC;UACpFI,OAAO,CAACQ,GAAG,CAAC,qBAAqB,EAAED,gBAAgB,CAAC;UACpD,MAAMhB,QAAO,GAAI,MAAMT,KAAK,CAAC2B,GAAG,CAAE,wDAAuDtB,iBAAiB,CAACS,KAAK,CAACc,EAAG,WAAU,EAAEH,gBAAgB,EAAE;YAChJd,eAAe,EAAE;UACnB,CAAC,CAAC;UACFN,iBAAiB,CAACS,KAAK,CAACS,QAAO,GAAIjB,WAAW,CAACQ,KAAK;UACpDe,KAAK,CAAC,gCAAgC,CAAC;QACzC,EAAE,OAAOT,KAAK,EAAE;UACdF,OAAO,CAACE,KAAK,CAAC,oCAAoC,EAAEA,KAAK,CAAC;UAC1D,IAAIA,KAAK,CAACX,QAAO,IAAKW,KAAK,CAACX,QAAQ,CAACqB,MAAK,KAAM,GAAG,EAAE;YACnDD,KAAK,CAAC,+EAA+E,CAAC;UACxF,OAAO;YACLA,KAAK,CAAC,4CAA4C,CAAC;UACrD;QACF;MACF;IACF,CAAC;IAED3B,SAAS,CAAC,MAAM;MACdM,eAAe,CAAC,CAAC;IACnB,CAAC,CAAC;IAEF,OAAO;MACLJ,UAAU;MACVC,iBAAiB;MACjBC,WAAW;MACXe,eAAe;MACfG,cAAc;MACdjB,QAAQ,CAAE;IACZ,CAAC;EACH;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}