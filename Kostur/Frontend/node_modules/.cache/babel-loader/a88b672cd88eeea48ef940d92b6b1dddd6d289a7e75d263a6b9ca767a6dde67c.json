{"ast":null,"code":"import { createElementVNode as _createElementVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, renderList as _renderList, Fragment as _Fragment, toDisplayString as _toDisplayString, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-fb525b24\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  class: \"all-chocolates\"\n};\nconst _hoisted_2 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"th\", null, \"Slika\", -1 /* HOISTED */));\nconst _hoisted_3 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"th\", null, \"Naziv\", -1 /* HOISTED */));\nconst _hoisted_4 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"th\", null, \"Cena\", -1 /* HOISTED */));\nconst _hoisted_5 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"th\", null, \"Tip\", -1 /* HOISTED */));\nconst _hoisted_6 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"th\", null, \"Vrsta\", -1 /* HOISTED */));\nconst _hoisted_7 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"th\", null, \"Težina\", -1 /* HOISTED */));\nconst _hoisted_8 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"th\", null, \"Opis\", -1 /* HOISTED */));\nconst _hoisted_9 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"th\", null, \"Fabrika\", -1 /* HOISTED */));\nconst _hoisted_10 = {\n  key: 0\n};\nconst _hoisted_11 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"th\", null, \"EDIT\", -1 /* HOISTED */));\nconst _hoisted_12 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"th\", null, \"DELETE\", -1 /* HOISTED */));\nconst _hoisted_13 = [\"src\", \"alt\"];\nconst _hoisted_14 = {\n  key: 0\n};\nconst _hoisted_15 = [\"onClick\"];\nconst _hoisted_16 = {\n  key: 1\n};\nconst _hoisted_17 = [\"onClick\"];\nconst _hoisted_18 = {\n  key: 2\n};\nconst _hoisted_19 = [\"onClick\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"table\", null, [_createElementVNode(\"thead\", null, [_createElementVNode(\"tr\", null, [_hoisted_2, _hoisted_3, _hoisted_4, _hoisted_5, _hoisted_6, _hoisted_7, _hoisted_8, _hoisted_9, $options.isManagerOrWorker ? (_openBlock(), _createElementBlock(\"th\", _hoisted_10, \"Izmeni količinu\")) : _createCommentVNode(\"v-if\", true), _createCommentVNode(\" Prikazuje dugme za izmenu količine samo ako je korisnik menadžer ili radnik \"), _hoisted_11, _createCommentVNode(\" Prikazuje dugme za editovanje samo ako je korisnik menadžer \"), _hoisted_12, _createCommentVNode(\" Prikazuje dugme za brisanje samo ako je korisnik menadžer \")])]), _createElementVNode(\"tbody\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($options.filteredChocolates, chocolate => {\n    return _openBlock(), _createElementBlock(\"tr\", {\n      key: chocolate.id\n    }, [_createElementVNode(\"td\", null, [_createElementVNode(\"img\", {\n      src: $options.getChocolatePicture(chocolate.picture),\n      alt: chocolate.name,\n      class: \"chocolate-picture\"\n    }, null, 8 /* PROPS */, _hoisted_13)]), _createElementVNode(\"td\", null, _toDisplayString(chocolate.name), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(chocolate.price), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(chocolate.type), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(chocolate.kind), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(chocolate.weight), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(chocolate.description), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString($options.getFactoryName(chocolate.factoryId)), 1 /* TEXT */), $options.isWorker ? (_openBlock(), _createElementBlock(\"td\", _hoisted_14, [_createElementVNode(\"button\", {\n      onClick: $event => $options.editQuantity(chocolate)\n    }, \"Izmeni količinu\", 8 /* PROPS */, _hoisted_15)])) : _createCommentVNode(\"v-if\", true), _createCommentVNode(\" Dugme za izmenu količine koje je vidljivo samo radnicima \"), $options.isManager ? (_openBlock(), _createElementBlock(\"td\", _hoisted_16, [_createElementVNode(\"button\", {\n      onClick: $event => $options.editChocolate(chocolate.id)\n    }, \"EDIT\", 8 /* PROPS */, _hoisted_17)])) : _createCommentVNode(\"v-if\", true), _createCommentVNode(\" Dugme za editovanje vidljivo samo menadžerima \"), $options.isManager ? (_openBlock(), _createElementBlock(\"td\", _hoisted_18, [_createElementVNode(\"button\", {\n      onClick: $event => $options.deleteChocolate(chocolate.id)\n    }, \"DELETE\", 8 /* PROPS */, _hoisted_19)])) : _createCommentVNode(\"v-if\", true), _createCommentVNode(\" Dugme za brisanje vidljivo samo menadžerima \")]);\n  }), 128 /* KEYED_FRAGMENT */))])])]);\n}","map":{"version":3,"names":["class","_createElementVNode","key","_createElementBlock","_hoisted_1","_hoisted_2","_hoisted_3","_hoisted_4","_hoisted_5","_hoisted_6","_hoisted_7","_hoisted_8","_hoisted_9","$options","isManagerOrWorker","_hoisted_10","_createCommentVNode","_hoisted_11","_hoisted_12","_Fragment","_renderList","filteredChocolates","chocolate","id","src","getChocolatePicture","picture","alt","name","_hoisted_13","_toDisplayString","price","type","kind","weight","description","getFactoryName","factoryId","isWorker","_hoisted_14","onClick","$event","editQuantity","_hoisted_15","isManager","_hoisted_16","editChocolate","_hoisted_17","_hoisted_18","deleteChocolate","_hoisted_19"],"sources":["C:\\Users\\PC\\eclipse-workspace\\apache-tomcat-9.0.89\\apache-tomcat-9.0.89\\webapps\\chocolate-factory-2\\Kostur\\Frontend\\front-app\\src\\views\\AllChocolates.vue"],"sourcesContent":["<template>\r\n  <div class=\"all-chocolates\">\r\n    <table>\r\n      <thead>\r\n        <tr>\r\n          <th>Slika</th>\r\n          <th>Naziv</th>\r\n          <th>Cena</th>\r\n          <th>Tip</th>\r\n          <th>Vrsta</th>\r\n          <th>Težina</th>\r\n          <th>Opis</th>\r\n          <th>Fabrika</th>\r\n          <th v-if=\"isManagerOrWorker\">Izmeni količinu</th> <!-- Prikazuje dugme za izmenu količine samo ako je korisnik menadžer ili radnik -->\r\n          <th >EDIT</th> <!-- Prikazuje dugme za editovanje samo ako je korisnik menadžer -->\r\n          <th >DELETE</th> <!-- Prikazuje dugme za brisanje samo ako je korisnik menadžer -->\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        <tr v-for=\"chocolate in filteredChocolates\" :key=\"chocolate.id\">\r\n          <td><img :src=\"getChocolatePicture(chocolate.picture)\" :alt=\"chocolate.name\" class=\"chocolate-picture\" /></td>\r\n          <td>{{ chocolate.name }}</td>\r\n          <td>{{ chocolate.price }}</td>\r\n          <td>{{ chocolate.type }}</td>\r\n          <td>{{ chocolate.kind }}</td>\r\n          <td>{{ chocolate.weight }}</td>\r\n          <td>{{ chocolate.description }}</td>\r\n          <td>{{ getFactoryName(chocolate.factoryId) }}</td>\r\n          <td v-if=\"isWorker\"><button @click=\"editQuantity(chocolate)\">Izmeni količinu</button></td> <!-- Dugme za izmenu količine koje je vidljivo samo radnicima -->\r\n          <td v-if=\"isManager\"><button @click=\"editChocolate(chocolate.id)\">EDIT</button></td> <!-- Dugme za editovanje vidljivo samo menadžerima -->\r\n          <td v-if=\"isManager\"><button @click=\"deleteChocolate(chocolate.id)\">DELETE</button></td> <!-- Dugme za brisanje vidljivo samo menadžerima -->\r\n        </tr>\r\n      </tbody>\r\n    </table>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from 'axios';\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      chocolates: [], // Svi čokoladni proizvodi\r\n      factories: [], // Sve fabrike\r\n      currentUser: null // Trenutno ulogovan korisnik\r\n    };\r\n  },\r\n  async created() {\r\n    await this.fetchCurrentUser(); // Učitavanje trenutnog korisnika\r\n    await this.fetchFactories(); // Učitavanje svih fabrika\r\n    await this.fetchChocolates(); // Učitavanje svih čokolada\r\n  },\r\n  computed: {\r\n    filteredChocolates() {\r\n      if (this.isWorker) {\r\n        // Ako je korisnik radnik, prikazujemo samo čokolade iz njegove fabrike\r\n        return this.chocolates.filter(chocolate => chocolate.factoryId === this.currentUser.factoryId);\r\n      }\r\n      // Ako nije radnik, prikazujemo sve čokolade\r\n      return this.chocolates;\r\n    },\r\n    isManager() {\r\n      // Proveravamo da li je korisnik menadžer\r\n      return this.currentUser && this.currentUser.role === 'MANAGER';\r\n    },\r\n    isWorker() {\r\n      // Proveravamo da li je korisnik radnik\r\n      return this.currentUser && this.currentUser.role === 'WORKER';\r\n    },\r\n    isManagerOrWorker() {\r\n      // Proveravamo da li je korisnik menadžer ili radnik\r\n      return this.isManager || this.isWorker;\r\n    }\r\n  },\r\n  methods: {\r\n    async fetchChocolates() {\r\n      try {\r\n        const response = await axios.get('http://localhost:8080/WebShopAppREST/rest/chocolates');\r\n        console.log('Loaded chocolates:', response.data);\r\n        this.chocolates = response.data; // Skladištimo sve čokolade u promenljivu\r\n      } catch (error) {\r\n        console.error('Greška pri preuzimanju čokolada:', error);\r\n      }\r\n    },\r\n    async fetchFactories() {\r\n      try {\r\n        const response = await axios.get('http://localhost:8080/WebShopAppREST/rest/chocolateFactoryObjects');\r\n        console.log('Loaded factories:', response.data);\r\n        this.factories = response.data; // Skladištimo sve fabrike u promenljivu\r\n      } catch (error) {\r\n        console.error('Greška pri preuzimanju fabrika:', error);\r\n      }\r\n    },\r\n    async fetchCurrentUser() {\r\n      try {\r\n        const response = await axios.get('http://localhost:8080/WebShopAppREST/rest/currentUser');\r\n        console.log('Current user:', response.data);\r\n        this.currentUser = response.data; // Postavljamo trenutnog korisnika\r\n      } catch (error) {\r\n        console.error('Greška pri preuzimanju trenutnog korisnika:', error);\r\n      }\r\n    },\r\n    getFactoryName(factoryId) {\r\n      const factory = this.factories.find(f => f.factoryId === factoryId); // Pronalaženje fabrike po ID-u\r\n      console.log('Factory ID:', factoryId, 'Factory:', factory);\r\n      return factory ? factory.name : 'Nepoznato'; // Vraćamo naziv fabrike ili 'Nepoznato' ako nije pronađena\r\n    },\r\n    getChocolatePicture(pictureName) {\r\n      return `/images/${pictureName}`; // Generišemo putanju do slike čokolade\r\n    },\r\n    editChocolate(id) {\r\n      this.$router.push({ name: 'editchocolate', params: { id } }); // Navigacija ka ruti za uređivanje čokolade\r\n    },\r\n    async deleteChocolate(id) {\r\n      try {\r\n        await axios.delete(`http://localhost:8080/WebShopAppREST/rest/chocolates/${id}`); // Brisanje čokolade putem API-ja\r\n        this.chocolates = this.chocolates.filter(chocolate => chocolate.id !== id); // Ažuriramo listu čokolada\r\n      } catch (error) {\r\n        console.error('Greška pri brisanju čokolade:', error);\r\n      }\r\n    },\r\n    editQuantity(chocolate) {\r\n      const newQuantity = prompt(`Unesite novu količinu za ${chocolate.name}:`, chocolate.quantity); // Unos nove količine putem prompta\r\n      if (newQuantity !== null) {\r\n        this.updateQuantity(chocolate.id, parseInt(newQuantity, 10)); // Ažuriramo količinu ako je unesena nova vrednost\r\n      }\r\n    },\r\n    async updateQuantity(id, newQuantity) {\r\n      try {\r\n        await axios.put(`http://localhost:8080/WebShopAppREST/rest/chocolates/${id}/quantity`, { quantity: newQuantity }); // Slanje nove količine na server\r\n        const chocolate = this.chocolates.find(chocolate => chocolate.id === id);\r\n        if (chocolate) {\r\n          chocolate.quantity = newQuantity; // Ažuriranje količine u lokalnoj listi\r\n        }\r\n      } catch (error) {\r\n        console.error('Greška pri ažuriranju količine:', error);\r\n      }\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.all-chocolates {\r\n  overflow-x: auto;\r\n  padding: 20px;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n}\r\n\r\ntable {\r\n  width: 100%;\r\n  border-collapse: collapse;\r\n  margin-bottom: 20px;\r\n  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);\r\n}\r\n\r\nth, td {\r\n  border: 1px solid #ddd;\r\n  padding: 8px;\r\n  text-align: left;\r\n}\r\n\r\nth {\r\n  background-color: #f2f2f2;\r\n  cursor: pointer;\r\n}\r\n\r\n.chocolate-picture {\r\n  width: 50px;\r\n  height: 50px;\r\n  object-fit: cover;\r\n}\r\n\r\nbutton {\r\n  padding: 5px 10px;\r\n  margin: 2px;\r\n  background-color: #f5e7f5;\r\n  color: #333;\r\n  border: none;\r\n  border-radius: 4px;\r\n  cursor: pointer;\r\n  transition: background-color 0.3s ease;\r\n}\r\n\r\nbutton:hover {\r\n  background-color: #d8bfd8;\r\n  color: #fff;\r\n}\r\n</style>\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}