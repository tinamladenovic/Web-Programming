{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { ref, onMounted } from 'vue';\nimport { useRouter } from 'vue-router';\nimport axios from 'axios';\nimport Map from 'ol/Map';\nimport View from 'ol/View';\nimport TileLayer from 'ol/layer/Tile';\nimport OSM from 'ol/source/OSM';\nimport { fromLonLat, transform } from 'ol/proj';\nimport { Feature } from 'ol';\nimport { Point } from 'ol/geom';\nimport { Vector as VectorLayer } from 'ol/layer';\nimport { Vector as VectorSource } from 'ol/source';\nimport { Style, Icon } from 'ol/style';\nexport default {\n  __name: 'AddFactory',\n  setup(__props, {\n    expose: __expose\n  }) {\n    __expose();\n    const router = useRouter();\n    const factory = ref({\n      name: '',\n      location: '',\n      openingTime: '',\n      closingTime: '',\n      logo: null\n    });\n    let map;\n    let markerLayer;\n    const iconStyle = new Style({\n      image: new Icon({\n        anchor: [0.5, 1],\n        src: 'https://openlayers.org/en/latest/examples/data/icon.png'\n      })\n    });\n\n    // Initialize OpenLayers map\n    onMounted(() => {\n      markerLayer = new VectorLayer({\n        source: new VectorSource(),\n        style: iconStyle\n      });\n      map = new Map({\n        target: 'map',\n        layers: [new TileLayer({\n          source: new OSM()\n        }), markerLayer],\n        view: new View({\n          center: fromLonLat([0, 0]),\n          zoom: 2\n        })\n      });\n      map.on('click', function (event) {\n        const coordinate = event.coordinate;\n        const location = transform(coordinate, 'EPSG:3857', 'EPSG:4326');\n        factory.value.location = `${location[1]}, ${location[0]}`;\n        const marker = new Feature({\n          geometry: new Point(coordinate)\n        });\n        markerLayer.getSource().clear(); // Clear existing markers\n        markerLayer.getSource().addFeature(marker);\n      });\n    });\n    const handleLogoUpload = event => {\n      const file = event.target.files[0];\n      factory.value.logo = file;\n    };\n    const submitFactory = async () => {\n      try {\n        const formData = new FormData();\n        formData.append('name', factory.value.name);\n        formData.append('location', factory.value.location);\n        formData.append('openingTime', factory.value.openingTime);\n        formData.append('closingTime', factory.value.closingTime);\n        formData.append('logo', factory.value.logo);\n        await axios.post('http://localhost:8080/WebShopAppREST/rest/chocolateFactoryObjects', formData, {\n          headers: {\n            'Content-Type': 'multipart/form-data'\n          }\n        });\n\n        // Redirect to factory list or other appropriate route after successful creation\n        router.push('/factories'); // Example route, adjust as needed\n      } catch (error) {\n        console.error('Error creating factory:', error);\n        // Handle error state or display error message\n      }\n    };\n    const __returned__ = {\n      router,\n      factory,\n      get map() {\n        return map;\n      },\n      set map(v) {\n        map = v;\n      },\n      get markerLayer() {\n        return markerLayer;\n      },\n      set markerLayer(v) {\n        markerLayer = v;\n      },\n      iconStyle,\n      handleLogoUpload,\n      submitFactory,\n      ref,\n      onMounted,\n      get useRouter() {\n        return useRouter;\n      },\n      get axios() {\n        return axios;\n      },\n      get Map() {\n        return Map;\n      },\n      get View() {\n        return View;\n      },\n      get TileLayer() {\n        return TileLayer;\n      },\n      get OSM() {\n        return OSM;\n      },\n      get fromLonLat() {\n        return fromLonLat;\n      },\n      get transform() {\n        return transform;\n      },\n      get Feature() {\n        return Feature;\n      },\n      get Point() {\n        return Point;\n      },\n      get VectorLayer() {\n        return VectorLayer;\n      },\n      get VectorSource() {\n        return VectorSource;\n      },\n      get Style() {\n        return Style;\n      },\n      get Icon() {\n        return Icon;\n      }\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["ref","onMounted","useRouter","axios","Map","View","TileLayer","OSM","fromLonLat","transform","Feature","Point","Vector","VectorLayer","VectorSource","Style","Icon","router","factory","name","location","openingTime","closingTime","logo","map","markerLayer","iconStyle","image","anchor","src","source","style","target","layers","view","center","zoom","on","event","coordinate","value","marker","geometry","getSource","clear","addFeature","handleLogoUpload","file","files","submitFactory","formData","FormData","append","post","headers","push","error","console"],"sources":["C:/Users/PC/eclipse-workspace/apache-tomcat-9.0.89/apache-tomcat-9.0.89/webapps/chocolate-factory-2/Kostur/Frontend/front-app/src/views/AddFactory.vue"],"sourcesContent":["<template>\r\n    <div class=\"add-factory\">\r\n      <h2>Create New Chocolate Factory</h2>\r\n      <form @submit.prevent=\"submitFactory\">\r\n        <div class=\"form-group\">\r\n          <label for=\"factoryName\">Factory Name:</label>\r\n          <input type=\"text\" id=\"factoryName\" v-model=\"factory.name\" required>\r\n        </div>\r\n        <div class=\"form-group\">\r\n          <label for=\"factoryLocation\">Location:</label>\r\n          <div id=\"map\" class=\"map\"></div>\r\n          <input type=\"text\" id=\"factoryLocation\" v-model=\"factory.location\" readonly>\r\n        </div>\r\n        <div class=\"form-group\">\r\n          <label for=\"workingHours\">Working Hours:</label>\r\n          <div class=\"time-inputs\">\r\n            <input type=\"text\" id=\"openingTime\" v-model=\"factory.openingTime\" placeholder=\"Opening Time\" required>\r\n            <input type=\"text\" id=\"closingTime\" v-model=\"factory.closingTime\" placeholder=\"Closing Time\" required>\r\n          </div>\r\n        </div>\r\n        <div class=\"form-group\">\r\n          <label for=\"logoFile\">Select Logo:</label>\r\n          <input type=\"file\" id=\"logoFile\" @change=\"handleLogoUpload\" accept=\"image/*\" required>\r\n        </div>\r\n        <button type=\"submit\">Create Factory</button>\r\n      </form>\r\n    </div>\r\n  </template>\r\n  \r\n  <script setup>\r\n  import { ref, onMounted } from 'vue';\r\n  import { useRouter } from 'vue-router';\r\n  import axios from 'axios';\r\n  import Map from 'ol/Map';\r\n  import View from 'ol/View';\r\n  import TileLayer from 'ol/layer/Tile';\r\n  import OSM from 'ol/source/OSM';\r\n  import { fromLonLat, transform } from 'ol/proj';\r\n  import { Feature } from 'ol';\r\n  import { Point } from 'ol/geom';\r\n  import { Vector as VectorLayer } from 'ol/layer';\r\n  import { Vector as VectorSource } from 'ol/source';\r\n  import { Style, Icon } from 'ol/style';\r\n  \r\n  const router = useRouter();\r\n  const factory = ref({\r\n    name: '',\r\n    location: '',\r\n    openingTime: '',\r\n    closingTime: '',\r\n    logo: null\r\n  });\r\n  \r\n  let map;\r\n  let markerLayer;\r\n  const iconStyle = new Style({\r\n    image: new Icon({\r\n      anchor: [0.5, 1],\r\n      src: 'https://openlayers.org/en/latest/examples/data/icon.png'\r\n    })\r\n  });\r\n  \r\n  // Initialize OpenLayers map\r\n  onMounted(() => {\r\n    markerLayer = new VectorLayer({\r\n      source: new VectorSource(),\r\n      style: iconStyle\r\n    });\r\n  \r\n    map = new Map({\r\n      target: 'map',\r\n      layers: [\r\n        new TileLayer({\r\n          source: new OSM()\r\n        }),\r\n        markerLayer\r\n      ],\r\n      view: new View({\r\n        center: fromLonLat([0, 0]),\r\n        zoom: 2\r\n      })\r\n    });\r\n  \r\n    map.on('click', function (event) {\r\n      const coordinate = event.coordinate;\r\n      const location = transform(coordinate, 'EPSG:3857', 'EPSG:4326');\r\n      factory.value.location = `${location[1]}, ${location[0]}`;\r\n  \r\n      const marker = new Feature({\r\n        geometry: new Point(coordinate)\r\n      });\r\n  \r\n      markerLayer.getSource().clear(); // Clear existing markers\r\n      markerLayer.getSource().addFeature(marker);\r\n    });\r\n  });\r\n  \r\n  const handleLogoUpload = (event) => {\r\n    const file = event.target.files[0];\r\n    factory.value.logo = file;\r\n  };\r\n  \r\n  const submitFactory = async () => {\r\n    try {\r\n      const formData = new FormData();\r\n      formData.append('name', factory.value.name);\r\n      formData.append('location', factory.value.location);\r\n      formData.append('openingTime', factory.value.openingTime);\r\n      formData.append('closingTime', factory.value.closingTime);\r\n      formData.append('logo', factory.value.logo);\r\n  \r\n      await axios.post('http://localhost:8080/WebShopAppREST/rest/chocolateFactoryObjects', formData, {\r\n        headers: {\r\n          'Content-Type': 'multipart/form-data'\r\n        }\r\n      });\r\n  \r\n      // Redirect to factory list or other appropriate route after successful creation\r\n      router.push('/factories'); // Example route, adjust as needed\r\n    } catch (error) {\r\n      console.error('Error creating factory:', error);\r\n      // Handle error state or display error message\r\n    }\r\n  };\r\n  </script>\r\n  \r\n  <style scoped>\r\n  .add-factory {\r\n    max-width: 600px;\r\n    margin: 20px auto;\r\n    padding: 20px;\r\n    border: 1px solid #ccc;\r\n    border-radius: 8px;\r\n  }\r\n  \r\n  .form-group {\r\n    margin-bottom: 15px;\r\n  }\r\n  \r\n  label {\r\n    display: block;\r\n    margin-bottom: 5px;\r\n  }\r\n  \r\n  input[type=\"text\"], input[type=\"file\"] {\r\n    width: 100%;\r\n    padding: 8px;\r\n    font-size: 16px;\r\n  }\r\n  \r\n  button {\r\n    padding: 10px 20px;\r\n    background-color: #007bff;\r\n    color: #fff;\r\n    border: none;\r\n    cursor: pointer;\r\n    font-size: 16px;\r\n    border-radius: 4px;\r\n  }\r\n  \r\n  button:hover {\r\n    background-color: #0056b3;\r\n  }\r\n  \r\n  .map {\r\n    height: 300px; /* Adjust height as needed */\r\n    width: 100%;\r\n  }\r\n  </style>\r\n  "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}