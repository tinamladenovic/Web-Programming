{"ast":null,"code":"import { createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-3105c428\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  class: \"all-factories\"\n};\nconst _hoisted_2 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"h1\", null, \"All Chocolate Factories\", -1 /* HOISTED */));\nconst _hoisted_3 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"thead\", null, [/*#__PURE__*/_createElementVNode(\"tr\", null, [/*#__PURE__*/_createElementVNode(\"th\", null, \"Logo\"), /*#__PURE__*/_createElementVNode(\"th\", null, \"Name\"), /*#__PURE__*/_createElementVNode(\"th\", null, \"Location\"), /*#__PURE__*/_createElementVNode(\"th\", null, \"Rating\")])], -1 /* HOISTED */));\nconst _hoisted_4 = [\"src\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_hoisted_2, _createElementVNode(\"table\", null, [_hoisted_3, _createElementVNode(\"tbody\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($setup.sortedFactories, factory => {\n    return _openBlock(), _createElementBlock(\"tr\", {\n      key: factory.id\n    }, [_createElementVNode(\"td\", null, [_createElementVNode(\"img\", {\n      src: $setup.getFactoryLogo(factory.logo),\n      alt: \"Logo\",\n      class: \"factory-logo\"\n    }, null, 8 /* PROPS */, _hoisted_4)]), _createElementVNode(\"td\", null, _toDisplayString(factory.name), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(factory.location.adress) + \", \" + _toDisplayString(factory.location.adress), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(factory.rating), 1 /* TEXT */)]);\n  }), 128 /* KEYED_FRAGMENT */))])])]);\n}","map":{"version":3,"names":["class","_createElementVNode","_createElementBlock","_hoisted_1","_hoisted_2","_hoisted_3","_Fragment","_renderList","$setup","sortedFactories","factory","key","id","src","getFactoryLogo","logo","alt","_hoisted_4","_toDisplayString","name","location","adress","rating"],"sources":["C:\\Users\\PC\\eclipse-workspace\\apache-tomcat-9.0.89\\apache-tomcat-9.0.89\\webapps\\chocolate-factory-2\\Kostur\\Frontend\\front-app\\src\\views\\AllFactoryView.vue"],"sourcesContent":["<template>\r\n    <div class=\"all-factories\">\r\n      <h1>All Chocolate Factories</h1>\r\n      <table>\r\n        <thead>\r\n          <tr>\r\n            <th>Logo</th>\r\n            <th>Name</th>\r\n            <th>Location</th>\r\n            <th>Rating</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          <tr v-for=\"factory in sortedFactories\" :key=\"factory.id\">\r\n            <td><img :src=\"getFactoryLogo(factory.logo)\" alt=\"Logo\" class=\"factory-logo\" /></td>\r\n            <td>{{ factory.name }}</td>\r\n            <td>{{ factory.location.adress }}, {{ factory.location.adress }}</td>\r\n            <td>{{ factory.rating }}</td>\r\n          </tr>\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  </template>\r\n  \r\n  <script setup>\r\n  import { ref, onMounted, computed } from 'vue';\r\n  import axios from 'axios';\r\n  \r\n  const factories = ref([]);\r\n  \r\n  function loadFactories() {\r\n    axios.get('http://localhost:8080/WebShopAppREST/rest/chocolateFactoryObjects')\r\n      .then(response => {\r\n        factories.value = response.data;\r\n      })\r\n      .catch(error => console.log(error));\r\n  }\r\n  \r\n  onMounted(() => {\r\n    loadFactories();\r\n  });\r\n  \r\n  const isFactoryOpen = (factory) => {\r\n    const currentTime = new Date();\r\n    const openingTime = new Date();\r\n    const closingTime = new Date();\r\n    \r\n    const [openHour, openMinute] = factory.openingTime.split(':');\r\n    const [closeHour, closeMinute] = factory.closingTime.split(':');\r\n  \r\n    openingTime.setHours(openHour, openMinute);\r\n    closingTime.setHours(closeHour, closeMinute);\r\n  \r\n    return currentTime >= openingTime && currentTime <= closingTime;\r\n  };\r\n  \r\n  const sortedFactories = computed(() => {\r\n    return factories.value.sort((a, b) => {\r\n      const aOpen = isFactoryOpen(a);\r\n      const bOpen = isFactoryOpen(b);\r\n      if (aOpen && !bOpen) return -1;\r\n      if (!aOpen && bOpen) return 1;\r\n      return 0;\r\n    });\r\n  });\r\n  \r\n  const getFactoryLogo = (logoFileName) => {\r\n    return `/images/${logoFileName}`;\r\n  };\r\n  </script>\r\n  \r\n  <style scoped>\r\n  .all-factories {\r\n    padding: 20px;\r\n  }\r\n  \r\n  table {\r\n    width: 100%;\r\n    border-collapse: collapse;\r\n  }\r\n  \r\n  th, td {\r\n    border: 1px solid #ddd;\r\n    padding: 8px;\r\n    text-align: left;\r\n  }\r\n  \r\n  th {\r\n    background-color: #f2f2f2;\r\n  }\r\n  \r\n  .factory-logo {\r\n    width: 100px;\r\n    height: 100px;\r\n  }\r\n  </style>\r\n  "],"mappings":";;;EACSA,KAAK,EAAC;AAAe;gEACxBC,mBAAA,CAAgC,YAA5B,yBAAuB;gEAEzBA,mBAAA,CAOQ,gB,aANNA,mBAAA,CAKK,a,aAJHA,mBAAA,CAAa,YAAT,MAAI,G,aACRA,mBAAA,CAAa,YAAT,MAAI,G,aACRA,mBAAA,CAAiB,YAAb,UAAQ,G,aACZA,mBAAA,CAAe,YAAX,QAAM,E;mBATtB;;uBACIC,mBAAA,CAoBM,OApBNC,UAoBM,GAnBJC,UAAgC,EAChCH,mBAAA,CAiBQ,gBAhBNI,UAOQ,EACRJ,mBAAA,CAOQ,iB,kBANNC,mBAAA,CAKKI,SAAA,QAlBfC,WAAA,CAagCC,MAAA,CAAAC,eAAe,EAA1BC,OAAO;yBAAlBR,mBAAA,CAKK;MALmCS,GAAG,EAAED,OAAO,CAACE;QACnDX,mBAAA,CAAoF,aAAhFA,mBAAA,CAA2E;MAArEY,GAAG,EAAEL,MAAA,CAAAM,cAAc,CAACJ,OAAO,CAACK,IAAI;MAAGC,GAAG,EAAC,MAAM;MAAChB,KAAK,EAAC;4BAd1EiB,UAAA,E,GAeYhB,mBAAA,CAA2B,YAAAiB,gBAAA,CAApBR,OAAO,CAACS,IAAI,kBACnBlB,mBAAA,CAAqE,YAAAiB,gBAAA,CAA9DR,OAAO,CAACU,QAAQ,CAACC,MAAM,IAAG,IAAE,GAAAH,gBAAA,CAAGR,OAAO,CAACU,QAAQ,CAACC,MAAM,kBAC7DpB,mBAAA,CAA6B,YAAAiB,gBAAA,CAAtBR,OAAO,CAACY,MAAM,iB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}