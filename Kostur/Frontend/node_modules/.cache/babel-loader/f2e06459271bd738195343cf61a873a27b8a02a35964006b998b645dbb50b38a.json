{"ast":null,"code":"import { createElementVNode as _createElementVNode, toDisplayString as _toDisplayString, createCommentVNode as _createCommentVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, createTextVNode as _createTextVNode, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-0e62ab0e\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  key: 0,\n  class: \"factory-profile\"\n};\nconst _hoisted_2 = {\n  class: \"factory-info\"\n};\nconst _hoisted_3 = [\"src\"];\nconst _hoisted_4 = {\n  class: \"factory-comments\"\n};\nconst _hoisted_5 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"h3\", null, \"Comments:\", -1 /* HOISTED */));\nconst _hoisted_6 = {\n  key: 0\n};\nconst _hoisted_7 = {\n  class: \"comment-header\"\n};\nconst _hoisted_8 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"strong\", null, \"User:\", -1 /* HOISTED */));\nconst _hoisted_9 = {\n  class: \"comment-text\"\n};\nconst _hoisted_10 = {\n  key: 1\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return $data.factory ? (_openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [_createElementVNode(\"img\", {\n    src: $options.getFactoryLogo($data.factory.logo),\n    alt: \"Logo\",\n    class: \"factory-logo\"\n  }, null, 8 /* PROPS */, _hoisted_3), _createElementVNode(\"h2\", null, _toDisplayString($data.factory.name), 1 /* TEXT */), _createCommentVNode(\" Ostale informacije o fabrici \")]), _createElementVNode(\"div\", _hoisted_4, [_hoisted_5, $data.factory.comments && $data.factory.comments.length ? (_openBlock(), _createElementBlock(\"ul\", _hoisted_6, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.factory.comments, comment => {\n    return _openBlock(), _createElementBlock(\"li\", {\n      key: comment.id,\n      class: \"comment-item\"\n    }, [_createElementVNode(\"div\", _hoisted_7, [_hoisted_8, _createTextVNode(\" \" + _toDisplayString(comment.username || 'Unknown User'), 1 /* TEXT */)]), _createElementVNode(\"div\", _hoisted_9, [_createElementVNode(\"p\", null, _toDisplayString(comment.text), 1 /* TEXT */)])]);\n  }), 128 /* KEYED_FRAGMENT */))])) : (_openBlock(), _createElementBlock(\"p\", _hoisted_10, \"No comments available.\"))])])) : _createCommentVNode(\"v-if\", true);\n}","map":{"version":3,"names":["key","class","_createElementVNode","$data","factory","_createElementBlock","_hoisted_1","_hoisted_2","src","$options","getFactoryLogo","logo","alt","_hoisted_3","_toDisplayString","name","_createCommentVNode","_hoisted_4","_hoisted_5","comments","length","_hoisted_6","_Fragment","_renderList","comment","id","_hoisted_7","_hoisted_8","_createTextVNode","username","_hoisted_9","text","_hoisted_10"],"sources":["C:\\Users\\PC\\eclipse-workspace\\apache-tomcat-9.0.89\\apache-tomcat-9.0.89\\webapps\\chocolate-factory-2\\Kostur\\Frontend\\front-app\\src\\views\\FactoryProfile.vue"],"sourcesContent":["<template>\r\n  <div class=\"factory-profile\" v-if=\"factory\">\r\n    <div class=\"factory-info\">\r\n      <img :src=\"getFactoryLogo(factory.logo)\" alt=\"Logo\" class=\"factory-logo\" />\r\n      <h2>{{ factory.name }}</h2>\r\n      <!-- Ostale informacije o fabrici -->\r\n    </div>\r\n\r\n    <div class=\"factory-comments\">\r\n      <h3>Comments:</h3>\r\n      <ul v-if=\"factory.comments && factory.comments.length\">\r\n        <li v-for=\"comment in factory.comments\" :key=\"comment.id\" class=\"comment-item\">\r\n          <div class=\"comment-header\">\r\n            <strong>User:</strong> {{ comment.username || 'Unknown User' }}\r\n          </div>\r\n          <div class=\"comment-text\">\r\n            <p>{{ comment.text }}</p>\r\n          </div>\r\n        </li>\r\n      </ul>\r\n      <p v-else>No comments available.</p>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from 'axios';\r\n\r\nexport default {\r\n  props: {\r\n    id: String,\r\n  },\r\n  data() {\r\n    return {\r\n      factory: null,\r\n      chocolates: [],\r\n      users: [], // Učitani korisnici\r\n    };\r\n  },\r\n  methods: {\r\n    loadFactory() {\r\n      axios.get(`http://localhost:8080/WebShopAppREST/rest/chocolateFactoryObjects/${this.id}`)\r\n        .then(response => {\r\n          this.factory = response.data;\r\n          this.loadChocolates();\r\n          this.loadComments(); // Učitavamo komentare\r\n          this.loadUsers(); // Učitavamo korisnike\r\n        })\r\n        .catch(error => {\r\n          console.error(\"Error loading factory:\", error);\r\n        });\r\n    },\r\n    loadChocolates() {\r\n      axios.get(`http://localhost:8080/WebShopAppREST/rest/chocolates`)\r\n        .then(response => {\r\n          this.chocolates = response.data.filter(chocolate => chocolate.factoryId === this.factory.factoryId);\r\n        })\r\n        .catch(error => {\r\n          console.error(\"Error loading chocolates:\", error);\r\n        });\r\n    },\r\n    loadComments() {\r\n      axios.get(`http://localhost:8080/WebShopAppREST/rest/comments`)\r\n        .then(response => {\r\n          this.factory.comments = response.data.filter(comment => comment.factoryId === this.factory.factoryId);\r\n        })\r\n        .catch(error => {\r\n          console.error(\"Error loading comments:\", error);\r\n        });\r\n    },\r\n    loadUsers() {\r\n      axios.get('http://localhost:8080/WebShopAppREST/rest/users')\r\n        .then(response => {\r\n          this.users = response.data;\r\n          this.mapCommentsToUsers();\r\n        })\r\n        .catch(error => {\r\n          console.error(\"Error loading users:\", error);\r\n        });\r\n    },\r\n    mapCommentsToUsers() {\r\n      // Dodeljujemo username svakom komentaru na osnovu userId\r\n      this.factory.comments.forEach(comment => {\r\n        const user = this.users.find(u => u.id === comment.userId);\r\n        comment.username = user ? user.username : 'Unknown User';\r\n      });\r\n    },\r\n    getFactoryLogo(logoFileName) {\r\n      return `/images/${logoFileName}`;\r\n    }\r\n  },\r\n  mounted() {\r\n    this.loadFactory();\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.d-flex {\r\n  min-height: 100vh;\r\n}\r\n\r\n.card {\r\n  border: 1px solid #ddd;\r\n  border-radius: 8px;\r\n  padding: 30px;\r\n  background-color: #f0f8ff;\r\n  box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);\r\n}\r\n\r\nh2 {\r\n  color: #343a40;\r\n  text-align: center;\r\n  font-size: 2rem;\r\n  font-weight: normal;\r\n}\r\n\r\n.form-label {\r\n  font-weight: normal;\r\n}\r\n\r\ninput[type=\"text\"],\r\nselect,\r\nbutton {\r\n  border: 1px solid #007bff;\r\n  border-radius: 8px;\r\n  font-size: 1.1rem;\r\n  transition: border-color 0.3s ease, box-shadow 0.3s ease;\r\n}\r\n\r\ninput[type=\"text\"]:focus,\r\nselect:focus {\r\n  border-color: #007bff;\r\n  box-shadow: 0 0 5px rgba(0, 123, 255, 0.25);\r\n}\r\n\r\nbutton[type=\"submit\"],\r\n.btn-outline-secondary {\r\n  border: 1px solid #007bff;\r\n  background-color: transparent;\r\n  color: #007bff;\r\n  font-size: 1.1rem;\r\n  transition: background-color 0.3s ease, color 0.3s ease;\r\n}\r\n\r\nbutton[type=\"submit\"]:hover,\r\n.btn-outline-secondary:hover {\r\n  background-color: #007bff;\r\n  color: white;\r\n}\r\n\r\nbutton[type=\"submit\"] {\r\n  margin-top: 20px;\r\n}\r\n\r\n.text-danger {\r\n  margin-top: 15px;\r\n}\r\n\r\n.text-success {\r\n  margin-top: 15px;\r\n}\r\n\r\n.factory-profile {\r\n  display: flex;\r\n  gap: 20px;\r\n  padding: 20px;\r\n  max-width: 100%;\r\n  margin: 0 auto;\r\n}\r\n\r\n.factory-info,\r\n.factory-chocolates,\r\n.factory-comments {\r\n  border: 1px solid #ddd;\r\n  border-radius: 8px;\r\n  padding: 30px;\r\n  background-color: #f0f8ff;\r\n  box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);\r\n  flex: 1;\r\n}\r\n\r\n.factory-info {\r\n  max-width: 500px;\r\n}\r\n\r\n.map-container {\r\n  width: 100%;\r\n  height: 300px;\r\n  margin-top: 20px;\r\n  border-radius: 8px;\r\n}\r\n\r\n.factory-logo {\r\n  max-width: 100%;\r\n  height: auto;\r\n  margin-bottom: 10px;\r\n  border-radius: 8px;\r\n}\r\n\r\ntable {\r\n  width: 100%;\r\n  border-collapse: collapse;\r\n  margin-bottom: 20px;\r\n}\r\n\r\nth, td {\r\n  border: 1px solid #ddd;\r\n  padding: 8px;\r\n  text-align: left;\r\n}\r\n\r\nth {\r\n  background-color: #f5e7f5;\r\n  font-weight: bold;\r\n}\r\n</style>\r\n"],"mappings":";;;EAAAA,GAAA;EACOC,KAAK,EAAC;;;EACJA,KAAK,EAAC;AAAc;mBAF7B;;EAQSA,KAAK,EAAC;AAAkB;gEAC3BC,mBAAA,CAAkB,YAAd,WAAS;;EATnBF,GAAA;AAAA;;EAYeC,KAAK,EAAC;AAAgB;gEACzBC,mBAAA,CAAsB,gBAAd,OAAK;;EAEVD,KAAK,EAAC;AAAc;;EAfnCD,GAAA;AAAA;;SACqCG,KAAA,CAAAC,OAAO,I,cAA1CC,mBAAA,CAqBM,OArBNC,UAqBM,GApBJJ,mBAAA,CAIM,OAJNK,UAIM,GAHJL,mBAAA,CAA2E;IAArEM,GAAG,EAAEC,QAAA,CAAAC,cAAc,CAACP,KAAA,CAAAC,OAAO,CAACO,IAAI;IAAGC,GAAG,EAAC,MAAM;IAACX,KAAK,EAAC;0BAHhEY,UAAA,GAIMX,mBAAA,CAA2B,YAAAY,gBAAA,CAApBX,KAAA,CAAAC,OAAO,CAACW,IAAI,kBACnBC,mBAAA,kCAAqC,C,GAGvCd,mBAAA,CAaM,OAbNe,UAaM,GAZJC,UAAkB,EACRf,KAAA,CAAAC,OAAO,CAACe,QAAQ,IAAIhB,KAAA,CAAAC,OAAO,CAACe,QAAQ,CAACC,MAAM,I,cAArDf,mBAAA,CASK,MAnBXgB,UAAA,I,kBAWQhB,mBAAA,CAOKiB,SAAA,QAlBbC,WAAA,CAW8BpB,KAAA,CAAAC,OAAO,CAACe,QAAQ,EAA3BK,OAAO;yBAAlBnB,mBAAA,CAOK;MAPoCL,GAAG,EAAEwB,OAAO,CAACC,EAAE;MAAExB,KAAK,EAAC;QAC9DC,mBAAA,CAEM,OAFNwB,UAEM,GADJC,UAAsB,EAblCC,gBAAA,CAakC,GAAC,GAAAd,gBAAA,CAAGU,OAAO,CAACK,QAAQ,mC,GAE5C3B,mBAAA,CAEM,OAFN4B,UAEM,GADJ5B,mBAAA,CAAyB,WAAAY,gBAAA,CAAnBU,OAAO,CAACO,IAAI,iB;qDAIxB1B,mBAAA,CAAoC,KApB1C2B,WAAA,EAoBgB,wBAAsB,G,OApBtChB,mBAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}