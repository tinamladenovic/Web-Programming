{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { ref, onMounted, computed } from 'vue';\nimport axios from 'axios';\nimport { useRouter } from 'vue-router';\nexport default {\n  __name: 'AllChocolateFactories',\n  setup(__props, {\n    expose: __expose\n  }) {\n    __expose();\n    const router = useRouter();\n    const factories = ref([]);\n    const searchName = ref('');\n    const searchChocolate = ref('');\n    const searchLocation = ref('');\n    const searchRating = ref('');\n    async function loadFactories() {\n      try {\n        const response = await axios.get('http://localhost:8080/WebShopAppREST/rest/chocolateFactoryObjects');\n        factories.value = response.data;\n        console.log(\"Učitane fabrike:\", factories.value); // Debug log\n      } catch (error) {\n        console.error(\"Greška pri učitavanju fabrika:\", error);\n      }\n    }\n    onMounted(() => {\n      loadFactories();\n    });\n    const isFactoryOpen = factory => {\n      const currentTime = new Date();\n      const openingTime = new Date();\n      const closingTime = new Date();\n      const [openHour, openMinute] = factory.openingTime.split(':');\n      const [closeHour, closeMinute] = factory.closingTime.split(':');\n      openingTime.setHours(openHour, openMinute);\n      closingTime.setHours(closeHour, closeMinute);\n      return currentTime >= openingTime && currentTime <= closingTime;\n    };\n    const sortedFactories = computed(() => {\n      return factories.value.sort((a, b) => {\n        const aOpen = isFactoryOpen(a);\n        const bOpen = isFactoryOpen(b);\n        if (aOpen && !bOpen) return -1;\n        if (!aOpen && bOpen) return 1;\n        return 0;\n      });\n    });\n    const filteredFactories = computed(() => {\n      return sortedFactories.value.filter(factory => {\n        const matchesName = factory.name.toLowerCase().includes(searchName.value.toLowerCase());\n        const matchesChocolate = searchChocolate.value === '' || factory.chocolates.some(chocolate => chocolate.name.toLowerCase().includes(searchChocolate.value.toLowerCase()));\n        const matchesLocation = factory.location.address.toLowerCase().includes(searchLocation.value.toLowerCase());\n        const matchesRating = searchRating.value === '' || factory.rating >= parseFloat(searchRating.value);\n        return matchesName && matchesChocolate && matchesLocation && matchesRating;\n      });\n    });\n    const getFactoryLogo = logoFileName => {\n      return `/images/${logoFileName}`;\n    };\n    const viewFactoryProfile = factoryId => {\n      router.push({\n        name: 'factoryprofile',\n        params: {\n          id: factoryId\n        }\n      });\n    };\n    const filterFactories = () => {\n      factories.value.filter(factory => {\n        const matchesName = factory.name.toLowerCase().includes(searchName.value.toLowerCase());\n        const matchesChocolate = searchChocolate.value === '' || factory.chocolates.some(chocolate => chocolate.name.toLowerCase().includes(searchChocolate.value.toLowerCase()));\n        const matchesLocation = factory.location.address.toLowerCase().includes(searchLocation.value.toLowerCase());\n        const matchesRating = searchRating.value === '' || factory.rating >= parseFloat(searchRating.value);\n        return matchesName && matchesChocolate && matchesLocation && matchesRating;\n      });\n    };\n    const __returned__ = {\n      router,\n      factories,\n      searchName,\n      searchChocolate,\n      searchLocation,\n      searchRating,\n      loadFactories,\n      isFactoryOpen,\n      sortedFactories,\n      filteredFactories,\n      getFactoryLogo,\n      viewFactoryProfile,\n      filterFactories,\n      ref,\n      onMounted,\n      computed,\n      get axios() {\n        return axios;\n      },\n      get useRouter() {\n        return useRouter;\n      }\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["ref","onMounted","computed","axios","useRouter","router","factories","searchName","searchChocolate","searchLocation","searchRating","loadFactories","response","get","value","data","console","log","error","isFactoryOpen","factory","currentTime","Date","openingTime","closingTime","openHour","openMinute","split","closeHour","closeMinute","setHours","sortedFactories","sort","a","b","aOpen","bOpen","filteredFactories","filter","matchesName","name","toLowerCase","includes","matchesChocolate","chocolates","some","chocolate","matchesLocation","location","address","matchesRating","rating","parseFloat","getFactoryLogo","logoFileName","viewFactoryProfile","factoryId","push","params","id","filterFactories"],"sources":["C:/Users/PC/eclipse-workspace/apache-tomcat-9.0.89/apache-tomcat-9.0.89/webapps/chocolate-factory-2/Kostur/Frontend/front-app/src/views/AllChocolateFactories.vue"],"sourcesContent":["<template>\r\n  <div class=\"all-factories\">\r\n    <div class=\"search-filters\">\r\n      <label for=\"searchChocolate\">Pretraga po nazivu čokolade:</label>\r\n      <input v-model=\"searchChocolate\" @input=\"filterFactories\" id=\"searchChocolate\" name=\"searchChocolate\" placeholder=\"Pretraga po nazivu čokolade\" />\r\n\r\n      <label for=\"searchName\">Pretraga po nazivu fabrike:</label>\r\n      <input v-model=\"searchName\" @input=\"filterFactories\" id=\"searchName\" name=\"searchName\" placeholder=\"Pretraga po nazivu fabrike\" />\r\n\r\n      <label for=\"searchLocation\">Pretraga po lokaciji:</label>\r\n      <input v-model=\"searchLocation\" @input=\"filterFactories\" id=\"searchLocation\" name=\"searchLocation\" placeholder=\"Pretraga po lokaciji\" />\r\n\r\n      <label for=\"searchRating\">Pretraga po oceni:</label>\r\n      <input v-model=\"searchRating\" @input=\"filterFactories\" id=\"searchRating\" name=\"searchRating\" type=\"number\" step=\"0.1\" placeholder=\"Pretraga po oceni\" />\r\n    </div>\r\n    <table>\r\n      <thead>\r\n        <tr>\r\n          <th>Logo</th>\r\n          <th>Naziv</th>\r\n          <th>Lokacija</th>\r\n          <th>Ocena</th>\r\n          <th></th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        <tr v-for=\"factory in filteredFactories\" :key=\"factory.id\">\r\n          <td><img :src=\"getFactoryLogo(factory.logo)\" alt=\"Logo\" class=\"factory-logo\" /></td>\r\n          <td>{{ factory.name }}</td>\r\n          <td>{{ factory.location.address }}</td>\r\n          <td>{{ factory.rating }}</td>\r\n          <td><button @click=\"viewFactoryProfile(factory.id)\">VIEW</button></td>\r\n        </tr>\r\n      </tbody>\r\n    </table>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nimport { ref, onMounted, computed } from 'vue';\r\nimport axios from 'axios';\r\nimport { useRouter } from 'vue-router';\r\n\r\nconst router = useRouter();\r\nconst factories = ref([]);\r\nconst searchName = ref('');\r\nconst searchChocolate = ref('');\r\nconst searchLocation = ref('');\r\nconst searchRating = ref('');\r\n\r\nasync function loadFactories() {\r\n  try {\r\n    const response = await axios.get('http://localhost:8080/WebShopAppREST/rest/chocolateFactoryObjects');\r\n    factories.value = response.data;\r\n    console.log(\"Učitane fabrike:\", factories.value);  // Debug log\r\n  } catch (error) {\r\n    console.error(\"Greška pri učitavanju fabrika:\", error);\r\n  }\r\n}\r\n\r\nonMounted(() => {\r\n  loadFactories();\r\n});\r\n\r\nconst isFactoryOpen = (factory) => {\r\n  const currentTime = new Date();\r\n  const openingTime = new Date();\r\n  const closingTime = new Date();\r\n\r\n  const [openHour, openMinute] = factory.openingTime.split(':');\r\n  const [closeHour, closeMinute] = factory.closingTime.split(':');\r\n\r\n  openingTime.setHours(openHour, openMinute);\r\n  closingTime.setHours(closeHour, closeMinute);\r\n\r\n  return currentTime >= openingTime && currentTime <= closingTime;\r\n};\r\n\r\nconst sortedFactories = computed(() => {\r\n  return factories.value.sort((a, b) => {\r\n    const aOpen = isFactoryOpen(a);\r\n    const bOpen = isFactoryOpen(b);\r\n    if (aOpen && !bOpen) return -1;\r\n    if (!aOpen && bOpen) return 1;\r\n    return 0;\r\n  });\r\n});\r\n\r\nconst filteredFactories = computed(() => {\r\n  return sortedFactories.value.filter(factory => {\r\n    const matchesName = factory.name.toLowerCase().includes(searchName.value.toLowerCase());\r\n    const matchesChocolate = searchChocolate.value === '' || factory.chocolates.some(chocolate => \r\n      chocolate.name.toLowerCase().includes(searchChocolate.value.toLowerCase())\r\n    );\r\n    const matchesLocation = factory.location.address.toLowerCase().includes(searchLocation.value.toLowerCase());\r\n    const matchesRating = searchRating.value === '' || factory.rating >= parseFloat(searchRating.value);\r\n\r\n    return matchesName && matchesChocolate && matchesLocation && matchesRating;\r\n  });\r\n});\r\n\r\nconst getFactoryLogo = (logoFileName) => {\r\n  return `/images/${logoFileName}`;\r\n};\r\n\r\nconst viewFactoryProfile = (factoryId) => {\r\n  router.push({ name: 'factoryprofile', params: { id: factoryId }});\r\n};\r\n\r\nconst filterFactories = () => {\r\n  \r\n  factories.value.filter(factory => {\r\n    const matchesName = factory.name.toLowerCase().includes(searchName.value.toLowerCase());\r\n    const matchesChocolate = searchChocolate.value === '' || factory.chocolates.some(chocolate => \r\n      chocolate.name.toLowerCase().includes(searchChocolate.value.toLowerCase())\r\n    );\r\n    const matchesLocation = factory.location.address.toLowerCase().includes(searchLocation.value.toLowerCase());\r\n    const matchesRating = searchRating.value === '' || factory.rating >= parseFloat(searchRating.value);\r\n\r\n    return matchesName && matchesChocolate && matchesLocation && matchesRating;\r\n  });\r\n};\r\n\r\n</script>\r\n\r\n<style scoped>\r\n.all-factories {\r\n  padding: 20px;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n}\r\n\r\n.search-filters {\r\n  margin-bottom: 20px;\r\n  display: flex;\r\n  gap: 10px;\r\n}\r\n\r\ntable {\r\n  max-width: 800px;\r\n  width: 100%;\r\n  border-collapse: collapse;\r\n  margin: 0 auto;\r\n}\r\n\r\nth, td {\r\n  border: 1px solid #ddd;\r\n  padding: 8px;\r\n  text-align: left;\r\n}\r\n\r\nth {\r\n  background-color: #f2f2f2;\r\n}\r\n\r\n.factory-logo {\r\n  width: 100px;\r\n  height: 100px;\r\n}\r\n</style>\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}