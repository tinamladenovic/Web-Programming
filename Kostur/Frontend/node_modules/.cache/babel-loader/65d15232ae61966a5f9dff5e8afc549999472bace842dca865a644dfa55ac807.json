{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { ref, onMounted } from 'vue';\nimport axios from 'axios';\nimport { useRouter } from 'vue-router';\nexport default {\n  __name: 'AddFactory',\n  setup(__props, {\n    expose: __expose\n  }) {\n    __expose();\n    const router = useRouter();\n    const factory = ref({\n      name: '',\n      location: {\n        address: '',\n        latitude: null,\n        longitude: null\n      },\n      openingTime: '',\n      closingTime: '',\n      logo: '',\n      managerId: null,\n      chocolates: [],\n      rating: 0,\n      status: 'OPEN'\n    });\n    const locations = ref([]);\n    const selectedLocation = ref(null);\n    const availableManagers = ref([]);\n    const loadLocations = async () => {\n      try {\n        const response = await axios.get('http://localhost:8080/WebShopAppREST/rest/locations');\n        const locationsData = response.data;\n\n        // Konvertovanje objekta u niz\n        locations.value = Object.values(locationsData);\n      } catch (error) {\n        console.error('Error loading locations:', error);\n        locations.value = [];\n      }\n    };\n    const loadAvailableManagers = async () => {\n      try {\n        const response = await axios.get('http://localhost:8080/WebShopAppREST/rest/users/managers');\n        availableManagers.value = response.data.filter(manager => !manager.assignedFactoryId || manager.assignedFactoryId === '');\n      } catch (error) {\n        console.error('Error loading managers:', error);\n      }\n    };\n    const updateFactoryLocation = () => {\n      if (Array.isArray(locations.value)) {\n        const location = locations.value.find(loc => loc.locationId === selectedLocation.value);\n        if (location) {\n          factory.value.location = location;\n        }\n      } else {\n        console.error('Locations is not an array:', locations.value);\n      }\n    };\n    const submitFactory = async () => {\n      try {\n        const endpoint = 'http://localhost:8080/WebShopAppREST/rest/chocolateFactoryObjects';\n        const response = await axios.post(endpoint, factory.value, {\n          withCredentials: true\n        });\n        console.log('Factory created:', response.data);\n        router.push('/'); // Promeni na odgovarajuću rutu za AllChocolateFactories.vue\n      } catch (error) {\n        console.error('Greška prilikom kreiranja fabrike:', error.message);\n        if (error.response) {\n          console.error('Status:', error.response.status);\n          console.error('Poruka:', error.response.data.message);\n        } else if (error.request) {\n          console.error('Nije stigao odgovor od servera:', error.request);\n        } else {\n          console.error('Došlo je do greške prilikom obrade zahteva:', error.message);\n        }\n      }\n    };\n    const navigateToAddLocation = () => {\n      router.push('/addlocation');\n    };\n    const navigateToAddManager = () => {\n      router.push('/addmanager');\n    };\n    onMounted(() => {\n      loadLocations();\n      loadAvailableManagers();\n    });\n    const __returned__ = {\n      router,\n      factory,\n      locations,\n      selectedLocation,\n      availableManagers,\n      loadLocations,\n      loadAvailableManagers,\n      updateFactoryLocation,\n      submitFactory,\n      navigateToAddLocation,\n      navigateToAddManager,\n      ref,\n      onMounted,\n      get axios() {\n        return axios;\n      },\n      get useRouter() {\n        return useRouter;\n      }\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["ref","onMounted","axios","useRouter","router","factory","name","location","address","latitude","longitude","openingTime","closingTime","logo","managerId","chocolates","rating","status","locations","selectedLocation","availableManagers","loadLocations","response","get","locationsData","data","value","Object","values","error","console","loadAvailableManagers","filter","manager","assignedFactoryId","updateFactoryLocation","Array","isArray","find","loc","locationId","submitFactory","endpoint","post","withCredentials","log","push","message","request","navigateToAddLocation","navigateToAddManager"],"sources":["C:/Users/PC/eclipse-workspace/apache-tomcat-9.0.89/apache-tomcat-9.0.89/webapps/chocolate-factory-2/Kostur/Frontend/front-app/src/views/AddFactory.vue"],"sourcesContent":["<template>\r\n  <div class=\"add-factory\">\r\n    <h2>Create New Chocolate Factory</h2>\r\n    <form @submit.prevent=\"submitFactory\">\r\n      <div class=\"form-group\">\r\n        <label for=\"factoryName\">Factory Name:</label>\r\n        <input type=\"text\" id=\"factoryName\" v-model=\"factory.name\" name=\"factoryName\" required>\r\n      </div>\r\n      <div class=\"form-group\">\r\n        <label for=\"factoryLocation\">Location:</label>\r\n        <select id=\"factoryLocation\" v-model=\"selectedLocation\" @change=\"updateFactoryLocation\" required>\r\n          <option v-for=\"location in locations\" :key=\"location.locationId\" :value=\"location.locationId\">\r\n            {{ location.address }}\r\n          </option>\r\n        </select>\r\n        <button @click=\"navigateToAddLocation\" type=\"button\">Add Location</button>\r\n      </div>\r\n      <div class=\"form-group\">\r\n        <label for=\"manager\">Manager:</label>\r\n        <select id=\"manager\" v-model=\"factory.managerId\" name=\"manager\" required>\r\n          <option v-for=\"manager in availableManagers\" :key=\"manager.id\" :value=\"manager.id\">\r\n            {{ manager.username }}\r\n          </option>\r\n        </select>\r\n        <button v-if=\"availableManagers.length === 0\" @click=\"navigateToAddManager\" type=\"button\">Add Manager</button>\r\n      </div>\r\n      <div class=\"form-group\">\r\n        <label for=\"openingTime\">Opening Time:</label>\r\n        <input type=\"time\" id=\"openingTime\" v-model=\"factory.openingTime\" name=\"openingTime\" required>\r\n      </div>\r\n      <div class=\"form-group\">\r\n        <label for=\"closingTime\">Closing Time:</label>\r\n        <input type=\"time\" id=\"closingTime\" v-model=\"factory.closingTime\" name=\"closingTime\" required>\r\n      </div>\r\n      <div class=\"form-group\">\r\n        <label for=\"logoName\">Logo Name:</label>\r\n        <input type=\"text\" id=\"logoName\" v-model=\"factory.logo\" name=\"logoName\" required>\r\n      </div>\r\n      <button type=\"submit\">Create Factory</button>\r\n    </form>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nimport { ref, onMounted } from 'vue';\r\nimport axios from 'axios';\r\nimport { useRouter } from 'vue-router';\r\n\r\nconst router = useRouter();\r\nconst factory = ref({\r\n  name: '',\r\n  location: {\r\n    address: '',\r\n    latitude: null,\r\n    longitude: null\r\n  },\r\n  openingTime: '',\r\n  closingTime: '',\r\n  logo: '',\r\n  managerId: null,\r\n  chocolates: [],  \r\n  rating: 0,       \r\n  status: 'OPEN'   \r\n});\r\n\r\nconst locations = ref([]);\r\nconst selectedLocation = ref(null);\r\nconst availableManagers = ref([]);\r\n\r\nconst loadLocations = async () => {\r\n  try {\r\n    const response = await axios.get('http://localhost:8080/WebShopAppREST/rest/locations');\r\n    const locationsData = response.data;\r\n\r\n    // Konvertovanje objekta u niz\r\n    locations.value = Object.values(locationsData);\r\n  } catch (error) {\r\n    console.error('Error loading locations:', error);\r\n    locations.value = [];\r\n  }\r\n};\r\n\r\n\r\nconst loadAvailableManagers = async () => {\r\n  try {\r\n    const response = await axios.get('http://localhost:8080/WebShopAppREST/rest/users/managers');\r\n    availableManagers.value = response.data.filter(manager => !manager.assignedFactoryId || manager.assignedFactoryId === '');\r\n  } catch (error) {\r\n    console.error('Error loading managers:', error);\r\n  }\r\n};\r\n\r\nconst updateFactoryLocation = () => {\r\n  if (Array.isArray(locations.value)) {\r\n    const location = locations.value.find(loc => loc.locationId === selectedLocation.value);\r\n    if (location) {\r\n      factory.value.location = location;\r\n    }\r\n  } else {\r\n    console.error('Locations is not an array:', locations.value);\r\n  }\r\n};\r\n\r\nconst submitFactory = async () => {\r\n  try {\r\n    const endpoint = 'http://localhost:8080/WebShopAppREST/rest/chocolateFactoryObjects';\r\n    const response = await axios.post(endpoint, factory.value, { withCredentials: true });\r\n    console.log('Factory created:', response.data);\r\n\r\n    router.push('/');  // Promeni na odgovarajuću rutu za AllChocolateFactories.vue\r\n  } catch (error) {\r\n    console.error('Greška prilikom kreiranja fabrike:', error.message);\r\n    if (error.response) {\r\n      console.error('Status:', error.response.status);\r\n      console.error('Poruka:', error.response.data.message);\r\n    } else if (error.request) {\r\n      console.error('Nije stigao odgovor od servera:', error.request);\r\n    } else {\r\n      console.error('Došlo je do greške prilikom obrade zahteva:', error.message);\r\n    }\r\n  }\r\n};\r\n\r\n\r\nconst navigateToAddLocation = () => {\r\n  router.push('/addlocation');\r\n};\r\n\r\nconst navigateToAddManager = () => {\r\n  router.push('/addmanager');\r\n};\r\n\r\nonMounted(() => {\r\n  loadLocations();\r\n  loadAvailableManagers();\r\n});\r\n</script>\r\n\r\n<style scoped>\r\n.add-factory {\r\n  max-width: 600px;\r\n  margin: 20px auto;\r\n  padding: 20px;\r\n  border: 1px solid #ccc;\r\n  border-radius: 8px;\r\n}\r\n\r\n.form-group {\r\n  margin-bottom: 15px;\r\n}\r\n\r\nlabel {\r\n  display: block;\r\n  margin-bottom: 5px;\r\n}\r\n\r\ninput[type=\"text\"], input[type=\"time\"], select {\r\n  width: 100%;\r\n  padding: 8px;\r\n  font-size: 16px;\r\n}\r\n\r\nbutton {\r\n  padding: 10px 20px;\r\n  background-color: #f5e7f5;\r\n  color: #fff;\r\n  border: none;\r\n  cursor: pointer;\r\n  font-size: 16px;\r\n  border-radius: 4px;\r\n  margin-top: 10px;\r\n}\r\n\r\nbutton:hover {\r\n  background-color: #e0cbe0;\r\n}\r\n</style>\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}