{"ast":null,"code":"import axios from 'axios';\nimport { ref, onMounted } from 'vue';\nexport default {\n  setup() {\n    const manager = ref(null);\n    const factory = ref(null);\n    const purchases = ref([]);\n    const customers = ref([]);\n    const fetchManagerData = async () => {\n      try {\n        const response = await axios.get('http://localhost:8080/WebShopAppREST/rest/currentUser', {\n          withCredentials: true\n        });\n        manager.value = response.data;\n\n        // Fetch factory details\n        const factoryResponse = await axios.get(`http://localhost:8080/WebShopAppREST/rest/chocolateFactoryObjects/${manager.value.factoryId}`, {\n          withCredentials: true\n        });\n        factory.value = factoryResponse.data;\n        console.log('Factory:', factory.value);\n\n        // Fetch purchases related to the factory\n        const purchasesResponse = await axios.get(`http://localhost:8080/WebShopAppREST/rest/purchases/factory/${manager.value.factoryId}`, {\n          withCredentials: true\n        });\n        purchases.value = purchasesResponse.data;\n        console.log('Purchases:', purchases.value);\n\n        // Fetch customers who bought from this factory\n        const customersResponse = await axios.get(`http://localhost:8080/WebShopAppREST/rest/customers/factory/${manager.value.factoryId}`, {\n          withCredentials: true\n        });\n        customers.value = customersResponse.data;\n        console.log('Customers:', customers.value);\n      } catch (error) {\n        console.error('Error fetching manager data:', error);\n      }\n    };\n    onMounted(() => {\n      fetchManagerData();\n    });\n    return {\n      manager,\n      factory,\n      purchases,\n      customers\n    };\n  }\n};","map":{"version":3,"names":["axios","ref","onMounted","setup","manager","factory","purchases","customers","fetchManagerData","response","get","withCredentials","value","data","factoryResponse","factoryId","console","log","purchasesResponse","customersResponse","error"],"sources":["C:\\Users\\PC\\eclipse-workspace\\apache-tomcat-9.0.89\\apache-tomcat-9.0.89\\webapps\\chocolate-factory-2\\Kostur\\Frontend\\front-app\\src\\views\\ManagerView.vue"],"sourcesContent":["<template>\r\n  <div class=\"manager-view\">\r\n    \r\n    <div class=\"factory-details\" v-if=\"factory\">\r\n      <h3>Factory: {{ factory.name }}</h3>\r\n      <p><strong>Location:</strong> {{ factory.location.address }}</p>\r\n      <p><strong>Status:</strong> {{ factory.status }}</p>\r\n      <p><strong>Rating:</strong> {{ factory.rating }}</p>\r\n    </div>\r\n\r\n    <div class=\"purchases\" v-if=\"purchases.length\">\r\n      <h3>Purchases from This Factory</h3>\r\n      <table class=\"table\">\r\n        <thead>\r\n          <tr>\r\n            <th>Customer</th>\r\n            <th>Date</th>\r\n            <th>Total Amount</th>\r\n            <th>Items</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          <tr v-for=\"purchase in purchases\" :key=\"purchase.id\">\r\n            <td>{{ purchase.customerName }}</td>\r\n            <td>{{ new Date(purchase.purchaseDateTime).toLocaleDateString() }}</td>\r\n            <td>{{ purchase.price }}</td>\r\n            <td>\r\n              <ul>\r\n                <li v-for=\"item in purchase.chocolates\" :key=\"item.id\">{{ item.name }} - {{ item.quantity }} pcs</li>\r\n              </ul>\r\n            </td>\r\n          </tr>\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n\r\n    <div class=\"customers\" v-if=\"customers.length\">\r\n      <h3>Customers Who Bought from This Factory</h3>\r\n      <ul>\r\n        <li v-for=\"customer in customers\" :key=\"customer.id\">\r\n          {{ customer.firstName }} {{ customer.lastName }} - {{ customer.email }}\r\n        </li>\r\n      </ul>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from 'axios';\r\nimport { ref, onMounted } from 'vue';\r\n\r\nexport default {\r\n  setup() {\r\n    const manager = ref(null);\r\n    const factory = ref(null);\r\n    const purchases = ref([]);\r\n    const customers = ref([]);\r\n\r\n    const fetchManagerData = async () => {\r\n  try {\r\n    const response = await axios.get('http://localhost:8080/WebShopAppREST/rest/currentUser', {\r\n      withCredentials: true,\r\n    });\r\n    manager.value = response.data;\r\n\r\n    // Fetch factory details\r\n    const factoryResponse = await axios.get(`http://localhost:8080/WebShopAppREST/rest/chocolateFactoryObjects/${manager.value.factoryId}`, {\r\n      withCredentials: true,\r\n    });\r\n    factory.value = factoryResponse.data;\r\n    console.log('Factory:', factory.value);\r\n\r\n    // Fetch purchases related to the factory\r\n    const purchasesResponse = await axios.get(`http://localhost:8080/WebShopAppREST/rest/purchases/factory/${manager.value.factoryId}`, {\r\n      withCredentials: true,\r\n    });\r\n    purchases.value = purchasesResponse.data;\r\n    console.log('Purchases:', purchases.value);\r\n\r\n    // Fetch customers who bought from this factory\r\n    const customersResponse = await axios.get(`http://localhost:8080/WebShopAppREST/rest/customers/factory/${manager.value.factoryId}`, {\r\n      withCredentials: true,\r\n    });\r\n    customers.value = customersResponse.data;\r\n    console.log('Customers:', customers.value);\r\n  } catch (error) {\r\n    console.error('Error fetching manager data:', error);\r\n  }\r\n};\r\n\r\n    onMounted(() => {\r\n      fetchManagerData();\r\n    });\r\n\r\n    return {\r\n      manager,\r\n      factory,\r\n      purchases,\r\n      customers,\r\n    };\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.manager-view {\r\n  max-width: 800px;\r\n  margin: 20px auto;\r\n  padding: 20px;\r\n  background-color: #f9f9f9;\r\n  border-radius: 8px;\r\n  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);\r\n}\r\n\r\nh2 {\r\n  text-align: center;\r\n  color: #333;\r\n}\r\n\r\nh3 {\r\n  margin-top: 20px;\r\n  color: #007bff;\r\n}\r\n\r\n.table {\r\n  width: 100%;\r\n  border-collapse: collapse;\r\n  margin-top: 10px;\r\n}\r\n\r\n.table th,\r\n.table td {\r\n  border: 1px solid #ddd;\r\n  padding: 8px;\r\n}\r\n\r\n.table th {\r\n  background-color: #f2f2f2;\r\n  text-align: left;\r\n}\r\n\r\n.customers ul {\r\n  list-style-type: none;\r\n  padding: 0;\r\n}\r\n\r\n.customers li {\r\n  padding: 5px 0;\r\n}\r\n</style>\r\n"],"mappings":"AAgDA,OAAOA,KAAI,MAAO,OAAO;AACzB,SAASC,GAAG,EAAEC,SAAQ,QAAS,KAAK;AAEpC,eAAe;EACbC,KAAKA,CAAA,EAAG;IACN,MAAMC,OAAM,GAAIH,GAAG,CAAC,IAAI,CAAC;IACzB,MAAMI,OAAM,GAAIJ,GAAG,CAAC,IAAI,CAAC;IACzB,MAAMK,SAAQ,GAAIL,GAAG,CAAC,EAAE,CAAC;IACzB,MAAMM,SAAQ,GAAIN,GAAG,CAAC,EAAE,CAAC;IAEzB,MAAMO,gBAAe,GAAI,MAAAA,CAAA,KAAY;MACvC,IAAI;QACF,MAAMC,QAAO,GAAI,MAAMT,KAAK,CAACU,GAAG,CAAC,uDAAuD,EAAE;UACxFC,eAAe,EAAE;QACnB,CAAC,CAAC;QACFP,OAAO,CAACQ,KAAI,GAAIH,QAAQ,CAACI,IAAI;;QAE7B;QACA,MAAMC,eAAc,GAAI,MAAMd,KAAK,CAACU,GAAG,CAAE,qEAAoEN,OAAO,CAACQ,KAAK,CAACG,SAAU,EAAC,EAAE;UACtIJ,eAAe,EAAE;QACnB,CAAC,CAAC;QACFN,OAAO,CAACO,KAAI,GAAIE,eAAe,CAACD,IAAI;QACpCG,OAAO,CAACC,GAAG,CAAC,UAAU,EAAEZ,OAAO,CAACO,KAAK,CAAC;;QAEtC;QACA,MAAMM,iBAAgB,GAAI,MAAMlB,KAAK,CAACU,GAAG,CAAE,+DAA8DN,OAAO,CAACQ,KAAK,CAACG,SAAU,EAAC,EAAE;UAClIJ,eAAe,EAAE;QACnB,CAAC,CAAC;QACFL,SAAS,CAACM,KAAI,GAAIM,iBAAiB,CAACL,IAAI;QACxCG,OAAO,CAACC,GAAG,CAAC,YAAY,EAAEX,SAAS,CAACM,KAAK,CAAC;;QAE1C;QACA,MAAMO,iBAAgB,GAAI,MAAMnB,KAAK,CAACU,GAAG,CAAE,+DAA8DN,OAAO,CAACQ,KAAK,CAACG,SAAU,EAAC,EAAE;UAClIJ,eAAe,EAAE;QACnB,CAAC,CAAC;QACFJ,SAAS,CAACK,KAAI,GAAIO,iBAAiB,CAACN,IAAI;QACxCG,OAAO,CAACC,GAAG,CAAC,YAAY,EAAEV,SAAS,CAACK,KAAK,CAAC;MAC5C,EAAE,OAAOQ,KAAK,EAAE;QACdJ,OAAO,CAACI,KAAK,CAAC,8BAA8B,EAAEA,KAAK,CAAC;MACtD;IACF,CAAC;IAEGlB,SAAS,CAAC,MAAM;MACdM,gBAAgB,CAAC,CAAC;IACpB,CAAC,CAAC;IAEF,OAAO;MACLJ,OAAO;MACPC,OAAO;MACPC,SAAS;MACTC;IACF,CAAC;EACH;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}