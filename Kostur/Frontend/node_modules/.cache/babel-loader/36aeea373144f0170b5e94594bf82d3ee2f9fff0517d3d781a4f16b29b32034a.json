{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport axios from 'axios';\nimport { useRouter, useRoute } from 'vue-router';\nexport default {\n  data() {\n    return {\n      chocolate: {\n        name: '',\n        price: 0,\n        type: '',\n        kind: '',\n        weight: 0,\n        description: '',\n        factoryId: '',\n        picture: ''\n      },\n      chocolateTypes: ['PLAIN', 'FOR_COOKING', 'FOR_DRINKING'],\n      chocolateKinds: ['DARK', 'MILK', 'WHITE'],\n      userRole: null,\n      errorMessage: ''\n    };\n  },\n  created() {\n    this.chocolate.factoryId = this.$route.params.factoryId;\n    this.checkUserRole();\n  },\n  methods: {\n    async checkUserRole() {\n      try {\n        const response = await axios.get('http://localhost:8080/WebShopAppREST/rest/users/current');\n        this.userRole = response.data.role;\n        if (this.userRole !== 'MANAGER') {\n          this.errorMessage = 'Only managers can add chocolates.';\n          this.$router.push('/unauthorized');\n        }\n      } catch (error) {\n        console.error('Error checking user role:', error);\n        this.errorMessage = 'Error checking user role.';\n        this.$router.push('/unauthorized');\n      }\n    },\n    async addChocolate() {\n      try {\n        if (this.userRole !== 'MANAGER') {\n          this.errorMessage = 'Only managers can add chocolates.';\n          return;\n        }\n        this.chocolate.quantity = 0;\n        this.chocolate.status = 'OUT_OF_STOCK';\n        await axios.post('http://localhost:8080/WebShopAppREST/rest/chocolates', this.chocolate);\n        this.$router.push({\n          name: 'allchocolates'\n        });\n      } catch (error) {\n        console.error('Greška pri dodavanju čokolade:', error);\n        this.errorMessage = 'Failed to add chocolate.';\n      }\n    }\n  }\n};","map":{"version":3,"names":["axios","useRouter","useRoute","data","chocolate","name","price","type","kind","weight","description","factoryId","picture","chocolateTypes","chocolateKinds","userRole","errorMessage","created","$route","params","checkUserRole","methods","response","get","role","$router","push","error","console","addChocolate","quantity","status","post"],"sources":["C:\\Users\\PC\\eclipse-workspace\\apache-tomcat-9.0.89\\apache-tomcat-9.0.89\\webapps\\chocolate-factory-2\\Kostur\\Frontend\\front-app\\src\\views\\AddChocolate.vue"],"sourcesContent":["<template>\r\n  <div class=\"d-flex justify-content-center align-items-center vh-100\">\r\n    <div class=\"card p-5 shadow-lg\" style=\"width: 100%; max-width: 600px;\">\r\n      <h2 class=\"text-center mb-4\" style=\"font-weight: normal;\">Add Chocolate</h2>\r\n      <form @submit.prevent=\"addChocolate\" class=\"chocolate-form\">\r\n        <div class=\"row mb-3\">\r\n          <label for=\"name\" class=\"col-sm-3 col-form-label text-start\">Naziv:</label>\r\n          <div class=\"col-sm-9\">\r\n            <input v-model=\"chocolate.name\" id=\"name\" class=\"form-control form-control-lg\" required />\r\n          </div>\r\n        </div>\r\n        \r\n        <div class=\"row mb-3\">\r\n          <label for=\"price\" class=\"col-sm-3 col-form-label text-start\">Cena:</label>\r\n          <div class=\"col-sm-9\">\r\n            <input v-model.number=\"chocolate.price\" id=\"price\" type=\"number\" class=\"form-control form-control-lg\" required />\r\n          </div>\r\n        </div>\r\n        \r\n        <div class=\"row mb-3\">\r\n          <label for=\"type\" class=\"col-sm-3 col-form-label text-start\">Tip:</label>\r\n          <div class=\"col-sm-9\">\r\n            <select v-model=\"chocolate.type\" id=\"type\" class=\"form-select form-select-lg\" required>\r\n              <option v-for=\"type in chocolateTypes\" :value=\"type\">{{ type }}</option>\r\n            </select>\r\n          </div>\r\n        </div>\r\n\r\n        <div class=\"row mb-3\">\r\n          <label for=\"kind\" class=\"col-sm-3 col-form-label text-start\">Vrsta:</label>\r\n          <div class=\"col-sm-9\">\r\n            <select v-model=\"chocolate.kind\" id=\"kind\" class=\"form-select form-select-lg\" required>\r\n              <option v-for=\"kind in chocolateKinds\" :value=\"kind\">{{ kind }}</option>\r\n            </select>\r\n          </div>\r\n        </div>\r\n\r\n        <div class=\"row mb-3\">\r\n          <label for=\"weight\" class=\"col-sm-3 col-form-label text-start\">Težina (grama):</label>\r\n          <div class=\"col-sm-9\">\r\n            <input v-model.number=\"chocolate.weight\" id=\"weight\" type=\"number\" class=\"form-control form-control-lg\" required />\r\n          </div>\r\n        </div>\r\n\r\n        <div class=\"row mb-3\">\r\n          <label for=\"description\" class=\"col-sm-3 col-form-label text-start\">Opis:</label>\r\n          <div class=\"col-sm-9\">\r\n            <textarea v-model=\"chocolate.description\" id=\"description\" class=\"form-control form-control-lg\" required></textarea>\r\n          </div>\r\n        </div>\r\n\r\n        <div class=\"row mb-3\">\r\n          <label for=\"picture\" class=\"col-sm-3 col-form-label text-start\">Slika:</label>\r\n          <div class=\"col-sm-9\">\r\n            <input v-model=\"chocolate.picture\" id=\"picture\" class=\"form-control form-control-lg\" required />\r\n          </div>\r\n        </div>\r\n\r\n        <div class=\"row\">\r\n          <div class=\"col-12\">\r\n            <button type=\"submit\" class=\"btn btn-primary w-100 btn-lg\">Dodaj čokoladu</button>\r\n          </div>\r\n        </div>\r\n      </form>\r\n      <p v-if=\"errorMessage\" class=\"text-danger text-center mt-3\">{{ errorMessage }}</p>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from 'axios';\r\nimport { useRouter, useRoute } from 'vue-router';\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      chocolate: {\r\n        name: '',\r\n        price: 0,\r\n        type: '',\r\n        kind: '',\r\n        weight: 0,\r\n        description: '',\r\n        factoryId: '',\r\n        picture: ''\r\n      },\r\n      chocolateTypes: ['PLAIN', 'FOR_COOKING', 'FOR_DRINKING'],\r\n      chocolateKinds: ['DARK', 'MILK', 'WHITE'],\r\n      userRole: null,\r\n      errorMessage: '',\r\n    };\r\n  },\r\n  created() {\r\n    this.chocolate.factoryId = this.$route.params.factoryId;\r\n    this.checkUserRole();\r\n  },\r\n  methods: {\r\n    async checkUserRole() {\r\n      try {\r\n        const response = await axios.get('http://localhost:8080/WebShopAppREST/rest/users/current');\r\n        this.userRole = response.data.role;\r\n        if (this.userRole !== 'MANAGER') {\r\n          this.errorMessage = 'Only managers can add chocolates.';\r\n          this.$router.push('/unauthorized');\r\n        }\r\n      } catch (error) {\r\n        console.error('Error checking user role:', error);\r\n        this.errorMessage = 'Error checking user role.';\r\n        this.$router.push('/unauthorized');\r\n      }\r\n    },\r\n    async addChocolate() {\r\n      try {\r\n        if (this.userRole !== 'MANAGER') {\r\n          this.errorMessage = 'Only managers can add chocolates.';\r\n          return;\r\n        }\r\n\r\n        this.chocolate.quantity = 0;\r\n        this.chocolate.status = 'OUT_OF_STOCK';\r\n\r\n        await axios.post('http://localhost:8080/WebShopAppREST/rest/chocolates', this.chocolate);\r\n        this.$router.push({ name: 'allchocolates' });\r\n      } catch (error) {\r\n        console.error('Greška pri dodavanju čokolade:', error);\r\n        this.errorMessage = 'Failed to add chocolate.';\r\n      }\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.d-flex {\r\n  min-height: 100vh;\r\n}\r\n\r\n.card {\r\n  border: 1px solid #ddd;\r\n  border-radius: 8px;\r\n  padding: 30px;\r\n  background-color: #f0f8ff;\r\n  box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);\r\n}\r\n\r\nh2 {\r\n  color: #343a40;\r\n  text-align: center;\r\n  font-size: 2rem;\r\n  font-weight: normal;\r\n}\r\n\r\n.form-label {\r\n  font-weight: normal;\r\n}\r\n\r\nbutton[type=\"submit\"] {\r\n  margin-top: 20px;\r\n}\r\n\r\ninput[type=\"text\"],\r\ninput[type=\"number\"],\r\nselect,\r\ntextarea,\r\nbutton[type=\"submit\"] {\r\n  border-radius: 8px;\r\n  font-size: 1.1rem;\r\n}\r\n\r\ninput[type=\"text\"]:focus,\r\ninput[type=\"number\"]:focus,\r\ntextarea:focus,\r\nselect:focus {\r\n  border-color: #007bff;\r\n  box-shadow: 0 0 5px rgba(0, 123, 255, 0.25);\r\n}\r\n\r\ntextarea {\r\n  height: 120px;\r\n}\r\n\r\n.text-danger {\r\n  margin-top: 15px;\r\n}\r\n</style>\r\n"],"mappings":";AAsEA,OAAOA,KAAI,MAAO,OAAO;AACzB,SAASC,SAAS,EAAEC,QAAO,QAAS,YAAY;AAEhD,eAAe;EACbC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,SAAS,EAAE;QACTC,IAAI,EAAE,EAAE;QACRC,KAAK,EAAE,CAAC;QACRC,IAAI,EAAE,EAAE;QACRC,IAAI,EAAE,EAAE;QACRC,MAAM,EAAE,CAAC;QACTC,WAAW,EAAE,EAAE;QACfC,SAAS,EAAE,EAAE;QACbC,OAAO,EAAE;MACX,CAAC;MACDC,cAAc,EAAE,CAAC,OAAO,EAAE,aAAa,EAAE,cAAc,CAAC;MACxDC,cAAc,EAAE,CAAC,MAAM,EAAE,MAAM,EAAE,OAAO,CAAC;MACzCC,QAAQ,EAAE,IAAI;MACdC,YAAY,EAAE;IAChB,CAAC;EACH,CAAC;EACDC,OAAOA,CAAA,EAAG;IACR,IAAI,CAACb,SAAS,CAACO,SAAQ,GAAI,IAAI,CAACO,MAAM,CAACC,MAAM,CAACR,SAAS;IACvD,IAAI,CAACS,aAAa,CAAC,CAAC;EACtB,CAAC;EACDC,OAAO,EAAE;IACP,MAAMD,aAAaA,CAAA,EAAG;MACpB,IAAI;QACF,MAAME,QAAO,GAAI,MAAMtB,KAAK,CAACuB,GAAG,CAAC,yDAAyD,CAAC;QAC3F,IAAI,CAACR,QAAO,GAAIO,QAAQ,CAACnB,IAAI,CAACqB,IAAI;QAClC,IAAI,IAAI,CAACT,QAAO,KAAM,SAAS,EAAE;UAC/B,IAAI,CAACC,YAAW,GAAI,mCAAmC;UACvD,IAAI,CAACS,OAAO,CAACC,IAAI,CAAC,eAAe,CAAC;QACpC;MACF,EAAE,OAAOC,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,2BAA2B,EAAEA,KAAK,CAAC;QACjD,IAAI,CAACX,YAAW,GAAI,2BAA2B;QAC/C,IAAI,CAACS,OAAO,CAACC,IAAI,CAAC,eAAe,CAAC;MACpC;IACF,CAAC;IACD,MAAMG,YAAYA,CAAA,EAAG;MACnB,IAAI;QACF,IAAI,IAAI,CAACd,QAAO,KAAM,SAAS,EAAE;UAC/B,IAAI,CAACC,YAAW,GAAI,mCAAmC;UACvD;QACF;QAEA,IAAI,CAACZ,SAAS,CAAC0B,QAAO,GAAI,CAAC;QAC3B,IAAI,CAAC1B,SAAS,CAAC2B,MAAK,GAAI,cAAc;QAEtC,MAAM/B,KAAK,CAACgC,IAAI,CAAC,sDAAsD,EAAE,IAAI,CAAC5B,SAAS,CAAC;QACxF,IAAI,CAACqB,OAAO,CAACC,IAAI,CAAC;UAAErB,IAAI,EAAE;QAAgB,CAAC,CAAC;MAC9C,EAAE,OAAOsB,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,gCAAgC,EAAEA,KAAK,CAAC;QACtD,IAAI,CAACX,YAAW,GAAI,0BAA0B;MAChD;IACF;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}