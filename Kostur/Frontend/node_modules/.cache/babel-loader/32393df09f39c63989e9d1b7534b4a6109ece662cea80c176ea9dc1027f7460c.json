{"ast":null,"code":"import { createCommentVNode as _createCommentVNode, vModelText as _vModelText, createElementVNode as _createElementVNode, withDirectives as _withDirectives, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, vModelSelect as _vModelSelect, createTextVNode as _createTextVNode, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-9dea18fa\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  class: \"all-factories\"\n};\nconst _hoisted_2 = {\n  class: \"search-filters\"\n};\nconst _hoisted_3 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"option\", {\n  value: \"\"\n}, \"Sve lokacije\", -1 /* HOISTED */));\nconst _hoisted_4 = [\"value\"];\nconst _hoisted_5 = {\n  key: 0\n};\nconst _hoisted_6 = {\n  key: 0\n};\nconst _hoisted_7 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"th\", null, \"Mapa\", -1 /* HOISTED */));\nconst _hoisted_8 = {\n  key: 0\n};\nconst _hoisted_9 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"th\", null, \"Logo\", -1 /* HOISTED */));\nconst _hoisted_10 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"th\", null, \"Akcije\", -1 /* HOISTED */));\nconst _hoisted_11 = [\"id\"];\nconst _hoisted_12 = [\"src\"];\nconst _hoisted_13 = [\"onClick\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [_createCommentVNode(\" Search filters \"), _withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => _ctx.searchText = $event),\n    placeholder: \"Pretraži fabrike...\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, _ctx.searchText]]), _withDirectives(_createElementVNode(\"select\", {\n    \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => _ctx.selectedLocation = $event),\n    onChange: $setup.filterFactories\n  }, [_hoisted_3, (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_ctx.locations, location => {\n    return _openBlock(), _createElementBlock(\"option\", {\n      value: location\n    }, _toDisplayString(location), 9 /* TEXT, PROPS */, _hoisted_4);\n  }), 256 /* UNKEYED_FRAGMENT */))], 544 /* NEED_HYDRATION, NEED_PATCH */), [[_vModelSelect, _ctx.selectedLocation]]), _createElementVNode(\"button\", {\n    onClick: _cache[2] || (_cache[2] = $event => $setup.sortBy('name'))\n  }, \"Sortiraj po imenu\"), _createElementVNode(\"button\", {\n    onClick: _cache[3] || (_cache[3] = $event => $setup.sortBy('location'))\n  }, \"Sortiraj po lokaciji\"), _createElementVNode(\"button\", {\n    onClick: _cache[4] || (_cache[4] = $event => $setup.sortBy('rating'))\n  }, \"Sortiraj po oceni\")]), _createElementVNode(\"table\", null, [_createElementVNode(\"thead\", null, [_createElementVNode(\"tr\", null, [_createElementVNode(\"th\", {\n    onClick: _cache[5] || (_cache[5] = $event => $setup.sortBy('name'))\n  }, [_createTextVNode(\"Ime fabrike \"), $setup.sortKey === 'name' ? (_openBlock(), _createElementBlock(\"span\", _hoisted_5, _toDisplayString($setup.sortOrders.name), 1 /* TEXT */)) : _createCommentVNode(\"v-if\", true)]), _createElementVNode(\"th\", {\n    onClick: _cache[6] || (_cache[6] = $event => $setup.sortBy('location'))\n  }, [_createTextVNode(\"Lokacija \"), $setup.sortKey === 'location' ? (_openBlock(), _createElementBlock(\"span\", _hoisted_6, _toDisplayString($setup.sortOrders.location), 1 /* TEXT */)) : _createCommentVNode(\"v-if\", true)]), _hoisted_7, _createElementVNode(\"th\", {\n    onClick: _cache[7] || (_cache[7] = $event => $setup.sortBy('rating'))\n  }, [_createTextVNode(\"Ocena \"), $setup.sortKey === 'rating' ? (_openBlock(), _createElementBlock(\"span\", _hoisted_8, _toDisplayString($setup.sortOrders.rating), 1 /* TEXT */)) : _createCommentVNode(\"v-if\", true)]), _hoisted_9, _hoisted_10])]), _createElementVNode(\"tbody\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($setup.filteredFactories, factory => {\n    return _openBlock(), _createElementBlock(\"tr\", {\n      key: factory.id\n    }, [_createElementVNode(\"td\", null, _toDisplayString(factory.name), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(factory.location.address), 1 /* TEXT */), _createElementVNode(\"td\", null, [_createElementVNode(\"div\", {\n      id: 'map-' + factory.id,\n      class: \"map-container\"\n    }, null, 8 /* PROPS */, _hoisted_11)]), _createElementVNode(\"td\", null, _toDisplayString(factory.rating), 1 /* TEXT */), _createElementVNode(\"td\", null, [_createElementVNode(\"img\", {\n      src: $setup.getFactoryLogo(factory.logo),\n      alt: \"Logo\",\n      class: \"factory-logo\"\n    }, null, 8 /* PROPS */, _hoisted_12)]), _createElementVNode(\"td\", null, [_createElementVNode(\"button\", {\n      onClick: $event => $setup.viewFactoryProfile(factory.id)\n    }, \"Pogledaj\", 8 /* PROPS */, _hoisted_13)])]);\n  }), 128 /* KEYED_FRAGMENT */))])])]);\n}","map":{"version":3,"names":["class","_createElementVNode","value","key","_createElementBlock","_hoisted_1","_hoisted_2","_createCommentVNode","type","_cache","$event","_ctx","searchText","placeholder","selectedLocation","onChange","$setup","filterFactories","_hoisted_3","_Fragment","_renderList","locations","location","_toDisplayString","_hoisted_4","onClick","sortBy","_createTextVNode","sortKey","_hoisted_5","sortOrders","name","_hoisted_6","_hoisted_7","_hoisted_8","rating","_hoisted_9","_hoisted_10","filteredFactories","factory","id","address","_hoisted_11","src","getFactoryLogo","logo","alt","_hoisted_12","viewFactoryProfile","_hoisted_13"],"sources":["C:\\Users\\PC\\eclipse-workspace\\apache-tomcat-9.0.89\\apache-tomcat-9.0.89\\webapps\\chocolate-factory-2\\Kostur\\Frontend\\front-app\\src\\views\\AllChocolateFactories.vue"],"sourcesContent":["<template>\r\n  <div class=\"all-factories\">\r\n    <div class=\"search-filters\">\r\n      <!-- Search filters -->\r\n      <input type=\"text\" v-model=\"searchText\" placeholder=\"Pretraži fabrike...\">\r\n      <select v-model=\"selectedLocation\" @change=\"filterFactories\">\r\n        <option value=\"\">Sve lokacije</option>\r\n        <option v-for=\"location in locations\" :value=\"location\">{{ location }}</option>\r\n      </select>\r\n      <button @click=\"sortBy('name')\">Sortiraj po imenu</button>\r\n      <button @click=\"sortBy('location')\">Sortiraj po lokaciji</button>\r\n      <button @click=\"sortBy('rating')\">Sortiraj po oceni</button>\r\n    </div>\r\n    <table>\r\n      <thead>\r\n        <tr>\r\n          <th @click=\"sortBy('name')\">Ime fabrike <span v-if=\"sortKey === 'name'\">{{ sortOrders.name }}</span></th>\r\n          <th @click=\"sortBy('location')\">Lokacija <span v-if=\"sortKey === 'location'\">{{ sortOrders.location }}</span></th>\r\n          <th>Mapa</th>\r\n          <th @click=\"sortBy('rating')\">Ocena <span v-if=\"sortKey === 'rating'\">{{ sortOrders.rating }}</span></th>\r\n          <th>Logo</th>\r\n          <th>Akcije</th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        <tr v-for=\"factory in filteredFactories\" :key=\"factory.id\">\r\n          <td>{{ factory.name }}</td>\r\n          <td>{{ factory.location.address }}</td>\r\n          <td><div :id=\"'map-' + factory.id\" class=\"map-container\"></div></td>\r\n          <td>{{ factory.rating }}</td>\r\n          <td><img :src=\"getFactoryLogo(factory.logo)\" alt=\"Logo\" class=\"factory-logo\" /></td>\r\n          <td><button @click=\"viewFactoryProfile(factory.id)\">Pogledaj</button></td>\r\n        </tr>\r\n      </tbody>\r\n    </table>\r\n  </div>\r\n</template>\r\n\r\n\r\n<script setup>\r\nimport { ref, onMounted, computed, nextTick, watch } from 'vue';\r\nimport axios from 'axios';\r\nimport { useRouter } from 'vue-router';\r\nimport { Map, View } from 'ol';\r\nimport TileLayer from 'ol/layer/Tile';\r\nimport OSM from 'ol/source/OSM';\r\nimport Feature from 'ol/Feature';\r\nimport Point from 'ol/geom/Point';\r\nimport { fromLonLat } from 'ol/proj';\r\nimport VectorLayer from 'ol/layer/Vector';\r\nimport { Vector as VectorSource } from 'ol/source';\r\nimport { Icon, Style } from 'ol/style';\r\n\r\nconst router = useRouter();\r\nconst factories = ref([]);\r\nconst searchName = ref('');\r\nconst searchChocolate = ref('');\r\nconst searchLocation = ref('');\r\nconst searchRating = ref('');\r\nconst searchChocolateType = ref('');\r\nconst searchChocolateKind = ref('');\r\nconst openFactoriesOnly = ref(false);\r\n\r\nconst chocolateTypes = ['PLAIN', 'FOR_COOKING', 'FOR_DRINKING'];\r\nconst chocolateKinds = ['DARK', 'MILK', 'WHITE'];\r\n\r\nconst sortKey = ref('');\r\nconst sortOrders = ref({\r\n  name: 1,\r\n  location: 1,\r\n  rating: 1\r\n});\r\n\r\nasync function loadFactories() {\r\n  try {\r\n    const response = await axios.get('http://localhost:8080/WebShopAppREST/rest/chocolateFactoryObjects');\r\n    factories.value = response.data;\r\n    console.log(\"Loaded factories:\", factories.value);  // Debug log\r\n    await nextTick(); // Wait for the DOM to update\r\n    initializeMaps(); // Initialize maps after the DOM update\r\n  } catch (error) {\r\n    console.error(\"Error loading factories:\", error);\r\n  }\r\n}\r\n\r\nonMounted(() => {\r\n  loadFactories();\r\n});\r\n\r\nconst isFactoryOpen = (factory) => {\r\n  return factory.status === 'OPEN';\r\n};\r\n\r\nconst sortedFactories = computed(() => {\r\n  return factories.value.sort((a, b) => {\r\n    const aValue = a.name.toLowerCase();\r\n    const bValue = b.name.toLowerCase();\r\n    return aValue.localeCompare(bValue); // Default sorting by name\r\n  });\r\n});\r\n\r\nconst filteredFactories = computed(() => {\r\n  return sortedFactories.value.filter(factory => {\r\n    const matchesName = factory.name.toLowerCase().includes(searchName.value.toLowerCase());\r\n    const matchesChocolate = searchChocolate.value === '' || factory.chocolates.some(chocolate => \r\n      chocolate.name.toLowerCase().includes(searchChocolate.value.toLowerCase())\r\n    );\r\n    const matchesLocation = factory.location.address.toLowerCase().includes(searchLocation.value.toLowerCase());\r\n    const matchesRating = searchRating.value === '' || factory.rating >= parseFloat(searchRating.value);\r\n    const matchesChocolateType = !searchChocolateType.value || factory.chocolates.some(chocolate =>\r\n      chocolate.type === searchChocolateType.value\r\n    );\r\n    const matchesChocolateKind = !searchChocolateKind.value || factory.chocolates.some(chocolate =>\r\n      chocolate.kind === searchChocolateKind.value\r\n    );\r\n    const isOpenFactory = !openFactoriesOnly.value || isFactoryOpen(factory);\r\n\r\n    return matchesName && matchesChocolate && matchesLocation && matchesRating && matchesChocolateType && matchesChocolateKind && isOpenFactory;\r\n  });\r\n});\r\n\r\nconst getFactoryLogo = (logoFileName) => {\r\n  return `/images/${logoFileName}`;\r\n};\r\n\r\nconst viewFactoryProfile = (factoryId) => {\r\n  router.push({ name: 'factoryprofile', params: { id: factoryId }});\r\n};\r\n\r\nconst filterFactories = () => {\r\n  // No need for explicit return here, computed property `filteredFactories` will handle it\r\n  console.log(\"Search Parameters:\");\r\n  console.log(\"Chocolate Name:\", searchChocolate.value);\r\n  console.log(\"Factory Name:\", searchName.value);\r\n  console.log(\"Location:\", searchLocation.value);\r\n  console.log(\"Rating:\", searchRating.value);\r\n  console.log(\"Chocolate Type:\", searchChocolateType.value);\r\n  console.log(\"Chocolate Kind:\", searchChocolateKind.value);\r\n  console.log(\"Show Only Open Factories:\", openFactoriesOnly.value);\r\n};\r\n\r\nconst sortBy = key => {\r\n  sortKey.value = key;\r\n  sortOrders.value[key] = sortOrders.value[key] * -1;\r\n  filteredFactories.value.sort((a, b) => {\r\n    const modifier = sortOrders.value[key];\r\n    if (key === 'name' || key === 'location') {\r\n      const aValue = key === 'location' ? a.location.address.toLowerCase() : a[key].toLowerCase();\r\n      const bValue = key === 'location' ? b.location.address.toLowerCase() : b[key].toLowerCase();\r\n      return modifier * aValue.localeCompare(bValue);\r\n    } else {\r\n      return modifier * (a[key] - b[key]);\r\n    }\r\n  });\r\n};\r\n\r\nfunction initializeMaps() {\r\n  // Remove all existing maps first\r\n  document.querySelectorAll('.map-container').forEach((mapContainer) => {\r\n    mapContainer.innerHTML = '';\r\n  });\r\n\r\n  filteredFactories.value.forEach(factory => {\r\n    const mapContainer = document.getElementById(`map-${factory.id}`);\r\n    if (mapContainer) {\r\n      const coordinates = fromLonLat([factory.location.longitude, factory.location.latitude]);\r\n      const map = new Map({\r\n        target: mapContainer,\r\n        layers: [\r\n          new TileLayer({\r\n            source: new OSM()\r\n          }),\r\n          new VectorLayer({\r\n            source: new VectorSource({\r\n              features: [\r\n                new Feature({\r\n                  geometry: new Point(coordinates)\r\n                })\r\n              ]\r\n            }),\r\n            style: new Style({\r\n              image: new Icon({\r\n                src: '/images/map-marker.png',\r\n                imgSize: [32, 32],\r\n                anchor: [0.5, 1]\r\n              })\r\n            })\r\n          })\r\n        ],\r\n        view: new View({\r\n          center: coordinates,\r\n          zoom: 15\r\n        })\r\n      });\r\n    } else {\r\n      console.log(`Map container for factory ${factory.name}: ${mapContainer}`);\r\n    }\r\n  });\r\n}\r\n\r\nwatch(filteredFactories, async () => {\r\n  await nextTick();\r\n  initializeMaps();\r\n});\r\n</script>\r\n\r\n\r\n<style scoped>\r\n.all-factories {\r\n  padding: 20px;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n}\r\n\r\n.search-filters {\r\n  margin-bottom: 20px;\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  gap: 10px;\r\n}\r\n\r\ntable {\r\n  max-width: 800px;\r\n  width: 100%;\r\n  border-collapse: collapse;\r\n  margin: 0 auto;\r\n}\r\n\r\nth, td {\r\n  border: 1px solid #ddd;\r\n  padding: 8px;\r\n  text-align: left;\r\n}\r\n\r\nth {\r\n  background-color: #f2f2f2;\r\n  cursor: pointer;\r\n}\r\n\r\n.factory-logo {\r\n  width: 100px;\r\n  height: 100px;\r\n}\r\n\r\n.map-container {\r\n  width: 200px;\r\n  height: 200px;\r\n}\r\n\r\nbutton {\r\n  padding: 6px 12px;\r\n  cursor: pointer;\r\n}\r\n</style>\r\n"],"mappings":";;;EACOA,KAAK,EAAC;AAAe;;EACnBA,KAAK,EAAC;AAAgB;gEAIvBC,mBAAA,CAAsC;EAA9BC,KAAK,EAAC;AAAE,GAAC,cAAY;mBANrC;;EAAAC,GAAA;AAAA;;EAAAA,GAAA;AAAA;gEAkBUF,mBAAA,CAAa,YAAT,MAAI;;EAlBlBE,GAAA;AAAA;gEAoBUF,mBAAA,CAAa,YAAT,MAAI;iEACRA,mBAAA,CAAe,YAAX,QAAM;oBArBpB;oBAAA;oBAAA;;uBACEG,mBAAA,CAkCM,OAlCNC,UAkCM,GAjCJJ,mBAAA,CAUM,OAVNK,UAUM,GATJC,mBAAA,oBAAuB,E,gBACvBN,mBAAA,CAA0E;IAAnEO,IAAI,EAAC,MAAM;IAJxB,uBAAAC,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAIkCC,IAAA,CAAAC,UAAU,GAAAF,MAAA;IAAEG,WAAW,EAAC;iDAAxBF,IAAA,CAAAC,UAAU,E,mBACtCX,mBAAA,CAGS;IARf,uBAAAQ,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAKuBC,IAAA,CAAAG,gBAAgB,GAAAJ,MAAA;IAAGK,QAAM,EAAEC,MAAA,CAAAC;MAC1CC,UAAsC,G,kBACtCd,mBAAA,CAA+Ee,SAAA,QAPvFC,WAAA,CAOmCT,IAAA,CAAAU,SAAS,EAArBC,QAAQ;yBAAvBlB,mBAAA,CAA+E;MAAxCF,KAAK,EAAEoB;IAAQ,GAAAC,gBAAA,CAAKD,QAAQ,wBAP3EE,UAAA;6FAKuBb,IAAA,CAAAG,gBAAgB,E,GAIjCb,mBAAA,CAA0D;IAAjDwB,OAAK,EAAAhB,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAAEM,MAAA,CAAAU,MAAM;KAAU,mBAAiB,GACjDzB,mBAAA,CAAiE;IAAxDwB,OAAK,EAAAhB,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAAEM,MAAA,CAAAU,MAAM;KAAc,sBAAoB,GACxDzB,mBAAA,CAA4D;IAAnDwB,OAAK,EAAAhB,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAAEM,MAAA,CAAAU,MAAM;KAAY,mBAAiB,E,GAErDzB,mBAAA,CAqBQ,gBApBNA,mBAAA,CASQ,gBARNA,mBAAA,CAOK,aANHA,mBAAA,CAAyG;IAApGwB,OAAK,EAAAhB,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAAEM,MAAA,CAAAU,MAAM;MAhB5BC,gBAAA,CAgBsC,cAAY,GAAYX,MAAA,CAAAY,OAAO,e,cAAnBxB,mBAAA,CAA4D,QAhB9GyB,UAAA,EAAAN,gBAAA,CAgBqFP,MAAA,CAAAc,UAAU,CAACC,IAAI,oBAhBpGxB,mBAAA,e,GAiBUN,mBAAA,CAAkH;IAA7GwB,OAAK,EAAAhB,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAAEM,MAAA,CAAAU,MAAM;MAjB5BC,gBAAA,CAiB0C,WAAS,GAAYX,MAAA,CAAAY,OAAO,mB,cAAnBxB,mBAAA,CAAoE,QAjBvH4B,UAAA,EAAAT,gBAAA,CAiB0FP,MAAA,CAAAc,UAAU,CAACR,QAAQ,oBAjB7Gf,mBAAA,e,GAkBU0B,UAAa,EACbhC,mBAAA,CAAyG;IAApGwB,OAAK,EAAAhB,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAAEM,MAAA,CAAAU,MAAM;MAnB5BC,gBAAA,CAmBwC,QAAM,GAAYX,MAAA,CAAAY,OAAO,iB,cAAnBxB,mBAAA,CAAgE,QAnB9G8B,UAAA,EAAAX,gBAAA,CAmBmFP,MAAA,CAAAc,UAAU,CAACK,MAAM,oBAnBpG5B,mBAAA,e,GAoBU6B,UAAa,EACbC,WAAe,C,KAGnBpC,mBAAA,CASQ,iB,kBARNG,mBAAA,CAOKe,SAAA,QAhCbC,WAAA,CAyB8BJ,MAAA,CAAAsB,iBAAiB,EAA5BC,OAAO;yBAAlBnC,mBAAA,CAOK;MAPqCD,GAAG,EAAEoC,OAAO,CAACC;QACrDvC,mBAAA,CAA2B,YAAAsB,gBAAA,CAApBgB,OAAO,CAACR,IAAI,kBACnB9B,mBAAA,CAAuC,YAAAsB,gBAAA,CAAhCgB,OAAO,CAACjB,QAAQ,CAACmB,OAAO,kBAC/BxC,mBAAA,CAAoE,aAAhEA,mBAAA,CAA2D;MAArDuC,EAAE,WAAWD,OAAO,CAACC,EAAE;MAAExC,KAAK,EAAC;4BA5BnD0C,WAAA,E,GA6BUzC,mBAAA,CAA6B,YAAAsB,gBAAA,CAAtBgB,OAAO,CAACJ,MAAM,kBACrBlC,mBAAA,CAAoF,aAAhFA,mBAAA,CAA2E;MAArE0C,GAAG,EAAE3B,MAAA,CAAA4B,cAAc,CAACL,OAAO,CAACM,IAAI;MAAGC,GAAG,EAAC,MAAM;MAAC9C,KAAK,EAAC;4BA9BxE+C,WAAA,E,GA+BU9C,mBAAA,CAA0E,aAAtEA,mBAAA,CAAiE;MAAxDwB,OAAK,EAAAf,MAAA,IAAEM,MAAA,CAAAgC,kBAAkB,CAACT,OAAO,CAACC,EAAE;OAAG,UAAQ,iBA/BtES,WAAA,E","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}