{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { ref, onMounted } from 'vue';\nimport axios from 'axios';\nimport { useRouter } from 'vue-router';\nimport Map from 'ol/Map';\nimport View from 'ol/View';\nimport TileLayer from 'ol/layer/Tile';\nimport OSM from 'ol/source/OSM';\nimport { fromLonLat, transform } from 'ol/proj';\nexport default {\n  __name: 'AddFactory',\n  setup(__props, {\n    expose: __expose\n  }) {\n    __expose();\n    const router = useRouter();\n    const factory = ref({\n      name: '',\n      location: {\n        address: '',\n        latitude: null,\n        longitude: null\n      },\n      openingTime: '',\n      closingTime: '',\n      logo: '',\n      managerId: null,\n      chocolates: [],\n      // Default empty list\n      rating: 0,\n      // Default rating\n      status: 'OPEN' // Default status\n    });\n    const availableManagers = ref([]);\n    const loadAvailableManagers = async () => {\n      try {\n        const response = await axios.get('http://localhost:8080/WebShopAppREST/rest/users/managers');\n        availableManagers.value = response.data.filter(manager => !manager.assignedFactoryId || manager.assignedFactoryId === '');\n      } catch (error) {\n        console.error('Error loading managers:', error);\n      }\n    };\n    let map;\n    onMounted(() => {\n      loadAvailableManagers();\n      map = new Map({\n        target: 'map',\n        layers: [new TileLayer({\n          source: new OSM()\n        })],\n        view: new View({\n          center: fromLonLat([19.8335, 45.2671]),\n          zoom: 12\n        })\n      });\n      map.on('click', function (event) {\n        const coordinate = event.coordinate;\n        const location = transform(coordinate, 'EPSG:3857', 'EPSG:4326');\n        factory.value.location.latitude = location[1];\n        factory.value.location.longitude = location[0];\n        fetchAddress(location);\n      });\n    });\n    const fetchAddress = async location => {\n      try {\n        const endpoint = `https://nominatim.openstreetmap.org/reverse?lat=${location[1]}&lon=${location[0]}&format=json`;\n        const response = await axios.get(endpoint);\n        factory.value.location.address = response.data.display_name;\n      } catch (error) {\n        console.error('Error fetching address:', error);\n      }\n    };\n    const submitFactory = async () => {\n      try {\n        const endpoint = 'http://localhost:8080/WebShopAppREST/rest/chocolateFactoryObjects';\n        const response = await axios.post(endpoint, factory.value);\n        console.log('Factory created:', response.data);\n        router.push('/factories');\n      } catch (error) {\n        console.error('Greška prilikom kreiranja fabrike:', error.message);\n        if (error.response) {\n          console.error('Status:', error.response.status);\n          console.error('Poruka:', error.response.data.message);\n        } else if (error.request) {\n          console.error('Nije stigao odgovor od servera:', error.request);\n        } else {\n          console.error('Došlo je do greške prilikom obrade zahteva:', error.message);\n        }\n      }\n    };\n    const __returned__ = {\n      router,\n      factory,\n      availableManagers,\n      loadAvailableManagers,\n      get map() {\n        return map;\n      },\n      set map(v) {\n        map = v;\n      },\n      fetchAddress,\n      submitFactory,\n      ref,\n      onMounted,\n      get axios() {\n        return axios;\n      },\n      get useRouter() {\n        return useRouter;\n      },\n      get Map() {\n        return Map;\n      },\n      get View() {\n        return View;\n      },\n      get TileLayer() {\n        return TileLayer;\n      },\n      get OSM() {\n        return OSM;\n      },\n      get fromLonLat() {\n        return fromLonLat;\n      },\n      get transform() {\n        return transform;\n      }\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["ref","onMounted","axios","useRouter","Map","View","TileLayer","OSM","fromLonLat","transform","router","factory","name","location","address","latitude","longitude","openingTime","closingTime","logo","managerId","chocolates","rating","status","availableManagers","loadAvailableManagers","response","get","value","data","filter","manager","assignedFactoryId","error","console","map","target","layers","source","view","center","zoom","on","event","coordinate","fetchAddress","endpoint","display_name","submitFactory","post","log","push","message","request"],"sources":["C:/Users/PC/eclipse-workspace/apache-tomcat-9.0.89/apache-tomcat-9.0.89/webapps/chocolate-factory-2/Kostur/Frontend/front-app/src/views/AddFactory.vue"],"sourcesContent":["<template>\r\n  <div class=\"add-factory\">\r\n    <h2>Create New Chocolate Factory</h2>\r\n    <form @submit.prevent=\"submitFactory\">\r\n      <div class=\"form-group\">\r\n        <label for=\"factoryName\">Factory Name:</label>\r\n        <input type=\"text\" id=\"factoryName\" v-model=\"factory.name\" name=\"factoryName\" required>\r\n      </div>\r\n      <div class=\"form-group\">\r\n        <label for=\"factoryLocation\">Location:</label>\r\n        <div id=\"map\" class=\"map\"></div>\r\n        <input type=\"text\" id=\"factoryLocation\" v-model=\"factory.location.address\" name=\"factoryLocation\" placeholder=\"Selected Location\" readonly>\r\n      </div>\r\n      <div class=\"form-group\">\r\n        <label for=\"manager\">Manager:</label>\r\n        <select id=\"manager\" v-model=\"factory.managerId\" name=\"manager\" required>\r\n          <option v-for=\"manager in availableManagers\" :key=\"manager.id\" :value=\"manager.id\">\r\n            {{ manager.username }}\r\n          </option>\r\n        </select>\r\n      </div>\r\n      <div class=\"form-group\">\r\n        <label for=\"openingTime\">Opening Time:</label>\r\n        <input type=\"time\" id=\"openingTime\" v-model=\"factory.openingTime\" name=\"openingTime\" required>\r\n      </div>\r\n      <div class=\"form-group\">\r\n        <label for=\"closingTime\">Closing Time:</label>\r\n        <input type=\"time\" id=\"closingTime\" v-model=\"factory.closingTime\" name=\"closingTime\" required>\r\n      </div>\r\n      <div class=\"form-group\">\r\n        <label for=\"logoName\">Logo Name:</label>\r\n        <input type=\"text\" id=\"logoName\" v-model=\"factory.logo\" name=\"logoName\" required>\r\n      </div>\r\n      <button type=\"submit\">Create Factory</button>\r\n    </form>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nimport { ref, onMounted } from 'vue';\r\nimport axios from 'axios';\r\nimport { useRouter } from 'vue-router';\r\nimport Map from 'ol/Map';\r\nimport View from 'ol/View';\r\nimport TileLayer from 'ol/layer/Tile';\r\nimport OSM from 'ol/source/OSM';\r\nimport { fromLonLat, transform } from 'ol/proj';\r\n\r\nconst router = useRouter();\r\nconst factory = ref({\r\n  name: '',\r\n  location: {\r\n    address: '',\r\n    latitude: null,\r\n    longitude: null\r\n  },\r\n  openingTime: '',\r\n  closingTime: '',\r\n  logo: '',\r\n  managerId: null,\r\n  chocolates: [],  // Default empty list\r\n  rating: 0,       // Default rating\r\n  status: 'OPEN'   // Default status\r\n});\r\n\r\nconst availableManagers = ref([]);\r\n\r\nconst loadAvailableManagers = async () => {\r\n  try {\r\n    const response = await axios.get('http://localhost:8080/WebShopAppREST/rest/users/managers');\r\n    availableManagers.value = response.data.filter(manager => !manager.assignedFactoryId || manager.assignedFactoryId === '');\r\n  } catch (error) {\r\n    console.error('Error loading managers:', error);\r\n  }\r\n};\r\n\r\nlet map;\r\n\r\nonMounted(() => {\r\n  loadAvailableManagers();\r\n\r\n  map = new Map({\r\n    target: 'map',\r\n    layers: [\r\n      new TileLayer({\r\n        source: new OSM()\r\n      })\r\n    ],\r\n    view: new View({\r\n      center: fromLonLat([19.8335, 45.2671]),\r\n      zoom: 12\r\n    })\r\n  });\r\n\r\n  map.on('click', function(event) {\r\n    const coordinate = event.coordinate;\r\n    const location = transform(coordinate, 'EPSG:3857', 'EPSG:4326');\r\n    factory.value.location.latitude = location[1];\r\n    factory.value.location.longitude = location[0];\r\n    fetchAddress(location);\r\n  });\r\n});\r\n\r\nconst fetchAddress = async (location) => {\r\n  try {\r\n    const endpoint = `https://nominatim.openstreetmap.org/reverse?lat=${location[1]}&lon=${location[0]}&format=json`;\r\n    const response = await axios.get(endpoint);\r\n    factory.value.location.address = response.data.display_name;\r\n  } catch (error) {\r\n    console.error('Error fetching address:', error);\r\n  }\r\n};\r\n\r\nconst submitFactory = async () => {\r\n  try {\r\n    const endpoint = 'http://localhost:8080/WebShopAppREST/rest/chocolateFactoryObjects';\r\n    const response = await axios.post(endpoint, factory.value);\r\n    console.log('Factory created:', response.data);\r\n\r\n    router.push('/factories');\r\n  } catch (error) {\r\n    console.error('Greška prilikom kreiranja fabrike:', error.message);\r\n    if (error.response) {\r\n      console.error('Status:', error.response.status);\r\n      console.error('Poruka:', error.response.data.message);\r\n    } else if (error.request) {\r\n      console.error('Nije stigao odgovor od servera:', error.request);\r\n    } else {\r\n      console.error('Došlo je do greške prilikom obrade zahteva:', error.message);\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.add-factory {\r\n  max-width: 600px;\r\n  margin: 20px auto;\r\n  padding: 20px;\r\n  border: 1px solid #ccc;\r\n  border-radius: 8px;\r\n}\r\n\r\n.form-group {\r\n  margin-bottom: 15px;\r\n}\r\n\r\nlabel {\r\n  display: block;\r\n  margin-bottom: 5px;\r\n}\r\n\r\ninput[type=\"text\"], input[type=\"time\"], select {\r\n  width: 100%;\r\n  padding: 8px;\r\n  font-size: 16px;\r\n}\r\n\r\nbutton {\r\n  padding: 10px 20px;\r\n  background-color: #f5e7f5;\r\n  color: #fff;\r\n  border: none;\r\n  cursor: pointer;\r\n  font-size: 16px;\r\n  border-radius: 4px;\r\n}\r\n\r\nbutton:hover {\r\n  background-color: #e0cbe0;\r\n}\r\n\r\n.map {\r\n  height: 300px;\r\n  width: 100%;\r\n  margin-bottom: 10px;\r\n}\r\n</style>\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}