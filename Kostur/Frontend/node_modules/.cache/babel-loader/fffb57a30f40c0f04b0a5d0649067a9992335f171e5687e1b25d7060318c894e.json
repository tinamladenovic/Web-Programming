{"ast":null,"code":"import { createTextVNode as _createTextVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, createElementVNode as _createElementVNode } from \"vue\";\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_router_link = _resolveComponent(\"router-link\");\n  const _component_router_view = _resolveComponent(\"router-view\");\n  return _openBlock(), _createElementBlock(_Fragment, null, [_createElementVNode(\"nav\", null, [_createVNode(_component_router_link, {\n    to: \"/\"\n  }, {\n    default: _withCtx(() => [_createTextVNode(\"All Chocolate Factories\")]),\n    _: 1 /* STABLE */\n  }), _createTextVNode(\" | \"), _createVNode(_component_router_link, {\n    to: \"/allchocolates\"\n  }, {\n    default: _withCtx(() => [_createTextVNode(\"All Chocolates\")]),\n    _: 1 /* STABLE */\n  }), _createTextVNode(\" | \"), $data.isLoggedIn ? (_openBlock(), _createElementBlock(_Fragment, {\n    key: 0\n  }, [_createVNode(_component_router_link, {\n    to: \"/logout\"\n  }, {\n    default: _withCtx(() => [_createTextVNode(\"Logout\")]),\n    _: 1 /* STABLE */\n  }), _createTextVNode(\" | \")], 64 /* STABLE_FRAGMENT */)) : (_openBlock(), _createElementBlock(_Fragment, {\n    key: 1\n  }, [_createVNode(_component_router_link, {\n    to: \"/login\"\n  }, {\n    default: _withCtx(() => [_createTextVNode(\"Login\")]),\n    _: 1 /* STABLE */\n  }), _createTextVNode(\" | \")], 64 /* STABLE_FRAGMENT */)), _createVNode(_component_router_link, {\n    to: \"/register\"\n  }, {\n    default: _withCtx(() => [_createTextVNode(\"Register\")]),\n    _: 1 /* STABLE */\n  }), _createTextVNode(\" | \")]), _createVNode(_component_router_view)], 64 /* STABLE_FRAGMENT */);\n}","map":{"version":3,"names":["_createElementBlock","_Fragment","_createElementVNode","_createVNode","_component_router_link","to","default","_withCtx","_createTextVNode","_","$data","isLoggedIn","key","_component_router_view"],"sources":["C:\\Users\\PC\\eclipse-workspace\\apache-tomcat-9.0.89\\apache-tomcat-9.0.89\\webapps\\chocolate-factory-2\\Kostur\\Frontend\\front-app\\src\\App.vue"],"sourcesContent":["<template>\n  <nav>\n    <router-link to=\"/\">All Chocolate Factories</router-link> |\n    <router-link to=\"/allchocolates\">All Chocolates</router-link> |\n    \n    <template v-if=\"isLoggedIn\">\n      <router-link to=\"/logout\">Logout</router-link> |\n    </template>\n    \n    <template v-else>\n      <router-link to=\"/login\">Login</router-link> |\n    </template>\n    \n    <router-link to=\"/register\">Register</router-link> |\n  </nav>\n  <router-view/>\n</template>\n\n<script>\nexport default {\n  data() {\n    return {\n      isLoggedIn: false // Initially set to false\n    };\n  },\n  created() {\n    // Check if the user is logged in\n    // For example, you can check if there's a token in localStorage or session storage\n    // Update the value of isLoggedIn accordingly\n    // This is just a placeholder, you should implement the logic according to your app\n    this.isLoggedIn = !!localStorage.getItem('token');\n  }\n};\n</script>\n\n<style>\n#app {\n  font-family: Avenir, Helvetica, Arial, sans-serif;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  text-align: center;\n  color: #2c3e50;\n}\n\nnav {\n  padding: 30px;\n}\n\nnav a {\n  font-weight: bold;\n  color: #2c3e50;\n}\n\nnav a.router-link-exact-active {\n  color: #42b983;\n}\n</style>\n"],"mappings":";;;;uBAAAA,mBAAA,CAAAC,SAAA,SACEC,mBAAA,CAaM,cAZJC,YAAA,CAAyDC,sBAAA;IAA5CC,EAAE,EAAC;EAAG;IAFvBC,OAAA,EAAAC,QAAA,CAEwB,MAAuB,CAF/CC,gBAAA,CAEwB,yBAAuB,E;IAF/CC,CAAA;MAAAD,gBAAA,CAE6D,KACzD,GAAAL,YAAA,CAA6DC,sBAAA;IAAhDC,EAAE,EAAC;EAAgB;IAHpCC,OAAA,EAAAC,QAAA,CAGqC,MAAc,CAHnDC,gBAAA,CAGqC,gBAAc,E;IAHnDC,CAAA;MAAAD,gBAAA,CAGiE,KAE7D,GAAgBE,KAAA,CAAAC,UAAU,I,cAA1BX,mBAAA,CAEWC,SAAA;IAPfW,GAAA;EAAA,IAMMT,YAAA,CAA8CC,sBAAA;IAAjCC,EAAE,EAAC;EAAS;IAN/BC,OAAA,EAAAC,QAAA,CAMgC,MAAM,CANtCC,gBAAA,CAMgC,QAAM,E;IANtCC,CAAA;MAAAD,gBAAA,CAMoD,KAChD,E,8CAEAR,mBAAA,CAEWC,SAAA;IAXfW,GAAA;EAAA,IAUMT,YAAA,CAA4CC,sBAAA;IAA/BC,EAAE,EAAC;EAAQ;IAV9BC,OAAA,EAAAC,QAAA,CAU+B,MAAK,CAVpCC,gBAAA,CAU+B,OAAK,E;IAVpCC,CAAA;MAAAD,gBAAA,CAUkD,KAC9C,E,8BAEAL,YAAA,CAAkDC,sBAAA;IAArCC,EAAE,EAAC;EAAW;IAb/BC,OAAA,EAAAC,QAAA,CAagC,MAAQ,CAbxCC,gBAAA,CAagC,UAAQ,E;IAbxCC,CAAA;MAAAD,gBAAA,CAasD,KACpD,E,GACAL,YAAA,CAAcU,sBAAA,E","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}