{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport axios from 'axios';\nimport { ref, onMounted } from 'vue';\nimport { useRouter } from 'vue-router';\nexport default {\n  setup() {\n    const manager = ref(null);\n    const factory = ref(null);\n    const purchases = ref([]);\n    const customers = ref([]);\n    const workers = ref([]);\n    const router = useRouter();\n    const fetchManagerData = async () => {\n      try {\n        const response = await axios.get('http://localhost:8080/WebShopAppREST/rest/currentUser', {\n          withCredentials: true\n        });\n        manager.value = response.data;\n\n        // Fetch factory details\n        const factoryResponse = await axios.get(`http://localhost:8080/WebShopAppREST/rest/chocolateFactoryObjects/${manager.value.factoryId}`, {\n          withCredentials: true\n        });\n        factory.value = factoryResponse.data;\n        console.log('Factory:', factory.value);\n\n        // Fetch purchases related to the factory\n        const purchasesResponse = await axios.get(`http://localhost:8080/WebShopAppREST/rest/purchases/factory/${manager.value.factoryId}`, {\n          withCredentials: true\n        });\n        purchases.value = purchasesResponse.data;\n        console.log('Purchases:', purchases.value);\n\n        // Fetch customers who bought from this factory\n        const customersResponse = await axios.get(`http://localhost:8080/WebShopAppREST/rest/users/customers/factory/${manager.value.factoryId}`, {\n          withCredentials: true\n        });\n        customers.value = customersResponse.data;\n        console.log('Customers:', customers.value);\n\n        // Fetch workers related to the factory\n        const workersResponse = await axios.get(`http://localhost:8080/WebShopAppREST/rest/users/workers/factory/${manager.value.factoryId}`, {\n          withCredentials: true\n        });\n        workers.value = workersResponse.data;\n        console.log('Workers:', workers.value);\n      } catch (error) {\n        console.error('Error fetching manager data:', error);\n      }\n    };\n    const formatDate = dateTime => {\n      const date = new Date(dateTime);\n      return `${date.toLocaleDateString()} ${date.toLocaleTimeString()}`;\n    };\n    const navigateToAddWorker = () => {\n      router.push('/addworker');\n    };\n    const navigateToAddChocolate = () => {\n      router.push('/addchocolate');\n    };\n    onMounted(() => {\n      fetchManagerData();\n    });\n    return {\n      manager,\n      factory,\n      purchases,\n      customers,\n      workers,\n      formatDate,\n      navigateToAddWorker,\n      navigateToAddChocolate\n    };\n  }\n};","map":{"version":3,"names":["axios","ref","onMounted","useRouter","setup","manager","factory","purchases","customers","workers","router","fetchManagerData","response","get","withCredentials","value","data","factoryResponse","factoryId","console","log","purchasesResponse","customersResponse","workersResponse","error","formatDate","dateTime","date","Date","toLocaleDateString","toLocaleTimeString","navigateToAddWorker","push","navigateToAddChocolate"],"sources":["C:\\Users\\PC\\eclipse-workspace\\apache-tomcat-9.0.89\\apache-tomcat-9.0.89\\webapps\\chocolate-factory-2\\Kostur\\Frontend\\front-app\\src\\views\\ManagerView.vue"],"sourcesContent":["<template>\r\n  <div class=\"manager-view\">\r\n    \r\n    <div class=\"factory-details\" v-if=\"factory\">\r\n      <h3>Factory: {{ factory.name }}</h3>\r\n      <p><strong>Location:</strong> {{ factory.location.address }}</p>\r\n      <p><strong>Status:</strong> {{ factory.status }}</p>\r\n      <p><strong>Rating:</strong> {{ factory.rating }}</p>\r\n      \r\n      <h4>Chocolates Produced in this Factory</h4>\r\n      <ul>\r\n        <li v-for=\"chocolate in factory.chocolates\" :key=\"chocolate.id\">\r\n          {{ chocolate.name }} - {{ chocolate.type }} - {{ chocolate.price }}$\r\n        </li>\r\n      </ul>\r\n      <button @click=\"navigateToAddChocolate\" class=\"action-button\">Add Chocolate</button>\r\n\r\n      <h4>Workers in this Factory</h4>\r\n      <ul>\r\n        <li v-for=\"worker in workers\" :key=\"worker.id\">\r\n          {{ worker.firstName }} {{ worker.lastName }} - {{ worker.role }}\r\n        </li>\r\n      </ul>\r\n      <button @click=\"navigateToAddWorker\" class=\"action-button\">Add Worker</button>\r\n    </div>\r\n\r\n    <div class=\"purchases\" v-if=\"purchases.length\">\r\n      <h3>Purchases from This Factory</h3>\r\n      <table class=\"table\">\r\n        <thead>\r\n          <tr>\r\n            <th> Order ID</th>\r\n            <th>Customer</th>\r\n            <th>Date & Time</th>\r\n            <th>Total Amount</th>\r\n            <th>Status</th>\r\n            <th>Items</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          <tr v-for=\"purchase in purchases\" :key=\"purchase.id\">\r\n            <td>{{ purchase.id }}</td>\r\n            <td>{{ purchase.customerName }}</td>\r\n            <td>{{ formatDate(purchase.purchaseDateTime) }}</td>\r\n            <td>{{ purchase.price.toFixed(2) }}</td>\r\n            <td>{{ purchase.status }}</td>\r\n            <td>\r\n              <ul>\r\n                <li v-for=\"item in purchase.chocolates\" :key=\"item.id\">{{ item.name }} </li>\r\n              </ul>\r\n            </td>\r\n          </tr>\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n\r\n    <div class=\"customers\" v-if=\"customers.length\">\r\n      <h3>Customers Who Bought from This Factory</h3>\r\n      <ul>\r\n        <li v-for=\"customer in customers\" :key=\"customer.id\">\r\n          {{ customer.firstName }} {{ customer.lastName }} - {{ customer.email }}\r\n        </li>\r\n      </ul>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from 'axios';\r\nimport { ref, onMounted } from 'vue';\r\nimport { useRouter } from 'vue-router';\r\n\r\nexport default {\r\n  setup() {\r\n    const manager = ref(null);\r\n    const factory = ref(null);\r\n    const purchases = ref([]);\r\n    const customers = ref([]);\r\n    const workers = ref([]);\r\n    const router = useRouter();\r\n\r\n    const fetchManagerData = async () => {\r\n      try {\r\n        const response = await axios.get('http://localhost:8080/WebShopAppREST/rest/currentUser', {\r\n          withCredentials: true,\r\n        });\r\n        manager.value = response.data;\r\n\r\n        // Fetch factory details\r\n        const factoryResponse = await axios.get(`http://localhost:8080/WebShopAppREST/rest/chocolateFactoryObjects/${manager.value.factoryId}`, {\r\n          withCredentials: true,\r\n        });\r\n        factory.value = factoryResponse.data;\r\n        console.log('Factory:', factory.value);\r\n\r\n        // Fetch purchases related to the factory\r\n        const purchasesResponse = await axios.get(`http://localhost:8080/WebShopAppREST/rest/purchases/factory/${manager.value.factoryId}`, {\r\n          withCredentials: true,\r\n        });\r\n        purchases.value = purchasesResponse.data;\r\n        console.log('Purchases:', purchases.value);\r\n\r\n        // Fetch customers who bought from this factory\r\n        const customersResponse = await axios.get(`http://localhost:8080/WebShopAppREST/rest/users/customers/factory/${manager.value.factoryId}`, {\r\n          withCredentials: true,\r\n        });\r\n        customers.value = customersResponse.data;\r\n        console.log('Customers:', customers.value);\r\n\r\n        // Fetch workers related to the factory\r\n        const workersResponse = await axios.get(`http://localhost:8080/WebShopAppREST/rest/users/workers/factory/${manager.value.factoryId}`, {\r\n          withCredentials: true,\r\n        });\r\n        workers.value = workersResponse.data;\r\n        console.log('Workers:', workers.value);\r\n\r\n      } catch (error) {\r\n        console.error('Error fetching manager data:', error);\r\n      }\r\n    };\r\n\r\n    const formatDate = (dateTime) => {\r\n      const date = new Date(dateTime);\r\n      return `${date.toLocaleDateString()} ${date.toLocaleTimeString()}`;\r\n    };\r\n\r\n    const navigateToAddWorker = () => {\r\n      router.push('/addworker');\r\n    };\r\n\r\n    const navigateToAddChocolate = () => {\r\n      router.push('/addchocolate');\r\n    };\r\n\r\n    onMounted(() => {\r\n      fetchManagerData();\r\n    });\r\n\r\n    return {\r\n      manager,\r\n      factory,\r\n      purchases,\r\n      customers,\r\n      workers,\r\n      formatDate,\r\n      navigateToAddWorker,\r\n      navigateToAddChocolate,\r\n    };\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.manager-view {\r\n  max-width: 800px;\r\n  margin: 20px auto;\r\n  padding: 20px;\r\n  background-color: #f9f9f9;\r\n  border-radius: 8px;\r\n  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);\r\n}\r\n\r\nh2 {\r\n  text-align: center;\r\n  color: #333;\r\n}\r\n\r\nh3 {\r\n  margin-top: 20px;\r\n  color: #007bff;\r\n}\r\n\r\n.table {\r\n  width: 100%;\r\n  border-collapse: collapse;\r\n  margin-top: 10px;\r\n}\r\n\r\n.table th,\r\n.table td {\r\n  border: 1px solid #ddd;\r\n  padding: 8px;\r\n}\r\n\r\n.table th {\r\n  background-color: #f2f2f2;\r\n  text-align: left;\r\n}\r\n\r\n.customers ul {\r\n  list-style-type: none;\r\n  padding: 0;\r\n}\r\n\r\n.customers li {\r\n  padding: 5px 0;\r\n}\r\n\r\n.actions {\r\n  margin-top: 20px;\r\n}\r\n\r\n.actions button {\r\n  margin-right: 10px;\r\n  padding: 10px 20px;\r\n  background-color: #007bff;\r\n  color: white;\r\n  border: none;\r\n  border-radius: 4px;\r\n  cursor: pointer;\r\n}\r\n\r\n.actions button:hover {\r\n  background-color: #0056b3;\r\n}\r\n\r\n.action-button {\r\n  margin-top: 10px;\r\n  padding: 8px 15px;\r\n  background-color: #007bff;\r\n  color: white;\r\n  border: none;\r\n  border-radius: 4px;\r\n  cursor: pointer;\r\n}\r\n\r\n.action-button:hover {\r\n  background-color: #0056b3;\r\n}\r\n</style>\r\n"],"mappings":";AAoEA,OAAOA,KAAI,MAAO,OAAO;AACzB,SAASC,GAAG,EAAEC,SAAQ,QAAS,KAAK;AACpC,SAASC,SAAQ,QAAS,YAAY;AAEtC,eAAe;EACbC,KAAKA,CAAA,EAAG;IACN,MAAMC,OAAM,GAAIJ,GAAG,CAAC,IAAI,CAAC;IACzB,MAAMK,OAAM,GAAIL,GAAG,CAAC,IAAI,CAAC;IACzB,MAAMM,SAAQ,GAAIN,GAAG,CAAC,EAAE,CAAC;IACzB,MAAMO,SAAQ,GAAIP,GAAG,CAAC,EAAE,CAAC;IACzB,MAAMQ,OAAM,GAAIR,GAAG,CAAC,EAAE,CAAC;IACvB,MAAMS,MAAK,GAAIP,SAAS,CAAC,CAAC;IAE1B,MAAMQ,gBAAe,GAAI,MAAAA,CAAA,KAAY;MACnC,IAAI;QACF,MAAMC,QAAO,GAAI,MAAMZ,KAAK,CAACa,GAAG,CAAC,uDAAuD,EAAE;UACxFC,eAAe,EAAE;QACnB,CAAC,CAAC;QACFT,OAAO,CAACU,KAAI,GAAIH,QAAQ,CAACI,IAAI;;QAE7B;QACA,MAAMC,eAAc,GAAI,MAAMjB,KAAK,CAACa,GAAG,CAAE,qEAAoER,OAAO,CAACU,KAAK,CAACG,SAAU,EAAC,EAAE;UACtIJ,eAAe,EAAE;QACnB,CAAC,CAAC;QACFR,OAAO,CAACS,KAAI,GAAIE,eAAe,CAACD,IAAI;QACpCG,OAAO,CAACC,GAAG,CAAC,UAAU,EAAEd,OAAO,CAACS,KAAK,CAAC;;QAEtC;QACA,MAAMM,iBAAgB,GAAI,MAAMrB,KAAK,CAACa,GAAG,CAAE,+DAA8DR,OAAO,CAACU,KAAK,CAACG,SAAU,EAAC,EAAE;UAClIJ,eAAe,EAAE;QACnB,CAAC,CAAC;QACFP,SAAS,CAACQ,KAAI,GAAIM,iBAAiB,CAACL,IAAI;QACxCG,OAAO,CAACC,GAAG,CAAC,YAAY,EAAEb,SAAS,CAACQ,KAAK,CAAC;;QAE1C;QACA,MAAMO,iBAAgB,GAAI,MAAMtB,KAAK,CAACa,GAAG,CAAE,qEAAoER,OAAO,CAACU,KAAK,CAACG,SAAU,EAAC,EAAE;UACxIJ,eAAe,EAAE;QACnB,CAAC,CAAC;QACFN,SAAS,CAACO,KAAI,GAAIO,iBAAiB,CAACN,IAAI;QACxCG,OAAO,CAACC,GAAG,CAAC,YAAY,EAAEZ,SAAS,CAACO,KAAK,CAAC;;QAE1C;QACA,MAAMQ,eAAc,GAAI,MAAMvB,KAAK,CAACa,GAAG,CAAE,mEAAkER,OAAO,CAACU,KAAK,CAACG,SAAU,EAAC,EAAE;UACpIJ,eAAe,EAAE;QACnB,CAAC,CAAC;QACFL,OAAO,CAACM,KAAI,GAAIQ,eAAe,CAACP,IAAI;QACpCG,OAAO,CAACC,GAAG,CAAC,UAAU,EAAEX,OAAO,CAACM,KAAK,CAAC;MAExC,EAAE,OAAOS,KAAK,EAAE;QACdL,OAAO,CAACK,KAAK,CAAC,8BAA8B,EAAEA,KAAK,CAAC;MACtD;IACF,CAAC;IAED,MAAMC,UAAS,GAAKC,QAAQ,IAAK;MAC/B,MAAMC,IAAG,GAAI,IAAIC,IAAI,CAACF,QAAQ,CAAC;MAC/B,OAAQ,GAAEC,IAAI,CAACE,kBAAkB,CAAC,CAAC,IAAIF,IAAI,CAACG,kBAAkB,CAAC,CAAE,EAAC;IACpE,CAAC;IAED,MAAMC,mBAAkB,GAAIA,CAAA,KAAM;MAChCrB,MAAM,CAACsB,IAAI,CAAC,YAAY,CAAC;IAC3B,CAAC;IAED,MAAMC,sBAAqB,GAAIA,CAAA,KAAM;MACnCvB,MAAM,CAACsB,IAAI,CAAC,eAAe,CAAC;IAC9B,CAAC;IAED9B,SAAS,CAAC,MAAM;MACdS,gBAAgB,CAAC,CAAC;IACpB,CAAC,CAAC;IAEF,OAAO;MACLN,OAAO;MACPC,OAAO;MACPC,SAAS;MACTC,SAAS;MACTC,OAAO;MACPgB,UAAU;MACVM,mBAAmB;MACnBE;IACF,CAAC;EACH;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}