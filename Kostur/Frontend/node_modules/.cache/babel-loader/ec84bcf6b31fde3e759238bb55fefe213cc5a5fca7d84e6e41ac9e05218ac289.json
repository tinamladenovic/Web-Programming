{"ast":null,"code":"import axios from 'axios';\nimport { ref, computed, onMounted } from 'vue';\nexport default {\n  setup() {\n    const users = ref([]);\n    const searchFirstName = ref('');\n    const searchLastName = ref('');\n    const searchUsername = ref('');\n    const filterRole = ref('');\n    const filterCustomerType = ref('');\n    const sortKey = ref('');\n    const sortAsc = ref(true);\n    const fetchUsers = async () => {\n      try {\n        const response = await axios.get('http://localhost:8080/WebShopAppREST/rest/users', {\n          withCredentials: true\n        });\n        users.value = response.data;\n      } catch (error) {\n        console.error('Error fetching users:', error);\n      }\n    };\n    const filteredUsers = computed(() => {\n      let result = users.value;\n      if (searchFirstName.value) {\n        const query = searchFirstName.value.toLowerCase();\n        result = result.filter(user => user.firstName.toLowerCase().includes(query));\n      }\n      if (searchLastName.value) {\n        const query = searchLastName.value.toLowerCase();\n        result = result.filter(user => user.lastName.toLowerCase().includes(query));\n      }\n      if (searchUsername.value) {\n        const query = searchUsername.value.toLowerCase();\n        result = result.filter(user => user.username.toLowerCase().includes(query));\n      }\n      if (filterRole.value) {\n        result = result.filter(user => user.role === filterRole.value);\n      }\n      if (filterCustomerType.value) {\n        result = result.filter(user => user.customerType === filterCustomerType.value);\n      }\n      if (sortKey.value) {\n        result.sort((a, b) => {\n          let res = 0;\n          if (a[sortKey.value] < b[sortKey.value]) res = -1;\n          if (a[sortKey.value] > b[sortKey.value]) res = 1;\n          return sortAsc.value ? res : -res;\n        });\n      }\n      return result;\n    });\n    const sortBy = key => {\n      if (sortKey.value === key) {\n        sortAsc.value = !sortAsc.value;\n      } else {\n        sortKey.value = key;\n        sortAsc.value = true;\n      }\n    };\n    onMounted(() => {\n      fetchUsers();\n    });\n    return {\n      users,\n      searchFirstName,\n      searchLastName,\n      searchUsername,\n      filterRole,\n      filterCustomerType,\n      sortKey,\n      sortAsc,\n      filteredUsers,\n      sortBy\n    };\n  }\n};","map":{"version":3,"names":["axios","ref","computed","onMounted","setup","users","searchFirstName","searchLastName","searchUsername","filterRole","filterCustomerType","sortKey","sortAsc","fetchUsers","response","get","withCredentials","value","data","error","console","filteredUsers","result","query","toLowerCase","filter","user","firstName","includes","lastName","username","role","customerType","sort","a","b","res","sortBy","key"],"sources":["C:\\Users\\PC\\eclipse-workspace\\apache-tomcat-9.0.89\\apache-tomcat-9.0.89\\webapps\\chocolate-factory-2\\Kostur\\Frontend\\front-app\\src\\views\\UserTable.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <h2>Registered Users</h2>\r\n    <div class=\"filters\">\r\n      <input v-model=\"searchFirstName\" placeholder=\"Search by first name\" class=\"form-control\" />\r\n      <input v-model=\"searchLastName\" placeholder=\"Search by last name\" class=\"form-control\" />\r\n      <input v-model=\"searchUsername\" placeholder=\"Search by username\" class=\"form-control\" />\r\n      <select v-model=\"filterRole\" class=\"form-control\">\r\n        <option value=\"\">All Roles</option>\r\n        <option value=\"ADMIN\">ADMIN</option>\r\n        <option value=\"CUSTOMER\">CUSTOMER</option>\r\n        <option value=\"MANAGER\">MANAGER</option>\r\n        <option value=\"WORKER\">WORKER</option>\r\n      </select>\r\n      <select v-model=\"filterCustomerType\" class=\"form-control\">\r\n        <option value=\"\">All Customer Types</option>\r\n        <option value=\"NO_TYPE\">NO_TYPE</option>\r\n        <option value=\"BRONZE\">BRONZE</option>\r\n        <option value=\"SILVER\">SILVER</option>\r\n        <option value=\"GOLD\">GOLD</option>\r\n      </select>\r\n    </div>\r\n    <table class=\"table\">\r\n      <thead>\r\n        <tr>\r\n          <th @click=\"sortBy('firstName')\">First Name</th>\r\n          <th @click=\"sortBy('lastName')\">Last Name</th>\r\n          <th @click=\"sortBy('username')\">Username</th>\r\n          <th @click=\"sortBy('earnedPoints')\">Earned Points</th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        <tr v-for=\"user in filteredUsers\" :key=\"user.id\">\r\n          <td>{{ user.firstName }}</td>\r\n          <td>{{ user.lastName }}</td>\r\n          <td>{{ user.username }}</td>\r\n          <td>{{ user.earnedPoints }}</td>\r\n        </tr>\r\n      </tbody>\r\n    </table>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from 'axios';\r\nimport { ref, computed, onMounted } from 'vue';\r\n\r\nexport default {\r\n  setup() {\r\n    const users = ref([]);\r\n    const searchFirstName = ref('');\r\n    const searchLastName = ref('');\r\n    const searchUsername = ref('');\r\n    const filterRole = ref('');\r\n    const filterCustomerType = ref('');\r\n    const sortKey = ref('');\r\n    const sortAsc = ref(true);\r\n\r\n    const fetchUsers = async () => {\r\n      try {\r\n        const response = await axios.get('http://localhost:8080/WebShopAppREST/rest/users', {\r\n          withCredentials: true,\r\n        });\r\n        users.value = response.data;\r\n      } catch (error) {\r\n        console.error('Error fetching users:', error);\r\n      }\r\n    };\r\n\r\n    const filteredUsers = computed(() => {\r\n      let result = users.value;\r\n\r\n      if (searchFirstName.value) {\r\n        const query = searchFirstName.value.toLowerCase();\r\n        result = result.filter(user => user.firstName.toLowerCase().includes(query));\r\n      }\r\n\r\n      if (searchLastName.value) {\r\n        const query = searchLastName.value.toLowerCase();\r\n        result = result.filter(user => user.lastName.toLowerCase().includes(query));\r\n      }\r\n\r\n      if (searchUsername.value) {\r\n        const query = searchUsername.value.toLowerCase();\r\n        result = result.filter(user => user.username.toLowerCase().includes(query));\r\n      }\r\n\r\n      if (filterRole.value) {\r\n        result = result.filter(user => user.role === filterRole.value);\r\n      }\r\n\r\n      if (filterCustomerType.value) {\r\n        result = result.filter(user => user.customerType === filterCustomerType.value);\r\n      }\r\n\r\n      if (sortKey.value) {\r\n        result.sort((a, b) => {\r\n          let res = 0;\r\n          if (a[sortKey.value] < b[sortKey.value]) res = -1;\r\n          if (a[sortKey.value] > b[sortKey.value]) res = 1;\r\n          return sortAsc.value ? res : -res;\r\n        });\r\n      }\r\n\r\n      return result;\r\n    });\r\n\r\n    const sortBy = key => {\r\n      if (sortKey.value === key) {\r\n        sortAsc.value = !sortAsc.value;\r\n      } else {\r\n        sortKey.value = key;\r\n        sortAsc.value = true;\r\n      }\r\n    };\r\n\r\n    onMounted(() => {\r\n      fetchUsers();\r\n    });\r\n\r\n    return {\r\n      users,\r\n      searchFirstName,\r\n      searchLastName,\r\n      searchUsername,\r\n      filterRole,\r\n      filterCustomerType,\r\n      sortKey,\r\n      sortAsc,\r\n      filteredUsers,\r\n      sortBy,\r\n    };\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.filters {\r\n  display: flex;\r\n  gap: 10px;\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.table th {\r\n  cursor: pointer;\r\n}\r\n</style>\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}