{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport axios from 'axios';\nimport { ref, computed, onMounted } from 'vue';\nimport { useRouter } from 'vue-router';\nexport default {\n  setup() {\n    const manager = ref(null);\n    const factory = ref(null);\n    const purchases = ref([]);\n    const customers = ref([]);\n    const workers = ref([]);\n    const router = useRouter();\n    const filters = ref({\n      minPrice: null,\n      maxPrice: null,\n      startDate: null,\n      endDate: null\n    });\n    const sortOption = ref(null);\n    const fetchManagerData = async () => {\n      try {\n        const response = await axios.get('http://localhost:8080/WebShopAppREST/rest/currentUser', {\n          withCredentials: true\n        });\n        manager.value = response.data;\n        const factoryResponse = await axios.get(`http://localhost:8080/WebShopAppREST/rest/chocolateFactoryObjects/${manager.value.factoryId}`, {\n          withCredentials: true\n        });\n        factory.value = factoryResponse.data;\n        const purchasesResponse = await axios.get(`http://localhost:8080/WebShopAppREST/rest/purchases/factory/${manager.value.factoryId}`, {\n          withCredentials: true\n        });\n        purchases.value = purchasesResponse.data;\n        const customersResponse = await axios.get(`http://localhost:8080/WebShopAppREST/rest/users/customers/factory/${manager.value.factoryId}`, {\n          withCredentials: true\n        });\n        customers.value = customersResponse.data;\n        const workersResponse = await axios.get(`http://localhost:8080/WebShopAppREST/rest/users/workers/factory/${manager.value.factoryId}`, {\n          withCredentials: true\n        });\n        workers.value = workersResponse.data;\n      } catch (error) {\n        console.error('Error fetching manager data:', error);\n      }\n    };\n    const formatDate = dateTime => {\n      const date = new Date(dateTime);\n      return `${date.toLocaleDateString()} ${date.toLocaleTimeString()}`;\n    };\n    const filteredPurchases = computed(() => {\n      return purchases.value.filter(purchase => {\n        const matchesPrice = (!filters.value.minPrice || purchase.price >= filters.value.minPrice) && (!filters.value.maxPrice || purchase.price <= filters.value.maxPrice);\n        const matchesDate = (!filters.value.startDate || new Date(purchase.purchaseDateTime) >= new Date(filters.value.startDate)) && (!filters.value.endDate || new Date(purchase.purchaseDateTime) <= new Date(filters.value.endDate));\n        return matchesPrice && matchesDate;\n      });\n    });\n    const sortPurchases = sortBy => {\n      sortOption.value = sortBy;\n      filteredPurchases.value.sort((a, b) => {\n        if (sortBy === 'price') {\n          return a.price - b.price;\n        } else if (sortBy === 'date') {\n          return new Date(a.purchaseDateTime) - new Date(b.purchaseDateTime);\n        }\n        return 0;\n      });\n    };\n    const applyFilters = () => {\n      if (sortOption.value) {\n        sortPurchases(sortOption.value);\n      }\n    };\n    const navigateToAddWorker = () => {\n      router.push('/addworker');\n    };\n    const navigateToAddChocolate = () => {\n      router.push('/addchocolate');\n    };\n    onMounted(() => {\n      fetchManagerData();\n    });\n    return {\n      manager,\n      factory,\n      purchases,\n      customers,\n      workers,\n      filters,\n      filteredPurchases,\n      formatDate,\n      sortPurchases,\n      applyFilters,\n      navigateToAddWorker,\n      navigateToAddChocolate\n    };\n  }\n};","map":{"version":3,"names":["axios","ref","computed","onMounted","useRouter","setup","manager","factory","purchases","customers","workers","router","filters","minPrice","maxPrice","startDate","endDate","sortOption","fetchManagerData","response","get","withCredentials","value","data","factoryResponse","factoryId","purchasesResponse","customersResponse","workersResponse","error","console","formatDate","dateTime","date","Date","toLocaleDateString","toLocaleTimeString","filteredPurchases","filter","purchase","matchesPrice","price","matchesDate","purchaseDateTime","sortPurchases","sortBy","sort","a","b","applyFilters","navigateToAddWorker","push","navigateToAddChocolate"],"sources":["C:\\Users\\PC\\eclipse-workspace\\apache-tomcat-9.0.89\\apache-tomcat-9.0.89\\webapps\\chocolate-factory-2\\Kostur\\Frontend\\front-app\\src\\views\\ManagerView.vue"],"sourcesContent":["<template>\r\n  <div class=\"d-flex justify-content-center align-items-center vh-100\">\r\n    <div class=\"card p-5 shadow-lg\" style=\"width: 100%; max-width: 800px;\">\r\n      <div class=\"manager-view\">\r\n        \r\n        <div class=\"factory-details\" v-if=\"factory\">\r\n          <h3>Factory: {{ factory.name }}</h3>\r\n          <p><strong>Location:</strong> {{ factory.location.address }}</p>\r\n          <p><strong>Status:</strong> {{ factory.status }}</p>\r\n          <p><strong>Rating:</strong> {{ factory.rating }}</p>\r\n          \r\n          <h4>Chocolates Produced in this Factory</h4>\r\n          <ul>\r\n            <li v-for=\"chocolate in factory.chocolates\" :key=\"chocolate.id\">\r\n              {{ chocolate.name }} - {{ chocolate.type }} - {{ chocolate.price }}$\r\n            </li>\r\n          </ul>\r\n          <button @click=\"navigateToAddChocolate\" class=\"btn btn-outline-primary\">Add Chocolate</button>\r\n\r\n          <h4>Workers in this Factory</h4>\r\n          <ul>\r\n            <li v-for=\"worker in workers\" :key=\"worker.id\">\r\n              {{ worker.firstName }} {{ worker.lastName }} - {{ worker.role }}\r\n            </li>\r\n          </ul>\r\n          <button @click=\"navigateToAddWorker\" class=\"btn btn-outline-primary\">Add Worker</button>\r\n        </div>\r\n\r\n        <!-- Forma za pretragu -->\r\n        <div class=\"search-filters\">\r\n          <h3>Search Purchases</h3>\r\n          <form @submit.prevent=\"applyFilters\">\r\n            <div>\r\n              <label for=\"minPrice\">Min Price:</label>\r\n              <input v-model.number=\"filters.minPrice\" id=\"minPrice\" type=\"number\" step=\"0.01\" placeholder=\"Min Price\" class=\"form-control\">\r\n            </div>\r\n            <div>\r\n              <label for=\"maxPrice\">Max Price:</label>\r\n              <input v-model.number=\"filters.maxPrice\" id=\"maxPrice\" type=\"number\" step=\"0.01\" placeholder=\"Max Price\" class=\"form-control\">\r\n            </div>\r\n            <div>\r\n              <label for=\"startDate\">Start Date:</label>\r\n              <input v-model=\"filters.startDate\" id=\"startDate\" type=\"date\" class=\"form-control\">\r\n            </div>\r\n            <div>\r\n              <label for=\"endDate\">End Date:</label>\r\n              <input v-model=\"filters.endDate\" id=\"endDate\" type=\"date\" class=\"form-control\">\r\n            </div>\r\n            <button type=\"submit\" class=\"btn btn-primary w-100 mt-3\">Apply Filters</button>\r\n          </form>\r\n        </div>\r\n\r\n        <!-- Sortiranje -->\r\n        <div class=\"sort-options\">\r\n          <h3>Sort Purchases</h3>\r\n          <button @click=\"sortPurchases('price')\" class=\"btn btn-outline-primary\">Sort by Price</button>\r\n          <button @click=\"sortPurchases('date')\" class=\"btn btn-outline-primary\">Sort by Date</button>\r\n        </div>\r\n\r\n        <!-- Tabela kupovina -->\r\n        <div class=\"purchases\" v-if=\"filteredPurchases.length\">\r\n          <h3>Purchases from This Factory</h3>\r\n          <table class=\"table\">\r\n            <thead>\r\n              <tr>\r\n                <th> Order ID</th>\r\n                <th>Customer</th>\r\n                <th>Date & Time</th>\r\n                <th>Total Amount</th>\r\n                <th>Status</th>\r\n                <th>Items</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              <tr v-for=\"purchase in filteredPurchases\" :key=\"purchase.id\">\r\n                <td>{{ purchase.id }}</td>\r\n                <td>{{ purchase.customerName }}</td>\r\n                <td>{{ formatDate(purchase.purchaseDateTime) }}</td>\r\n                <td>{{ purchase.price.toFixed(2) }}</td>\r\n                <td>{{ purchase.status }}</td>\r\n                <td>\r\n                  <ul>\r\n                    <li v-for=\"item in purchase.chocolates\" :key=\"item.id\">{{ item.name }} </li>\r\n                  </ul>\r\n                </td>\r\n              </tr>\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n\r\n        <div class=\"customers\" v-if=\"customers.length\">\r\n          <h3>Customers Who Bought from This Factory</h3>\r\n          <ul>\r\n            <li v-for=\"customer in customers\" :key=\"customer.id\">\r\n              {{ customer.firstName }} {{ customer.lastName }} - {{ customer.email }}\r\n            </li>\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from 'axios';\r\nimport { ref, computed, onMounted } from 'vue';\r\nimport { useRouter } from 'vue-router';\r\n\r\nexport default {\r\n  setup() {\r\n    const manager = ref(null);\r\n    const factory = ref(null);\r\n    const purchases = ref([]);\r\n    const customers = ref([]);\r\n    const workers = ref([]);\r\n    const router = useRouter();\r\n\r\n    const filters = ref({\r\n      minPrice: null,\r\n      maxPrice: null,\r\n      startDate: null,\r\n      endDate: null,\r\n    });\r\n\r\n    const sortOption = ref(null);\r\n\r\n    const fetchManagerData = async () => {\r\n      try {\r\n        const response = await axios.get('http://localhost:8080/WebShopAppREST/rest/currentUser', {\r\n          withCredentials: true,\r\n        });\r\n        manager.value = response.data;\r\n\r\n        const factoryResponse = await axios.get(`http://localhost:8080/WebShopAppREST/rest/chocolateFactoryObjects/${manager.value.factoryId}`, {\r\n          withCredentials: true,\r\n        });\r\n        factory.value = factoryResponse.data;\r\n\r\n        const purchasesResponse = await axios.get(`http://localhost:8080/WebShopAppREST/rest/purchases/factory/${manager.value.factoryId}`, {\r\n          withCredentials: true,\r\n        });\r\n        purchases.value = purchasesResponse.data;\r\n\r\n        const customersResponse = await axios.get(`http://localhost:8080/WebShopAppREST/rest/users/customers/factory/${manager.value.factoryId}`, {\r\n          withCredentials: true,\r\n        });\r\n        customers.value = customersResponse.data;\r\n\r\n        const workersResponse = await axios.get(`http://localhost:8080/WebShopAppREST/rest/users/workers/factory/${manager.value.factoryId}`, {\r\n          withCredentials: true,\r\n        });\r\n        workers.value = workersResponse.data;\r\n\r\n      } catch (error) {\r\n        console.error('Error fetching manager data:', error);\r\n      }\r\n    };\r\n\r\n    const formatDate = (dateTime) => {\r\n      const date = new Date(dateTime);\r\n      return `${date.toLocaleDateString()} ${date.toLocaleTimeString()}`;\r\n    };\r\n\r\n    const filteredPurchases = computed(() => {\r\n      return purchases.value.filter(purchase => {\r\n        const matchesPrice = (!filters.value.minPrice || purchase.price >= filters.value.minPrice) &&\r\n                             (!filters.value.maxPrice || purchase.price <= filters.value.maxPrice);\r\n        const matchesDate = (!filters.value.startDate || new Date(purchase.purchaseDateTime) >= new Date(filters.value.startDate)) &&\r\n                            (!filters.value.endDate || new Date(purchase.purchaseDateTime) <= new Date(filters.value.endDate));\r\n        return matchesPrice && matchesDate;\r\n      });\r\n    });\r\n\r\n    const sortPurchases = (sortBy) => {\r\n      sortOption.value = sortBy;\r\n      filteredPurchases.value.sort((a, b) => {\r\n        if (sortBy === 'price') {\r\n          return a.price - b.price;\r\n        } else if (sortBy === 'date') {\r\n          return new Date(a.purchaseDateTime) - new Date(b.purchaseDateTime);\r\n        }\r\n        return 0;\r\n      });\r\n    };\r\n\r\n    const applyFilters = () => {\r\n      if (sortOption.value) {\r\n        sortPurchases(sortOption.value);\r\n      }\r\n    };\r\n\r\n    const navigateToAddWorker = () => {\r\n      router.push('/addworker');\r\n    };\r\n\r\n    const navigateToAddChocolate = () => {\r\n      router.push('/addchocolate');\r\n    };\r\n\r\n    onMounted(() => {\r\n      fetchManagerData();\r\n    });\r\n\r\n    return {\r\n      manager,\r\n      factory,\r\n      purchases,\r\n      customers,\r\n      workers,\r\n      filters,\r\n      filteredPurchases,\r\n      formatDate,\r\n      sortPurchases,\r\n      applyFilters,\r\n      navigateToAddWorker,\r\n      navigateToAddChocolate,\r\n    };\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.d-flex {\r\n  min-height: 100vh;\r\n}\r\n\r\n.card {\r\n  border: 1px solid #ddd;\r\n  border-radius: 8px;\r\n  padding: 30px;\r\n  background-color: #f0f8ff;\r\n  box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);\r\n}\r\n\r\nh2 {\r\n  color: #343a40;\r\n  text-align: center;\r\n  font-size: 2rem;\r\n  font-weight: normal;\r\n}\r\n\r\n.form-label {\r\n  font-weight: normal;\r\n}\r\n\r\ninput[type=\"text\"],\r\nselect,\r\nbutton {\r\n  border: 1px solid #007bff;\r\n  border-radius: 8px;\r\n  font-size: 1.1rem;\r\n  transition: border-color 0.3s ease, box-shadow 0.3s ease;\r\n}\r\n\r\ninput[type=\"text\"]:focus,\r\nselect:focus {\r\n  border-color: #007bff;\r\n  box-shadow: 0 0 5px rgba(0, 123, 255, 0.25);\r\n}\r\n\r\nbutton[type=\"submit\"],\r\n.btn-outline-primary {\r\n  border: 1px solid #007bff;\r\n  background-color: transparent;\r\n  color: #007bff;\r\n  font-size: 1.1rem;\r\n  transition: background-color 0.3s ease, color 0.3s ease;\r\n}\r\n\r\nbutton[type=\"submit\"]:hover,\r\n.btn-outline-primary:hover {\r\n  background-color: #007bff;\r\n  color: white;\r\n}\r\n\r\nbutton[type=\"submit\"] {\r\n  margin-top: 20px;\r\n}\r\n\r\n.text-danger {\r\n  margin-top: 15px;\r\n}\r\n\r\n.text-success {\r\n  margin-top: 15px;\r\n}\r\n\r\n.manager-view {\r\n  display: flex;\r\n  gap: 20px;\r\n  padding: 20px;\r\n  max-width: 100%;\r\n  margin: 0 auto;\r\n}\r\n\r\n.factory-info,\r\n.factory-chocolates,\r\n.factory-comments {\r\n  border: 1px solid #ddd;\r\n  border-radius: 8px;\r\n  padding: 30px;\r\n  background-color: #f0f8ff;\r\n  box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);\r\n  flex: 1;\r\n}\r\n\r\n.factory-info {\r\n  max-width: 500px;\r\n}\r\n\r\n.map-container {\r\n  width: 100%;\r\n  height: 300px;\r\n  margin-top: 20px;\r\n  border-radius: 8px;\r\n}\r\n\r\n.factory-logo {\r\n  max-width: 100%;\r\n  height: auto;\r\n  margin-bottom: 10px;\r\n  border-radius: 8px;\r\n}\r\n\r\ntable {\r\n  width: 100%;\r\n  border-collapse: collapse;\r\n  margin-bottom: 20px;\r\n}\r\n\r\nth, td {\r\n  border: 1px solid #ddd;\r\n  padding: 8px;\r\n  text-align: left;\r\n}\r\n\r\nth {\r\n  background-color: #f5e7f5;\r\n  font-weight: bold;\r\n}\r\n</style>\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}