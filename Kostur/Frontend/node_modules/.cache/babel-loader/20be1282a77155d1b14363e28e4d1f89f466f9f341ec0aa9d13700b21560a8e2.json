{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport axios from 'axios';\nimport { useRouter, useRoute } from 'vue-router';\nexport default {\n  data() {\n    return {\n      newWorker: {\n        firstName: '',\n        lastName: '',\n        username: '',\n        password: '',\n        gender: 'MALE',\n        birthDate: '',\n        role: 'WORKER',\n        customerType: 'NO_TYPE',\n        earnedPoints: 0,\n        shoppingCart: null,\n        blocked: false,\n        factoryId: null\n      },\n      errorMessage: '',\n      successMessage: ''\n    };\n  },\n  async created() {\n    const route = useRoute();\n    const router = useRouter();\n    try {\n      const response = await axios.get('http://localhost:8080/WebShopAppREST/rest/currentUser', {\n        withCredentials: true\n      });\n      const currentUser = response.data;\n      if (currentUser.role !== 'MANAGER') {\n        router.push('/unauthorized'); // Preusmeravanje ako nije menadžer\n      } else {\n        this.newWorker.factoryId = route.params.factoryId;\n        console.log('Factory ID:', this.newWorker.factoryId);\n      }\n    } catch (error) {\n      console.error('Error fetching current user:', error);\n      router.push('/login'); // Preusmeravanje ako nije ulogovan\n    }\n  },\n  methods: {\n    async createWorker() {\n      try {\n        const response = await axios.post('http://localhost:8080/WebShopAppREST/rest/users/createuser', this.newWorker);\n        this.successMessage = 'Worker created successfully!';\n        this.errorMessage = '';\n        this.clearForm();\n      } catch (error) {\n        this.successMessage = '';\n        if (error.response && error.response.data && error.response.data.message) {\n          this.errorMessage = error.response.data.message;\n        } else {\n          this.errorMessage = 'Failed to create worker.';\n        }\n      }\n    },\n    clearForm() {\n      const route = useRoute();\n      this.newWorker = {\n        firstName: '',\n        lastName: '',\n        username: '',\n        password: '',\n        gender: 'MALE',\n        birthDate: '',\n        role: 'WORKER',\n        customerType: 'NO_TYPE',\n        earnedPoints: 0,\n        shoppingCart: null,\n        blocked: false,\n        factoryId: route.params.factoryId\n      };\n    }\n  }\n};","map":{"version":3,"names":["axios","useRouter","useRoute","data","newWorker","firstName","lastName","username","password","gender","birthDate","role","customerType","earnedPoints","shoppingCart","blocked","factoryId","errorMessage","successMessage","created","route","router","response","get","withCredentials","currentUser","push","params","console","log","error","methods","createWorker","post","clearForm","message"],"sources":["C:\\Users\\PC\\eclipse-workspace\\apache-tomcat-9.0.89\\apache-tomcat-9.0.89\\webapps\\chocolate-factory-2\\Kostur\\Frontend\\front-app\\src\\views\\AddWorker.vue"],"sourcesContent":["<template>\r\n  <div class=\"add-worker\">\r\n    <h2>Add New Worker</h2>\r\n    <form @submit.prevent=\"createWorker\">\r\n      <div class=\"form-group\">\r\n        <label for=\"firstName\">First Name:</label>\r\n        <input type=\"text\" id=\"firstName\" v-model=\"newWorker.firstName\" required><br>\r\n\r\n        <label for=\"lastName\">Last Name:</label>\r\n        <input type=\"text\" id=\"lastName\" v-model=\"newWorker.lastName\" required><br>\r\n\r\n        <label for=\"username\">Username:</label>\r\n        <input type=\"text\" id=\"username\" v-model=\"newWorker.username\" required><br>\r\n\r\n        <label for=\"password\">Password:</label>\r\n        <input type=\"password\" id=\"password\" v-model=\"newWorker.password\" required><br>\r\n\r\n        <label>Gender:</label>\r\n        <select v-model=\"newWorker.gender\" required>\r\n          <option value=\"MALE\">MALE</option>\r\n          <option value=\"FEMALE\">FEMALE</option>\r\n        </select><br>\r\n\r\n        <label for=\"birthDate\">Birth Date:</label>\r\n        <input type=\"date\" id=\"birthDate\" v-model=\"newWorker.birthDate\" required><br>\r\n\r\n        <label>Role:</label>\r\n        <select v-model=\"newWorker.role\" required>\r\n          <option value=\"WORKER\">WORKER</option>\r\n        </select><br>\r\n\r\n        <label>Customer Type:</label>\r\n        <select v-model=\"newWorker.customerType\" required>\r\n          <option value=\"NO_TYPE\">NO_TYPE</option>\r\n          <option value=\"BRONZE\">BRONZE</option>\r\n          <option value=\"SILVER\">SILVER</option>\r\n          <option value=\"GOLD\">GOLD</option>\r\n        </select><br>\r\n\r\n        <label for=\"earnedPoints\">Earned Points:</label>\r\n        <input type=\"number\" id=\"earnedPoints\" v-model=\"newWorker.earnedPoints\" required><br>\r\n\r\n        <button type=\"submit\">Create Worker</button>\r\n      </div>\r\n    </form>\r\n    <p v-if=\"errorMessage\" style=\"color: red;\">{{ errorMessage }}</p>\r\n    <p v-if=\"successMessage\" style=\"color: green;\">{{ successMessage }}</p>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from 'axios';\r\nimport { useRouter, useRoute } from 'vue-router';\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      newWorker: {\r\n        firstName: '',\r\n        lastName: '',\r\n        username: '',\r\n        password: '',\r\n        gender: 'MALE',\r\n        birthDate: '',\r\n        role: 'WORKER',\r\n        customerType: 'NO_TYPE',\r\n        earnedPoints: 0,\r\n        shoppingCart: null,\r\n        blocked: false,\r\n        factoryId: null \r\n      },\r\n      errorMessage: '',\r\n      successMessage: ''\r\n    };\r\n  },\r\n  async created() {\r\n    const route = useRoute();\r\n    const router = useRouter();\r\n    try {\r\n      const response = await axios.get('http://localhost:8080/WebShopAppREST/rest/currentUser', { withCredentials: true });\r\n      const currentUser = response.data;\r\n\r\n      if (currentUser.role !== 'MANAGER') {\r\n        router.push('/unauthorized'); // Preusmeravanje ako nije menadžer\r\n      } else {\r\n        this.newWorker.factoryId = route.params.factoryId;\r\n        console.log('Factory ID:', this.newWorker.factoryId);\r\n      }\r\n    } catch (error) {\r\n      console.error('Error fetching current user:', error);\r\n      router.push('/login'); // Preusmeravanje ako nije ulogovan\r\n    }\r\n  },\r\n  methods: {\r\n    async createWorker() {\r\n      try {\r\n        const response = await axios.post('http://localhost:8080/WebShopAppREST/rest/users/createuser', this.newWorker);\r\n        this.successMessage = 'Worker created successfully!';\r\n        this.errorMessage = '';\r\n        \r\n        this.clearForm();\r\n      } catch (error) {\r\n        this.successMessage = '';\r\n        if (error.response && error.response.data && error.response.data.message) {\r\n          this.errorMessage = error.response.data.message;\r\n        } else {\r\n          this.errorMessage = 'Failed to create worker.';\r\n        }\r\n      }\r\n    },\r\n    clearForm() {\r\n      const route = useRoute();\r\n      this.newWorker = {\r\n        firstName: '',\r\n        lastName: '',\r\n        username: '',\r\n        password: '',\r\n        gender: 'MALE',\r\n        birthDate: '',\r\n        role: 'WORKER',\r\n        customerType: 'NO_TYPE',\r\n        earnedPoints: 0,\r\n        shoppingCart: null,\r\n        blocked: false,\r\n        factoryId: route.params.factoryId \r\n      };\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.add-worker {\r\n  max-width: 600px;\r\n  margin: 20px auto;\r\n  padding: 20px;\r\n  border: 1px solid #ccc;\r\n  border-radius: 8px;\r\n}\r\n\r\n.form-group {\r\n  margin-bottom: 15px;\r\n}\r\n\r\nlabel {\r\n  display: block;\r\n  margin-bottom: 5px;\r\n}\r\n\r\ninput[type=\"text\"], input[type=\"password\"], input[type=\"date\"], input[type=\"number\"], select {\r\n  width: 100%;\r\n  padding: 8px;\r\n  font-size: 16px;\r\n}\r\n\r\nbutton {\r\n  padding: 10px 20px;\r\n  background-color: #f5e7f5;\r\n  color: #fff;\r\n  border: none;\r\n  cursor: pointer;\r\n  font-size: 16px;\r\n  border-radius: 4px;\r\n}\r\n\r\nbutton:hover {\r\n  background-color: #e0cbe0;\r\n}\r\n</style>\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}