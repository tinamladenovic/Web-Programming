{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { ref, onMounted, computed } from 'vue';\nimport axios from 'axios';\nimport { useRouter } from 'vue-router';\nexport default {\n  __name: 'AllChocolateFactories',\n  setup(__props, {\n    expose: __expose\n  }) {\n    __expose();\n    const router = useRouter();\n    const factories = ref([]);\n    const searchName = ref('');\n    const searchChocolate = ref('');\n    const searchLocation = ref('');\n    const searchRating = ref('');\n    const searchChocolateType = ref('');\n    const searchChocolateKind = ref('');\n    const openFactoriesOnly = ref(false);\n    const chocolateTypes = ['PLAIN', 'FOR_COOKING', 'FOR_DRINKING'];\n    const chocolateKinds = ['DARK', 'MILK', 'WHITE'];\n    async function loadFactories() {\n      try {\n        const response = await axios.get('http://localhost:8080/WebShopAppREST/rest/chocolateFactoryObjects');\n        factories.value = response.data;\n        console.log(\"Loaded factories:\", factories.value); // Debug log\n      } catch (error) {\n        console.error(\"Error loading factories:\", error);\n      }\n    }\n    onMounted(() => {\n      loadFactories();\n    });\n    const isFactoryOpen = factory => {\n      return factory.status === 'OPEN';\n    };\n    const sortedFactories = computed(() => {\n      return factories.value.sort((a, b) => {\n        const aValue = a.name.toLowerCase();\n        const bValue = b.name.toLowerCase();\n        return aValue.localeCompare(bValue); // Default sorting by name\n      });\n    });\n    const filteredFactories = computed(() => {\n      return sortedFactories.value.filter(factory => {\n        const matchesName = factory.name.toLowerCase().includes(searchName.value.toLowerCase());\n        const matchesChocolate = searchChocolate.value === '' || factory.chocolates.some(chocolate => chocolate.name.toLowerCase().includes(searchChocolate.value.toLowerCase()));\n        const matchesLocation = factory.location.address.toLowerCase().includes(searchLocation.value.toLowerCase());\n        const matchesRating = searchRating.value === '' || factory.rating.toFixed(1) === parseFloat(searchRating.value).toFixed(1); // Adjusted for exact match\n        const matchesChocolateType = !searchChocolateType.value || factory.chocolates.some(chocolate => chocolate.type === searchChocolateType.value);\n        const matchesChocolateKind = !searchChocolateKind.value || factory.chocolates.some(chocolate => chocolate.kind === searchChocolateKind.value);\n        const isOpenFactory = !openFactoriesOnly.value || isFactoryOpen(factory);\n        return matchesName && matchesChocolate && matchesLocation && matchesRating && matchesChocolateType && matchesChocolateKind && isOpenFactory;\n      });\n    });\n    const getFactoryLogo = logoFileName => {\n      return `/images/${logoFileName}`;\n    };\n    const viewFactoryProfile = factoryId => {\n      router.push({\n        name: 'factoryprofile',\n        params: {\n          id: factoryId\n        }\n      });\n    };\n    const filterFactories = () => {\n      // No need for explicit return here, computed property `filteredFactories` will handle it\n      console.log(\"Search Parameters:\");\n      console.log(\"Chocolate Name:\", searchChocolate.value);\n      console.log(\"Factory Name:\", searchName.value);\n      console.log(\"Location:\", searchLocation.value);\n      console.log(\"Rating:\", searchRating.value);\n      console.log(\"Chocolate Type:\", searchChocolateType.value);\n      console.log(\"Chocolate Kind:\", searchChocolateKind.value);\n      console.log(\"Show Only Open Factories:\", openFactoriesOnly.value);\n    };\n    const sortBy = key => {\n      sortKey.value = key;\n      sortOrders.value[key] = sortOrders.value[key] * -1;\n      filteredFactories.value.sort((a, b) => {\n        const modifier = sortOrders.value[key];\n        if (key === 'name' || key === 'location') {\n          const aValue = key === 'location' ? a.location.address.toLowerCase() : a[key].toLowerCase();\n          const bValue = key === 'location' ? b.location.address.toLowerCase() : b[key].toLowerCase();\n          return modifier * aValue.localeCompare(bValue);\n        } else {\n          return modifier * (a[key] - b[key]);\n        }\n      });\n    };\n    const __returned__ = {\n      router,\n      factories,\n      searchName,\n      searchChocolate,\n      searchLocation,\n      searchRating,\n      searchChocolateType,\n      searchChocolateKind,\n      openFactoriesOnly,\n      chocolateTypes,\n      chocolateKinds,\n      loadFactories,\n      isFactoryOpen,\n      sortedFactories,\n      filteredFactories,\n      getFactoryLogo,\n      viewFactoryProfile,\n      filterFactories,\n      sortBy,\n      ref,\n      onMounted,\n      computed,\n      get axios() {\n        return axios;\n      },\n      get useRouter() {\n        return useRouter;\n      }\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["ref","onMounted","computed","axios","useRouter","router","factories","searchName","searchChocolate","searchLocation","searchRating","searchChocolateType","searchChocolateKind","openFactoriesOnly","chocolateTypes","chocolateKinds","loadFactories","response","get","value","data","console","log","error","isFactoryOpen","factory","status","sortedFactories","sort","a","b","aValue","name","toLowerCase","bValue","localeCompare","filteredFactories","filter","matchesName","includes","matchesChocolate","chocolates","some","chocolate","matchesLocation","location","address","matchesRating","rating","toFixed","parseFloat","matchesChocolateType","type","matchesChocolateKind","kind","isOpenFactory","getFactoryLogo","logoFileName","viewFactoryProfile","factoryId","push","params","id","filterFactories","sortBy","key","sortKey","sortOrders","modifier"],"sources":["C:/Users/PC/eclipse-workspace/apache-tomcat-9.0.89/apache-tomcat-9.0.89/webapps/chocolate-factory-2/Kostur/Frontend/front-app/src/views/AllChocolateFactories.vue"],"sourcesContent":["<script setup>\r\nimport { ref, onMounted, computed } from 'vue';\r\nimport axios from 'axios';\r\nimport { useRouter } from 'vue-router';\r\n\r\nconst router = useRouter();\r\nconst factories = ref([]);\r\nconst searchName = ref('');\r\nconst searchChocolate = ref('');\r\nconst searchLocation = ref('');\r\nconst searchRating = ref('');\r\nconst searchChocolateType = ref('');\r\nconst searchChocolateKind = ref('');\r\nconst openFactoriesOnly = ref(false);\r\n\r\nconst chocolateTypes = ['PLAIN', 'FOR_COOKING', 'FOR_DRINKING'];\r\nconst chocolateKinds = ['DARK', 'MILK', 'WHITE'];\r\n\r\nasync function loadFactories() {\r\n  try {\r\n    const response = await axios.get('http://localhost:8080/WebShopAppREST/rest/chocolateFactoryObjects');\r\n    factories.value = response.data;\r\n    console.log(\"Loaded factories:\", factories.value);  // Debug log\r\n  } catch (error) {\r\n    console.error(\"Error loading factories:\", error);\r\n  }\r\n}\r\n\r\nonMounted(() => {\r\n  loadFactories();\r\n});\r\n\r\nconst isFactoryOpen = (factory) => {\r\n  return factory.status === 'OPEN';\r\n};\r\n\r\nconst sortedFactories = computed(() => {\r\n  return factories.value.sort((a, b) => {\r\n    const aValue = a.name.toLowerCase();\r\n    const bValue = b.name.toLowerCase();\r\n    return aValue.localeCompare(bValue); // Default sorting by name\r\n  });\r\n});\r\n\r\nconst filteredFactories = computed(() => {\r\n  return sortedFactories.value.filter(factory => {\r\n    const matchesName = factory.name.toLowerCase().includes(searchName.value.toLowerCase());\r\n    const matchesChocolate = searchChocolate.value === '' || factory.chocolates.some(chocolate => \r\n      chocolate.name.toLowerCase().includes(searchChocolate.value.toLowerCase())\r\n    );\r\n    const matchesLocation = factory.location.address.toLowerCase().includes(searchLocation.value.toLowerCase());\r\n    const matchesRating = searchRating.value === '' || factory.rating.toFixed(1) === parseFloat(searchRating.value).toFixed(1); // Adjusted for exact match\r\n    const matchesChocolateType = !searchChocolateType.value || factory.chocolates.some(chocolate =>\r\n      chocolate.type === searchChocolateType.value\r\n    );\r\n    const matchesChocolateKind = !searchChocolateKind.value || factory.chocolates.some(chocolate =>\r\n      chocolate.kind === searchChocolateKind.value\r\n    );\r\n    const isOpenFactory = !openFactoriesOnly.value || isFactoryOpen(factory);\r\n\r\n    return matchesName && matchesChocolate && matchesLocation && matchesRating && matchesChocolateType && matchesChocolateKind && isOpenFactory;\r\n  });\r\n});\r\n\r\nconst getFactoryLogo = (logoFileName) => {\r\n  return `/images/${logoFileName}`;\r\n};\r\n\r\nconst viewFactoryProfile = (factoryId) => {\r\n  router.push({ name: 'factoryprofile', params: { id: factoryId }});\r\n};\r\n\r\nconst filterFactories = () => {\r\n  // No need for explicit return here, computed property `filteredFactories` will handle it\r\n  console.log(\"Search Parameters:\");\r\n  console.log(\"Chocolate Name:\", searchChocolate.value);\r\n  console.log(\"Factory Name:\", searchName.value);\r\n  console.log(\"Location:\", searchLocation.value);\r\n  console.log(\"Rating:\", searchRating.value);\r\n  console.log(\"Chocolate Type:\", searchChocolateType.value);\r\n  console.log(\"Chocolate Kind:\", searchChocolateKind.value);\r\n  console.log(\"Show Only Open Factories:\", openFactoriesOnly.value);\r\n};\r\n\r\nconst sortBy = key => {\r\n  sortKey.value = key;\r\n  sortOrders.value[key] = sortOrders.value[key] * -1;\r\n  filteredFactories.value.sort((a, b) => {\r\n    const modifier = sortOrders.value[key];\r\n    if (key === 'name' || key === 'location') {\r\n      const aValue = key === 'location' ? a.location.address.toLowerCase() : a[key].toLowerCase();\r\n      const bValue = key === 'location' ? b.location.address.toLowerCase() : b[key].toLowerCase();\r\n      return modifier * aValue.localeCompare(bValue);\r\n    } else {\r\n      return modifier * (a[key] - b[key]);\r\n    }\r\n  });\r\n};\r\n\r\n</script>\r\n"],"mappings":";AACA,SAASA,GAAG,EAAEC,SAAS,EAAEC,QAAQ,QAAQ,KAAK;AAC9C,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,SAAS,QAAQ,YAAY;;;;;;;IAEtC,MAAMC,MAAM,GAAGD,SAAS,CAAC,CAAC;IAC1B,MAAME,SAAS,GAAGN,GAAG,CAAC,EAAE,CAAC;IACzB,MAAMO,UAAU,GAAGP,GAAG,CAAC,EAAE,CAAC;IAC1B,MAAMQ,eAAe,GAAGR,GAAG,CAAC,EAAE,CAAC;IAC/B,MAAMS,cAAc,GAAGT,GAAG,CAAC,EAAE,CAAC;IAC9B,MAAMU,YAAY,GAAGV,GAAG,CAAC,EAAE,CAAC;IAC5B,MAAMW,mBAAmB,GAAGX,GAAG,CAAC,EAAE,CAAC;IACnC,MAAMY,mBAAmB,GAAGZ,GAAG,CAAC,EAAE,CAAC;IACnC,MAAMa,iBAAiB,GAAGb,GAAG,CAAC,KAAK,CAAC;IAEpC,MAAMc,cAAc,GAAG,CAAC,OAAO,EAAE,aAAa,EAAE,cAAc,CAAC;IAC/D,MAAMC,cAAc,GAAG,CAAC,MAAM,EAAE,MAAM,EAAE,OAAO,CAAC;IAEhD,eAAeC,aAAaA,CAAA,EAAG;MAC7B,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMd,KAAK,CAACe,GAAG,CAAC,mEAAmE,CAAC;QACrGZ,SAAS,CAACa,KAAK,GAAGF,QAAQ,CAACG,IAAI;QAC/BC,OAAO,CAACC,GAAG,CAAC,mBAAmB,EAAEhB,SAAS,CAACa,KAAK,CAAC,CAAC,CAAE;MACtD,CAAC,CAAC,OAAOI,KAAK,EAAE;QACdF,OAAO,CAACE,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC;MAClD;IACF;IAEAtB,SAAS,CAAC,MAAM;MACde,aAAa,CAAC,CAAC;IACjB,CAAC,CAAC;IAEF,MAAMQ,aAAa,GAAIC,OAAO,IAAK;MACjC,OAAOA,OAAO,CAACC,MAAM,KAAK,MAAM;IAClC,CAAC;IAED,MAAMC,eAAe,GAAGzB,QAAQ,CAAC,MAAM;MACrC,OAAOI,SAAS,CAACa,KAAK,CAACS,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAK;QACpC,MAAMC,MAAM,GAAGF,CAAC,CAACG,IAAI,CAACC,WAAW,CAAC,CAAC;QACnC,MAAMC,MAAM,GAAGJ,CAAC,CAACE,IAAI,CAACC,WAAW,CAAC,CAAC;QACnC,OAAOF,MAAM,CAACI,aAAa,CAACD,MAAM,CAAC,CAAC,CAAC;MACvC,CAAC,CAAC;IACJ,CAAC,CAAC;IAEF,MAAME,iBAAiB,GAAGlC,QAAQ,CAAC,MAAM;MACvC,OAAOyB,eAAe,CAACR,KAAK,CAACkB,MAAM,CAACZ,OAAO,IAAI;QAC7C,MAAMa,WAAW,GAAGb,OAAO,CAACO,IAAI,CAACC,WAAW,CAAC,CAAC,CAACM,QAAQ,CAAChC,UAAU,CAACY,KAAK,CAACc,WAAW,CAAC,CAAC,CAAC;QACvF,MAAMO,gBAAgB,GAAGhC,eAAe,CAACW,KAAK,KAAK,EAAE,IAAIM,OAAO,CAACgB,UAAU,CAACC,IAAI,CAACC,SAAS,IACxFA,SAAS,CAACX,IAAI,CAACC,WAAW,CAAC,CAAC,CAACM,QAAQ,CAAC/B,eAAe,CAACW,KAAK,CAACc,WAAW,CAAC,CAAC,CAC3E,CAAC;QACD,MAAMW,eAAe,GAAGnB,OAAO,CAACoB,QAAQ,CAACC,OAAO,CAACb,WAAW,CAAC,CAAC,CAACM,QAAQ,CAAC9B,cAAc,CAACU,KAAK,CAACc,WAAW,CAAC,CAAC,CAAC;QAC3G,MAAMc,aAAa,GAAGrC,YAAY,CAACS,KAAK,KAAK,EAAE,IAAIM,OAAO,CAACuB,MAAM,CAACC,OAAO,CAAC,CAAC,CAAC,KAAKC,UAAU,CAACxC,YAAY,CAACS,KAAK,CAAC,CAAC8B,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC;QAC5H,MAAME,oBAAoB,GAAG,CAACxC,mBAAmB,CAACQ,KAAK,IAAIM,OAAO,CAACgB,UAAU,CAACC,IAAI,CAACC,SAAS,IAC1FA,SAAS,CAACS,IAAI,KAAKzC,mBAAmB,CAACQ,KACzC,CAAC;QACD,MAAMkC,oBAAoB,GAAG,CAACzC,mBAAmB,CAACO,KAAK,IAAIM,OAAO,CAACgB,UAAU,CAACC,IAAI,CAACC,SAAS,IAC1FA,SAAS,CAACW,IAAI,KAAK1C,mBAAmB,CAACO,KACzC,CAAC;QACD,MAAMoC,aAAa,GAAG,CAAC1C,iBAAiB,CAACM,KAAK,IAAIK,aAAa,CAACC,OAAO,CAAC;QAExE,OAAOa,WAAW,IAAIE,gBAAgB,IAAII,eAAe,IAAIG,aAAa,IAAII,oBAAoB,IAAIE,oBAAoB,IAAIE,aAAa;MAC7I,CAAC,CAAC;IACJ,CAAC,CAAC;IAEF,MAAMC,cAAc,GAAIC,YAAY,IAAK;MACvC,OAAQ,WAAUA,YAAa,EAAC;IAClC,CAAC;IAED,MAAMC,kBAAkB,GAAIC,SAAS,IAAK;MACxCtD,MAAM,CAACuD,IAAI,CAAC;QAAE5B,IAAI,EAAE,gBAAgB;QAAE6B,MAAM,EAAE;UAAEC,EAAE,EAAEH;QAAU;MAAC,CAAC,CAAC;IACnE,CAAC;IAED,MAAMI,eAAe,GAAGA,CAAA,KAAM;MAC5B;MACA1C,OAAO,CAACC,GAAG,CAAC,oBAAoB,CAAC;MACjCD,OAAO,CAACC,GAAG,CAAC,iBAAiB,EAAEd,eAAe,CAACW,KAAK,CAAC;MACrDE,OAAO,CAACC,GAAG,CAAC,eAAe,EAAEf,UAAU,CAACY,KAAK,CAAC;MAC9CE,OAAO,CAACC,GAAG,CAAC,WAAW,EAAEb,cAAc,CAACU,KAAK,CAAC;MAC9CE,OAAO,CAACC,GAAG,CAAC,SAAS,EAAEZ,YAAY,CAACS,KAAK,CAAC;MAC1CE,OAAO,CAACC,GAAG,CAAC,iBAAiB,EAAEX,mBAAmB,CAACQ,KAAK,CAAC;MACzDE,OAAO,CAACC,GAAG,CAAC,iBAAiB,EAAEV,mBAAmB,CAACO,KAAK,CAAC;MACzDE,OAAO,CAACC,GAAG,CAAC,2BAA2B,EAAET,iBAAiB,CAACM,KAAK,CAAC;IACnE,CAAC;IAED,MAAM6C,MAAM,GAAGC,GAAG,IAAI;MACpBC,OAAO,CAAC/C,KAAK,GAAG8C,GAAG;MACnBE,UAAU,CAAChD,KAAK,CAAC8C,GAAG,CAAC,GAAGE,UAAU,CAAChD,KAAK,CAAC8C,GAAG,CAAC,GAAG,CAAC,CAAC;MAClD7B,iBAAiB,CAACjB,KAAK,CAACS,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAK;QACrC,MAAMsC,QAAQ,GAAGD,UAAU,CAAChD,KAAK,CAAC8C,GAAG,CAAC;QACtC,IAAIA,GAAG,KAAK,MAAM,IAAIA,GAAG,KAAK,UAAU,EAAE;UACxC,MAAMlC,MAAM,GAAGkC,GAAG,KAAK,UAAU,GAAGpC,CAAC,CAACgB,QAAQ,CAACC,OAAO,CAACb,WAAW,CAAC,CAAC,GAAGJ,CAAC,CAACoC,GAAG,CAAC,CAAChC,WAAW,CAAC,CAAC;UAC3F,MAAMC,MAAM,GAAG+B,GAAG,KAAK,UAAU,GAAGnC,CAAC,CAACe,QAAQ,CAACC,OAAO,CAACb,WAAW,CAAC,CAAC,GAAGH,CAAC,CAACmC,GAAG,CAAC,CAAChC,WAAW,CAAC,CAAC;UAC3F,OAAOmC,QAAQ,GAAGrC,MAAM,CAACI,aAAa,CAACD,MAAM,CAAC;QAChD,CAAC,MAAM;UACL,OAAOkC,QAAQ,IAAIvC,CAAC,CAACoC,GAAG,CAAC,GAAGnC,CAAC,CAACmC,GAAG,CAAC,CAAC;QACrC;MACF,CAAC,CAAC;IACJ,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}