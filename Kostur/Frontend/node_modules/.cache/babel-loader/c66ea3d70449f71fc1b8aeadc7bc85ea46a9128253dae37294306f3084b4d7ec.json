{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nexport default {\n  data() {\n    return {\n      username: '',\n      password: '',\n      confirmPassword: '',\n      firstName: '',\n      lastName: '',\n      gender: '',\n      birthDate: '',\n      errorMessage: ''\n    };\n  },\n  methods: {\n    async handleRegister() {\n      if (this.password !== this.confirmPassword) {\n        this.errorMessage = 'Passwords do not match';\n        return;\n      }\n      try {\n        const formData = new FormData();\n        formData.append('username', this.username);\n        formData.append('password', this.password);\n        formData.append('firstName', this.firstName);\n        formData.append('lastName', this.lastName);\n        formData.append('gender', this.gender);\n        formData.append('birthDate', this.birthDate);\n        const response = await fetch('http://localhost:8080/WebShopAppREST/rest/register', {\n          method: 'POST',\n          body: formData\n        });\n        if (response.ok) {\n          // Handle successful registration\n          console.log('Registration successful');\n          // Redirect to login page or set user state\n          this.$router.push('/login');\n        } else {\n          // Handle errors\n          this.errorMessage = 'Registration failed';\n        }\n      } catch (error) {\n        console.error('Error registering:', error);\n        this.errorMessage = 'An error occurred. Please try again.';\n      }\n    }\n  }\n};","map":{"version":3,"names":["data","username","password","confirmPassword","firstName","lastName","gender","birthDate","errorMessage","methods","handleRegister","formData","FormData","append","response","fetch","method","body","ok","console","log","$router","push","error"],"sources":["C:\\Users\\PC\\eclipse-workspace\\apache-tomcat-9.0.89\\apache-tomcat-9.0.89\\webapps\\chocolate-factory-2\\Kostur\\Frontend\\front-app\\src\\views\\Register.vue"],"sourcesContent":["<template>\r\n  <div class=\"registration-container\">\r\n    <h2>Register</h2>\r\n    <form @submit.prevent=\"handleRegister\">\r\n      <div class=\"form-group\">\r\n        <label for=\"username\">Username</label>\r\n        <input type=\"text\" id=\"username\" v-model=\"username\" required>\r\n      </div>\r\n      <div class=\"form-group\">\r\n        <label for=\"password\">Password</label>\r\n        <input type=\"password\" id=\"password\" v-model=\"password\" required>\r\n      </div>\r\n      <div class=\"form-group\">\r\n        <label for=\"confirmPassword\">Confirm Password</label>\r\n        <input type=\"password\" id=\"confirmPassword\" v-model=\"confirmPassword\" required>\r\n      </div>\r\n      <div class=\"form-group\">\r\n        <label for=\"firstName\">First Name</label>\r\n        <input type=\"text\" id=\"firstName\" v-model=\"firstName\" required>\r\n      </div>\r\n      <div class=\"form-group\">\r\n        <label for=\"lastName\">Last Name</label>\r\n        <input type=\"text\" id=\"lastName\" v-model=\"lastName\" required>\r\n      </div>\r\n      <div class=\"form-group\">\r\n        <label for=\"gender\">Gender</label>\r\n        <select id=\"gender\" v-model=\"gender\" required>\r\n          <option value=\"\">Select Gender</option>\r\n          <option value=\"MALE\">Male</option>\r\n          <option value=\"FEMALE\">Female</option>\r\n          <option value=\"OTHER\">Other</option>\r\n        </select>\r\n      </div>\r\n      <div class=\"form-group\">\r\n        <label for=\"birthDate\">Date of Birth</label>\r\n        <input type=\"date\" id=\"birthDate\" v-model=\"birthDate\" required>\r\n      </div>\r\n      <button type=\"submit\">Register</button>\r\n    </form>\r\n    <p v-if=\"errorMessage\" class=\"error\">{{ errorMessage }}</p>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  data() {\r\n    return {\r\n      username: '',\r\n      password: '',\r\n      confirmPassword: '',\r\n      firstName: '',\r\n      lastName: '',\r\n      gender: '',\r\n      birthDate: '',\r\n      errorMessage: ''\r\n    };\r\n  },\r\n  methods: {\r\n    async handleRegister() {\r\n      if (this.password !== this.confirmPassword) {\r\n        this.errorMessage = 'Passwords do not match';\r\n        return;\r\n      }\r\n\r\n      try {\r\n        const formData = new FormData();\r\n        formData.append('username', this.username);\r\n        formData.append('password', this.password);\r\n        formData.append('firstName', this.firstName);\r\n        formData.append('lastName', this.lastName);\r\n        formData.append('gender', this.gender);\r\n        formData.append('birthDate', this.birthDate);\r\n\r\n        const response = await fetch('http://localhost:8080/WebShopAppREST/rest/register', {\r\n          method: 'POST',\r\n          body: formData\r\n        });\r\n\r\n        if (response.ok) {\r\n          // Handle successful registration\r\n          console.log('Registration successful');\r\n          // Redirect to login page or set user state\r\n          this.$router.push('/login');\r\n        } else {\r\n          // Handle errors\r\n          this.errorMessage = 'Registration failed';\r\n        }\r\n      } catch (error) {\r\n        console.error('Error registering:', error);\r\n        this.errorMessage = 'An error occurred. Please try again.';\r\n      }\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.registration-container {\r\n  max-width: 400px;\r\n  margin: 0 auto;\r\n  padding: 20px;\r\n  border: 1px solid #ccc;\r\n  border-radius: 10px;\r\n}\r\n\r\n.form-group {\r\n  margin-bottom: 15px;\r\n}\r\n\r\nlabel {\r\n  display: block;\r\n  margin-bottom: 5px;\r\n}\r\n\r\ninput, select {\r\n  width: 100%;\r\n  padding: 8px;\r\n  box-sizing: border-box;\r\n}\r\n\r\nbutton {\r\n  width: 100%;\r\n  padding: 10px;\r\n  background-color: #007bff;\r\n  color: white;\r\n  border: none;\r\n  border-radius: 5px;\r\n  cursor: pointer;\r\n}\r\n\r\nbutton:hover {\r\n  background-color: #0056b3;\r\n}\r\n\r\n.error {\r\n  color: red;\r\n  margin-top: 10px;\r\n}\r\n</style>\r\n"],"mappings":";AA4CA,eAAe;EACbA,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,QAAQ,EAAE,EAAE;MACZC,QAAQ,EAAE,EAAE;MACZC,eAAe,EAAE,EAAE;MACnBC,SAAS,EAAE,EAAE;MACbC,QAAQ,EAAE,EAAE;MACZC,MAAM,EAAE,EAAE;MACVC,SAAS,EAAE,EAAE;MACbC,YAAY,EAAE;IAChB,CAAC;EACH,CAAC;EACDC,OAAO,EAAE;IACP,MAAMC,cAAcA,CAAA,EAAG;MACrB,IAAI,IAAI,CAACR,QAAO,KAAM,IAAI,CAACC,eAAe,EAAE;QAC1C,IAAI,CAACK,YAAW,GAAI,wBAAwB;QAC5C;MACF;MAEA,IAAI;QACF,MAAMG,QAAO,GAAI,IAAIC,QAAQ,CAAC,CAAC;QAC/BD,QAAQ,CAACE,MAAM,CAAC,UAAU,EAAE,IAAI,CAACZ,QAAQ,CAAC;QAC1CU,QAAQ,CAACE,MAAM,CAAC,UAAU,EAAE,IAAI,CAACX,QAAQ,CAAC;QAC1CS,QAAQ,CAACE,MAAM,CAAC,WAAW,EAAE,IAAI,CAACT,SAAS,CAAC;QAC5CO,QAAQ,CAACE,MAAM,CAAC,UAAU,EAAE,IAAI,CAACR,QAAQ,CAAC;QAC1CM,QAAQ,CAACE,MAAM,CAAC,QAAQ,EAAE,IAAI,CAACP,MAAM,CAAC;QACtCK,QAAQ,CAACE,MAAM,CAAC,WAAW,EAAE,IAAI,CAACN,SAAS,CAAC;QAE5C,MAAMO,QAAO,GAAI,MAAMC,KAAK,CAAC,oDAAoD,EAAE;UACjFC,MAAM,EAAE,MAAM;UACdC,IAAI,EAAEN;QACR,CAAC,CAAC;QAEF,IAAIG,QAAQ,CAACI,EAAE,EAAE;UACf;UACAC,OAAO,CAACC,GAAG,CAAC,yBAAyB,CAAC;UACtC;UACA,IAAI,CAACC,OAAO,CAACC,IAAI,CAAC,QAAQ,CAAC;QAC7B,OAAO;UACL;UACA,IAAI,CAACd,YAAW,GAAI,qBAAqB;QAC3C;MACF,EAAE,OAAOe,KAAK,EAAE;QACdJ,OAAO,CAACI,KAAK,CAAC,oBAAoB,EAAEA,KAAK,CAAC;QAC1C,IAAI,CAACf,YAAW,GAAI,sCAAsC;MAC5D;IACF;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}