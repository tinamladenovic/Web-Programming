{"ast":null,"code":"import axios from 'axios';\nimport { ref, onMounted, computed } from 'vue';\nimport dayjs from 'dayjs';\nexport default {\n  setup() {\n    const users = ref([]);\n    const purchases = ref([]);\n    const searchFirstName = ref('');\n    const searchLastName = ref('');\n    const searchUsername = ref('');\n    const roleFilter = ref('');\n    const userTypeFilter = ref('');\n    const sortKey = ref('username');\n    const sortOrders = ref({\n      firstName: 1,\n      lastName: 1,\n      username: 1,\n      role: 1,\n      customerType: 1,\n      earnedPoints: 1\n    });\n\n    // Fetch all users and purchases\n    const fetchUsersAndPurchases = async () => {\n      try {\n        const usersResponse = await axios.get('http://localhost:8080/WebShopAppREST/rest/users', {\n          withCredentials: true\n        });\n        users.value = Object.values(usersResponse.data);\n        const purchasesResponse = await axios.get('http://localhost:8080/WebShopAppREST/rest/purchases', {\n          withCredentials: true\n        });\n        purchases.value = purchasesResponse.data;\n      } catch (error) {\n        console.error('Error fetching users or purchases:', error);\n      }\n    };\n    onMounted(() => {\n      fetchUsersAndPurchases();\n    });\n\n    // Proveri koliko puta je korisnik otkazao kupovinu u poslednjih mesec dana\n    const getCancelCountInLastMonth = username => {\n      const oneMonthAgo = dayjs().subtract(1, 'month');\n      return purchases.value.filter(purchase => {\n        return purchase.customerName === username && purchase.status === 'CANCELLED' && dayjs(purchase.date).isAfter(oneMonthAgo);\n      }).length;\n    };\n\n    // Funkcija koja proverava da li je korisnik sumnjiv\n    const isSuspicious = user => {\n      const cancelCount = getCancelCountInLastMonth(user.username);\n      return cancelCount > 5;\n    };\n    const sortedAndFilteredUsers = computed(() => {\n      return users.value.filter(user => {\n        const firstNameMatch = user.firstName?.toLowerCase().includes(searchFirstName.value.toLowerCase());\n        const lastNameMatch = user.lastName?.toLowerCase().includes(searchLastName.value.toLowerCase());\n        const usernameMatch = user.username?.toLowerCase().includes(searchUsername.value.toLowerCase());\n        const roleMatch = !roleFilter.value || user.role === roleFilter.value;\n        const userTypeMatch = !userTypeFilter.value || user.customerType.name === userTypeFilter.value;\n        return firstNameMatch && lastNameMatch && usernameMatch && roleMatch && userTypeMatch;\n      }).sort((a, b) => {\n        const modifier = sortOrders.value[sortKey.value];\n        if (sortKey.value === 'earnedPoints') {\n          return modifier * (a[sortKey.value] - b[sortKey.value]);\n        } else if (typeof a[sortKey.value] === 'string' && typeof b[sortKey.value] === 'string') {\n          return modifier * a[sortKey.value].localeCompare(b[sortKey.value]);\n        }\n        return 0;\n      });\n    });\n    const sortBy = key => {\n      sortKey.value = key;\n      sortOrders.value[key] = sortOrders.value[key] * -1;\n    };\n\n    // Funkcija za blokiranje korisnika\n    const blockUser = async user => {\n      try {\n        user.blocked = true; // Ažuriraj lokalno stanje\n\n        // API zahtev za blokiranje korisnika\n        await axios.put(`http://localhost:8080/WebShopAppREST/rest/users/${user.id}/block`, {\n          blocked: true\n        }, {\n          withCredentials: true\n        });\n        console.log(`User ${user.username} has been blocked.`);\n      } catch (error) {\n        console.error('Error blocking user:', error);\n      }\n    };\n    return {\n      sortedAndFilteredUsers,\n      searchFirstName,\n      searchLastName,\n      searchUsername,\n      roleFilter,\n      userTypeFilter,\n      sortBy,\n      sortKey,\n      sortOrders,\n      blockUser,\n      isSuspicious // Dodaj funkciju u povratnu vrednost\n    };\n  }\n};","map":{"version":3,"names":["axios","ref","onMounted","computed","dayjs","setup","users","purchases","searchFirstName","searchLastName","searchUsername","roleFilter","userTypeFilter","sortKey","sortOrders","firstName","lastName","username","role","customerType","earnedPoints","fetchUsersAndPurchases","usersResponse","get","withCredentials","value","Object","values","data","purchasesResponse","error","console","getCancelCountInLastMonth","oneMonthAgo","subtract","filter","purchase","customerName","status","date","isAfter","length","isSuspicious","user","cancelCount","sortedAndFilteredUsers","firstNameMatch","toLowerCase","includes","lastNameMatch","usernameMatch","roleMatch","userTypeMatch","name","sort","a","b","modifier","localeCompare","sortBy","key","blockUser","blocked","put","id","log"],"sources":["C:\\Users\\PC\\eclipse-workspace\\apache-tomcat-9.0.89\\apache-tomcat-9.0.89\\webapps\\chocolate-factory-2\\Kostur\\Frontend\\front-app\\src\\views\\UserTable.vue"],"sourcesContent":["<template>\r\n  <div class=\"user-container\">\r\n    <div class=\"filter-row\">\r\n      <!-- Polja za pretragu -->\r\n      <div class=\"form-group\">\r\n        <label for=\"searchFirstName\">Search by First Name: </label>\r\n        <input type=\"text\" id=\"searchFirstName\" v-model=\"searchFirstName\" class=\"form-control half-width\">\r\n      </div>\r\n      <div class=\"form-group\">\r\n        <label for=\"searchLastName\">Search by Last Name: </label>\r\n        <input type=\"text\" id=\"searchLastName\" v-model=\"searchLastName\" class=\"form-control half-width\">\r\n      </div>\r\n      <div class=\"form-group\">\r\n        <label for=\"searchUsername\">Search by Username: </label>\r\n        <input type=\"text\" id=\"searchUsername\" v-model=\"searchUsername\" class=\"form-control half-width\">\r\n      </div>\r\n      <div class=\"form-group\">\r\n        <label for=\"roleFilter\">Filter by Role: </label>\r\n        <select id=\"roleFilter\" v-model=\"roleFilter\" class=\"form-control half-width\">\r\n          <option value=\"\">All</option>\r\n          <option value=\"ADMIN\">Admin</option>\r\n          <option value=\"CUSTOMER\">Customer</option>\r\n          <option value=\"WORKER\">Worker</option>\r\n          <option value=\"MANAGER\">Manager</option>\r\n        </select>\r\n      </div>\r\n      <div class=\"form-group\">\r\n        <label for=\"userTypeFilter\">Filter by User Type: </label>\r\n        <select id=\"userTypeFilter\" v-model=\"userTypeFilter\" class=\"form-control half-width\">\r\n          <option value=\"\">All</option>\r\n          <option value=\"NO_TYPE\">No Type</option>\r\n          <option value=\"BRONZE\">Bronze</option>\r\n          <option value=\"SILVER\">Silver</option>\r\n          <option value=\"GOLD\">Gold</option>\r\n        </select>\r\n      </div>\r\n    </div>\r\n    \r\n    <!-- Tabela korisnika -->\r\n    <table class=\"table table-bordered mt-4\">\r\n      <thead>\r\n        <tr>\r\n          <th @click=\"sortBy('firstName')\">First Name <span v-if=\"sortKey === 'firstName'\">{{ sortOrders.firstName > 0 ? '▲' : '▼' }}</span></th>\r\n          <th @click=\"sortBy('lastName')\">Last Name <span v-if=\"sortKey === 'lastName'\">{{ sortOrders.lastName > 0 ? '▲' : '▼' }}</span></th>\r\n          <th @click=\"sortBy('username')\">Username <span v-if=\"sortKey === 'username'\">{{ sortOrders.username > 0 ? '▲' : '▼' }}</span></th>\r\n          <th @click=\"sortBy('role')\">Role <span v-if=\"sortKey === 'role'\">{{ sortOrders.role > 0 ? '▲' : '▼' }}</span></th>\r\n          <th @click=\"sortBy('customerType')\">User Type <span v-if=\"sortKey === 'customerType'\">{{ sortOrders.customerType > 0 ? '▲' : '▼' }}</span></th>\r\n          <th @click=\"sortBy('earnedPoints')\">Earned Points <span v-if=\"sortKey === 'earnedPoints'\">{{ sortOrders.earnedPoints > 0 ? '▲' : '▼' }}</span></th>\r\n          <th>Actions</th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        <tr v-for=\"user in sortedAndFilteredUsers\" :key=\"user.id\" :class=\"{'table-danger': isSuspicious(user)}\">\r\n          <td>{{ user.firstName }}</td>\r\n          <td>{{ user.lastName }}</td>\r\n          <td>{{ user.username }}</td>\r\n          <td>{{ user.role }}</td>\r\n          <td>{{ user.customerType.name }}</td>\r\n          <td>{{ user.earnedPoints }}</td>\r\n          <td>\r\n            <!-- Dugme BLOCK vidljivo samo za korisnike koji nisu ADMIN i nisu već blokirani -->\r\n            <button v-if=\"user.role !== 'ADMIN' && !user.blocked\" @click=\"blockUser(user)\" class=\"btn btn-danger btn-sm\">Block</button>\r\n            <span v-if=\"user.blocked\" class=\"text-danger\">Blocked</span>\r\n          </td>\r\n        </tr>\r\n      </tbody>\r\n    </table>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from 'axios';\r\nimport { ref, onMounted, computed } from 'vue';\r\nimport dayjs from 'dayjs';\r\n\r\nexport default {\r\n  setup() {\r\n    const users = ref([]);\r\n    const purchases = ref([]);\r\n    const searchFirstName = ref('');\r\n    const searchLastName = ref('');\r\n    const searchUsername = ref('');\r\n    const roleFilter = ref('');\r\n    const userTypeFilter = ref('');\r\n    const sortKey = ref('username');\r\n    const sortOrders = ref({\r\n      firstName: 1,\r\n      lastName: 1,\r\n      username: 1,\r\n      role: 1,\r\n      customerType: 1,\r\n      earnedPoints: 1\r\n    });\r\n\r\n    // Fetch all users and purchases\r\n    const fetchUsersAndPurchases = async () => {\r\n      try {\r\n        const usersResponse = await axios.get('http://localhost:8080/WebShopAppREST/rest/users', {\r\n          withCredentials: true,\r\n        });\r\n        users.value = Object.values(usersResponse.data);\r\n\r\n        const purchasesResponse = await axios.get('http://localhost:8080/WebShopAppREST/rest/purchases', {\r\n          withCredentials: true,\r\n        });\r\n        purchases.value = purchasesResponse.data;\r\n      } catch (error) {\r\n        console.error('Error fetching users or purchases:', error);\r\n      }\r\n    };\r\n\r\n    onMounted(() => {\r\n      fetchUsersAndPurchases();\r\n    });\r\n\r\n    // Proveri koliko puta je korisnik otkazao kupovinu u poslednjih mesec dana\r\n    const getCancelCountInLastMonth = (username) => {\r\n      const oneMonthAgo = dayjs().subtract(1, 'month');\r\n      return purchases.value.filter(purchase => {\r\n        return purchase.customerName === username && purchase.status === 'CANCELLED' && dayjs(purchase.date).isAfter(oneMonthAgo);\r\n      }).length;\r\n    };\r\n\r\n    // Funkcija koja proverava da li je korisnik sumnjiv\r\n    const isSuspicious = (user) => {\r\n      const cancelCount = getCancelCountInLastMonth(user.username);\r\n      return cancelCount > 5;\r\n    };\r\n\r\n    const sortedAndFilteredUsers = computed(() => {\r\n      return users.value\r\n        .filter(user => {\r\n          const firstNameMatch = user.firstName?.toLowerCase().includes(searchFirstName.value.toLowerCase());\r\n          const lastNameMatch = user.lastName?.toLowerCase().includes(searchLastName.value.toLowerCase());\r\n          const usernameMatch = user.username?.toLowerCase().includes(searchUsername.value.toLowerCase());\r\n          const roleMatch = !roleFilter.value || user.role === roleFilter.value;\r\n          const userTypeMatch = !userTypeFilter.value || user.customerType.name === userTypeFilter.value;\r\n\r\n          return firstNameMatch && lastNameMatch && usernameMatch && roleMatch && userTypeMatch;\r\n        })\r\n        .sort((a, b) => {\r\n          const modifier = sortOrders.value[sortKey.value];\r\n          if (sortKey.value === 'earnedPoints') {\r\n            return modifier * (a[sortKey.value] - b[sortKey.value]);\r\n          } else if (typeof a[sortKey.value] === 'string' && typeof b[sortKey.value] === 'string') {\r\n            return modifier * a[sortKey.value].localeCompare(b[sortKey.value]);\r\n          }\r\n          return 0;\r\n        });\r\n    });\r\n\r\n    const sortBy = key => {\r\n      sortKey.value = key;\r\n      sortOrders.value[key] = sortOrders.value[key] * -1;\r\n    };\r\n\r\n    // Funkcija za blokiranje korisnika\r\n    const blockUser = async (user) => {\r\n      try {\r\n        user.blocked = true; // Ažuriraj lokalno stanje\r\n\r\n        // API zahtev za blokiranje korisnika\r\n        await axios.put(`http://localhost:8080/WebShopAppREST/rest/users/${user.id}/block`, {\r\n          blocked: true\r\n        }, {\r\n          withCredentials: true,\r\n        });\r\n\r\n        console.log(`User ${user.username} has been blocked.`);\r\n      } catch (error) {\r\n        console.error('Error blocking user:', error);\r\n      }\r\n    };\r\n\r\n    return {\r\n      sortedAndFilteredUsers,\r\n      searchFirstName,\r\n      searchLastName,\r\n      searchUsername,\r\n      roleFilter,\r\n      userTypeFilter,\r\n      sortBy,\r\n      sortKey,\r\n      sortOrders,\r\n      blockUser,\r\n      isSuspicious // Dodaj funkciju u povratnu vrednost\r\n    };\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.user-container {\r\n  padding: 20px;\r\n  border-radius: 8px;\r\n  margin-top: 20px;\r\n  background-color: #e9f5ff;\r\n}\r\n\r\nh2.blue-label {\r\n  color: #007bff;\r\n}\r\n\r\n.filter-row {\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  justify-content: space-between;\r\n  gap: 10px;\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.form-group {\r\n  flex: 1;\r\n  display: flex;\r\n  flex-direction: column;\r\n  min-width: 200px;\r\n}\r\n\r\ninput[type=\"text\"],\r\nselect {\r\n  border: 1px solid #007bff;\r\n  border-radius: 8px;\r\n  font-size: 1.1rem;\r\n  padding: 10px;\r\n  transition: border-color 0.3s ease, box-shadow 0.3s ease;\r\n}\r\n\r\ninput[type=\"text\"]:focus,\r\nselect:focus {\r\n  border-color: #007bff;\r\n  box-shadow: 0 0 5px rgba(0, 123, 255, 0.25);\r\n}\r\n\r\n.table {\r\n  width: 100%;\r\n  border-collapse: collapse;\r\n}\r\n\r\n.table th,\r\n.table td {\r\n  border: 1px solid #ddd;\r\n  padding: 8px;\r\n}\r\n\r\n.table th {\r\n  background-color: #f5e7f5;\r\n  text-align: left;\r\n  cursor: pointer;\r\n  color: #333;\r\n}\r\n\r\n/* Crveni red za sumnjive korisnike */\r\n.table-danger {\r\n  background-color: #f8d7da !important;\r\n  color: #721c24 !important;\r\n}\r\n\r\nbutton {\r\n  border: 1px solid #007bff;\r\n  background-color: transparent;\r\n  color: #007bff;\r\n  font-size: 1.1rem;\r\n  border-radius: 8px;\r\n  transition: background-color 0.3s ease, color 0.3s ease;\r\n}\r\n\r\nbutton:hover {\r\n  background-color: #007bff;\r\n  color: white;\r\n}\r\n</style>\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}