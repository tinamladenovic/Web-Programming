{"ast":null,"code":"/**\n * CIE XYZ\n *\n * @module  color-space/xyz\n */\nimport rgb from './rgb.js';\nvar xyz = {\n  name: 'xyz',\n  min: [0, 0, 0],\n  channel: ['X', 'Y', 'Z'],\n  alias: ['XYZ', 'ciexyz', 'cie1931']\n};\n\n/**\n * Whitepoint reference values with observer/illuminant\n *\n * http://en.wikipedia.org/wiki/Standard_illuminant\n */\nxyz.whitepoint = {\n  //1931 2°\n  2: {\n    //incadescent\n    A: [109.85, 100, 35.585],\n    // B:[],\n    C: [98.074, 100, 118.232],\n    D50: [96.422, 100, 82.521],\n    D55: [95.682, 100, 92.149],\n    //daylight\n    D65: [95.045592705167, 100, 108.9057750759878],\n    D75: [94.972, 100, 122.638],\n    //flourescent\n    // F1: [],\n    F2: [99.187, 100, 67.395],\n    // F3: [],\n    // F4: [],\n    // F5: [],\n    // F6:[],\n    F7: [95.044, 100, 108.755],\n    // F8: [],\n    // F9: [],\n    // F10: [],\n    F11: [100.966, 100, 64.370],\n    // F12: [],\n    E: [100, 100, 100]\n  },\n  //1964  10°\n  10: {\n    //incadescent\n    A: [111.144, 100, 35.200],\n    C: [97.285, 100, 116.145],\n    D50: [96.720, 100, 81.427],\n    D55: [95.799, 100, 90.926],\n    //daylight\n    D65: [94.811, 100, 107.304],\n    D75: [94.416, 100, 120.641],\n    //flourescent\n    F2: [103.280, 100, 69.026],\n    F7: [95.792, 100, 107.687],\n    F11: [103.866, 100, 65.627],\n    E: [100, 100, 100]\n  }\n};\n\n/**\n * Top values are the whitepoint’s top values, default are D65\n */\nxyz.max = xyz.whitepoint[2].D65;\n\n/**\n * Transform xyz to rgb\n *\n * @param {Array} xyz Array of xyz values\n *\n * @return {Array} RGB values\n */\nxyz.rgb = function (_xyz, white) {\n  //FIXME: make sure we have to divide like this. Probably we have to replace matrix as well then\n  white = white || xyz.whitepoint[2].E;\n  var x = _xyz[0] / white[0],\n    y = _xyz[1] / white[1],\n    z = _xyz[2] / white[2],\n    r,\n    g,\n    b;\n\n  // assume sRGB\n  // http://www.brucelindbloom.com/index.html?Eqn_RGB_XYZ_Matrix.html\n  r = x * 3.240969941904521 + y * -1.537383177570093 + z * -0.498610760293;\n  g = x * -0.96924363628087 + y * 1.87596750150772 + z * 0.041555057407175;\n  b = x * 0.055630079696993 + y * -0.20397695888897 + z * 1.056971514242878;\n  r = r > 0.0031308 ? 1.055 * Math.pow(r, 1.0 / 2.4) - 0.055 : r = r * 12.92;\n  g = g > 0.0031308 ? 1.055 * Math.pow(g, 1.0 / 2.4) - 0.055 : g = g * 12.92;\n  b = b > 0.0031308 ? 1.055 * Math.pow(b, 1.0 / 2.4) - 0.055 : b = b * 12.92;\n  r = Math.min(Math.max(0, r), 1);\n  g = Math.min(Math.max(0, g), 1);\n  b = Math.min(Math.max(0, b), 1);\n  return [r * 255, g * 255, b * 255];\n};\n\n/**\n * RGB to XYZ\n *\n * @param {Array} rgb RGB channels\n *\n * @return {Array} XYZ channels\n */\nrgb.xyz = function (rgb, white) {\n  var r = rgb[0] / 255,\n    g = rgb[1] / 255,\n    b = rgb[2] / 255;\n\n  // assume sRGB\n  r = r > 0.04045 ? Math.pow((r + 0.055) / 1.055, 2.4) : r / 12.92;\n  g = g > 0.04045 ? Math.pow((g + 0.055) / 1.055, 2.4) : g / 12.92;\n  b = b > 0.04045 ? Math.pow((b + 0.055) / 1.055, 2.4) : b / 12.92;\n  var x = r * 0.41239079926595 + g * 0.35758433938387 + b * 0.18048078840183;\n  var y = r * 0.21263900587151 + g * 0.71516867876775 + b * 0.072192315360733;\n  var z = r * 0.019330818715591 + g * 0.11919477979462 + b * 0.95053215224966;\n  white = white || xyz.whitepoint[2].E;\n  return [x * white[0], y * white[1], z * white[2]];\n};\nexport default xyz;","map":{"version":3,"names":["rgb","xyz","name","min","channel","alias","whitepoint","A","C","D50","D55","D65","D75","F2","F7","F11","E","max","_xyz","white","x","y","z","r","g","b","Math","pow"],"sources":["C:/Users/PC/eclipse-workspace/apache-tomcat-9.0.89/apache-tomcat-9.0.89/webapps/chocolate-factory-2/Kostur/Frontend/front-app/node_modules/color-space/xyz.js"],"sourcesContent":["/**\n * CIE XYZ\n *\n * @module  color-space/xyz\n */\nimport rgb from './rgb.js';\n\nvar xyz = {\n\tname: 'xyz',\n\tmin: [0,0,0],\n\tchannel: ['X','Y','Z'],\n\talias: ['XYZ', 'ciexyz', 'cie1931']\n};\n\n\n/**\n * Whitepoint reference values with observer/illuminant\n *\n * http://en.wikipedia.org/wiki/Standard_illuminant\n */\nxyz.whitepoint = {\n\t//1931 2°\n\t2: {\n\t\t//incadescent\n\t\tA:[109.85, 100, 35.585],\n\t\t// B:[],\n\t\tC: [98.074, 100, 118.232],\n\t\tD50: [96.422, 100, 82.521],\n\t\tD55: [95.682, 100, 92.149],\n\t\t//daylight\n\t\tD65: [95.045592705167, 100, 108.9057750759878],\n\t\tD75: [94.972, 100, 122.638],\n\t\t//flourescent\n\t\t// F1: [],\n\t\tF2: [99.187, 100, 67.395],\n\t\t// F3: [],\n\t\t// F4: [],\n\t\t// F5: [],\n\t\t// F6:[],\n\t\tF7: [95.044, 100, 108.755],\n\t\t// F8: [],\n\t\t// F9: [],\n\t\t// F10: [],\n\t\tF11: [100.966, 100, 64.370],\n\t\t// F12: [],\n\t\tE: [100,100,100]\n\t},\n\n\t//1964  10°\n\t10: {\n\t\t//incadescent\n\t\tA:[111.144, 100, 35.200],\n\t\tC: [97.285, 100, 116.145],\n\t\tD50: [96.720, 100, 81.427],\n\t\tD55: [95.799, 100, 90.926],\n\t\t//daylight\n\t\tD65: [94.811, 100, 107.304],\n\t\tD75: [94.416, 100, 120.641],\n\t\t//flourescent\n\t\tF2: [103.280, 100, 69.026],\n\t\tF7: [95.792, 100, 107.687],\n\t\tF11: [103.866, 100, 65.627],\n\t\tE: [100,100,100]\n\t}\n};\n\n\n/**\n * Top values are the whitepoint’s top values, default are D65\n */\nxyz.max = xyz.whitepoint[2].D65;\n\n\n/**\n * Transform xyz to rgb\n *\n * @param {Array} xyz Array of xyz values\n *\n * @return {Array} RGB values\n */\nxyz.rgb = function (_xyz, white) {\n\t//FIXME: make sure we have to divide like this. Probably we have to replace matrix as well then\n\twhite = white || xyz.whitepoint[2].E;\n\n\tvar x = _xyz[0] / white[0],\n\t\ty = _xyz[1] / white[1],\n\t\tz = _xyz[2] / white[2],\n\t\tr, g, b;\n\n\t// assume sRGB\n\t// http://www.brucelindbloom.com/index.html?Eqn_RGB_XYZ_Matrix.html\n\tr = (x * 3.240969941904521) + (y * -1.537383177570093) + (z * -0.498610760293);\n\tg = (x * -0.96924363628087) + (y * 1.87596750150772) + (z * 0.041555057407175);\n\tb = (x * 0.055630079696993) + (y * -0.20397695888897) + (z * 1.056971514242878);\n\n\tr = r > 0.0031308 ? ((1.055 * Math.pow(r, 1.0 / 2.4)) - 0.055)\n\t\t: r = (r * 12.92);\n\n\tg = g > 0.0031308 ? ((1.055 * Math.pow(g, 1.0 / 2.4)) - 0.055)\n\t\t: g = (g * 12.92);\n\n\tb = b > 0.0031308 ? ((1.055 * Math.pow(b, 1.0 / 2.4)) - 0.055)\n\t\t: b = (b * 12.92);\n\n\tr = Math.min(Math.max(0, r), 1);\n\tg = Math.min(Math.max(0, g), 1);\n\tb = Math.min(Math.max(0, b), 1);\n\n\treturn [r * 255, g * 255, b * 255];\n}\n\n\n\n/**\n * RGB to XYZ\n *\n * @param {Array} rgb RGB channels\n *\n * @return {Array} XYZ channels\n */\nrgb.xyz = function(rgb, white) {\n\tvar r = rgb[0] / 255,\n\t\t\tg = rgb[1] / 255,\n\t\t\tb = rgb[2] / 255;\n\n\t// assume sRGB\n\tr = r > 0.04045 ? Math.pow(((r + 0.055) / 1.055), 2.4) : (r / 12.92);\n\tg = g > 0.04045 ? Math.pow(((g + 0.055) / 1.055), 2.4) : (g / 12.92);\n\tb = b > 0.04045 ? Math.pow(((b + 0.055) / 1.055), 2.4) : (b / 12.92);\n\n\tvar x = (r * 0.41239079926595) + (g * 0.35758433938387) + (b * 0.18048078840183);\n\tvar y = (r * 0.21263900587151) + (g * 0.71516867876775) + (b * 0.072192315360733);\n\tvar z = (r * 0.019330818715591) + (g * 0.11919477979462) + (b * 0.95053215224966);\n\n\twhite = white || xyz.whitepoint[2].E;\n\n\treturn [x * white[0], y * white[1], z * white[2]];\n};\n\n\n\nexport default xyz;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}