{"ast":null,"code":"import { createElementVNode as _createElementVNode, createCommentVNode as _createCommentVNode, toDisplayString as _toDisplayString, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, createTextVNode as _createTextVNode, withModifiers as _withModifiers, vModelText as _vModelText, withDirectives as _withDirectives, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-06a8eb7d\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  class: \"d-flex justify-content-center align-items-center vh-75\"\n};\nconst _hoisted_2 = {\n  class: \"card p-5 shadow-lg\",\n  style: {\n    \"width\": \"100%\",\n    \"max-width\": \"1000px\",\n    \"background-color\": \"#e9f5ff\",\n    \"margin-top\": \"-50px\"\n  }\n};\nconst _hoisted_3 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"h2\", {\n  class: \"text-center mb-4 blue-label\"\n}, \"CHOCOLATES\", -1 /* HOISTED */));\nconst _hoisted_4 = {\n  class: \"chocolates-list\"\n};\nconst _hoisted_5 = [\"onClick\"];\nconst _hoisted_6 = {\n  class: \"chocolate-info\"\n};\nconst _hoisted_7 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"strong\", null, \"Type:\", -1 /* HOISTED */));\nconst _hoisted_8 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"strong\", null, \"Kind:\", -1 /* HOISTED */));\nconst _hoisted_9 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"strong\", null, \"Weight:\", -1 /* HOISTED */));\nconst _hoisted_10 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"strong\", null, \"Status:\", -1 /* HOISTED */));\nconst _hoisted_11 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"strong\", null, \"Quantity:\", -1 /* HOISTED */));\nconst _hoisted_12 = {\n  key: 0\n};\nconst _hoisted_13 = [\"onClick\"];\nconst _hoisted_14 = [\"onClick\"];\nconst _hoisted_15 = {\n  key: 0,\n  class: \"edit-quantity text-center\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [_hoisted_3, _createCommentVNode(\" Prikaz trenutne korisničke uloge \"), _createElementVNode(\"p\", null, \"Trenutna uloga: \" + _toDisplayString($setup.userRole), 1 /* TEXT */), _createCommentVNode(\" Lista čokolada \"), _createElementVNode(\"ul\", _hoisted_4, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($setup.chocolates, chocolate => {\n    return _openBlock(), _createElementBlock(\"li\", {\n      key: chocolate.id,\n      onClick: $event => $setup.selectChocolate(chocolate)\n    }, [_createElementVNode(\"div\", _hoisted_6, [_createElementVNode(\"span\", null, _toDisplayString(chocolate.name), 1 /* TEXT */), _createElementVNode(\"span\", null, [_hoisted_7, _createTextVNode(\" \" + _toDisplayString(chocolate.type), 1 /* TEXT */)]), _createElementVNode(\"span\", null, [_hoisted_8, _createTextVNode(\" \" + _toDisplayString(chocolate.kind), 1 /* TEXT */)]), _createElementVNode(\"span\", null, [_hoisted_9, _createTextVNode(\" \" + _toDisplayString(chocolate.weight) + \"g\", 1 /* TEXT */)]), _createElementVNode(\"span\", null, [_hoisted_10, _createTextVNode(\" \" + _toDisplayString(chocolate.status), 1 /* TEXT */)]), _createElementVNode(\"span\", null, [_hoisted_11, _createTextVNode(\" \" + _toDisplayString(chocolate.quantity) + \" pcs\", 1 /* TEXT */)]), _createCommentVNode(\" Dugmad Edit i Delete \"), $setup.userRole === 'MANAGER' ? (_openBlock(), _createElementBlock(\"span\", _hoisted_12, [_createElementVNode(\"button\", {\n      onClick: _withModifiers($event => $setup.editChocolate(chocolate), [\"stop\"]),\n      class: \"btn btn-outline-warning\"\n    }, \"Edit\", 8 /* PROPS */, _hoisted_13), _createElementVNode(\"button\", {\n      onClick: _withModifiers($event => $setup.deleteChocolate(chocolate.id), [\"stop\"]),\n      class: \"btn btn-outline-danger\"\n    }, \"Delete\", 8 /* PROPS */, _hoisted_14)])) : _createCommentVNode(\"v-if\", true)])], 8 /* PROPS */, _hoisted_5);\n  }), 128 /* KEYED_FRAGMENT */))]), _createCommentVNode(\" Sekcija za ažuriranje količine, samo za WORKER ulogu \"), $setup.selectedChocolate && $setup.userRole === 'WORKER' ? (_openBlock(), _createElementBlock(\"div\", _hoisted_15, [_createElementVNode(\"h3\", null, \"Update quantity for: \" + _toDisplayString($setup.selectedChocolate.name), 1 /* TEXT */), _withDirectives(_createElementVNode(\"input\", {\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $setup.newQuantity = $event),\n    type: \"number\",\n    min: \"0\",\n    placeholder: \"Enter new quantity\",\n    class: \"form-control half-width\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $setup.newQuantity, void 0, {\n    number: true\n  }]]), _createElementVNode(\"button\", {\n    onClick: _cache[1] || (_cache[1] = (...args) => $setup.updateQuantity && $setup.updateQuantity(...args)),\n    class: \"btn btn-outline-primary mt-2\"\n  }, \"Update Quantity\")])) : _createCommentVNode(\"v-if\", true)])]);\n}","map":{"version":3,"names":["class","style","_createElementVNode","key","_createElementBlock","_hoisted_1","_hoisted_2","_hoisted_3","_createCommentVNode","_toDisplayString","$setup","userRole","_hoisted_4","_Fragment","_renderList","chocolates","chocolate","id","onClick","$event","selectChocolate","_hoisted_6","name","_hoisted_7","_createTextVNode","type","_hoisted_8","kind","_hoisted_9","weight","_hoisted_10","status","_hoisted_11","quantity","_hoisted_12","_withModifiers","editChocolate","_hoisted_13","deleteChocolate","_hoisted_14","_hoisted_5","selectedChocolate","_hoisted_15","_cache","newQuantity","min","placeholder","number","args","updateQuantity"],"sources":["C:\\Users\\PC\\eclipse-workspace\\apache-tomcat-9.0.89\\apache-tomcat-9.0.89\\webapps\\chocolate-factory-2\\Kostur\\Frontend\\front-app\\src\\views\\WorkerView.vue"],"sourcesContent":["<template>\r\n  <div class=\"d-flex justify-content-center align-items-center vh-75\">\r\n    <div class=\"card p-5 shadow-lg\" style=\"width: 100%; max-width: 1000px; background-color: #e9f5ff; margin-top: -50px;\">\r\n     \r\n      <h2 class=\"text-center mb-4 blue-label\">CHOCOLATES</h2>\r\n\r\n      <!-- Prikaz trenutne korisničke uloge -->\r\n      <p>Trenutna uloga: {{ userRole }}</p>\r\n      \r\n      <!-- Lista čokolada -->\r\n      <ul class=\"chocolates-list\">\r\n        <li v-for=\"chocolate in chocolates\" :key=\"chocolate.id\" @click=\"selectChocolate(chocolate)\">\r\n          <div class=\"chocolate-info\">\r\n            <span>{{ chocolate.name }}</span>\r\n            <span><strong>Type:</strong> {{ chocolate.type }}</span>\r\n            <span><strong>Kind:</strong> {{ chocolate.kind }}</span>\r\n            <span><strong>Weight:</strong> {{ chocolate.weight }}g</span>\r\n            <span><strong>Status:</strong> {{ chocolate.status }}</span>\r\n            <span><strong>Quantity:</strong> {{ chocolate.quantity }} pcs</span>\r\n\r\n            <!-- Dugmad Edit i Delete -->\r\n            <span v-if=\"userRole === 'MANAGER'\">\r\n              <button @click.stop=\"editChocolate(chocolate)\" class=\"btn btn-outline-warning\">Edit</button>\r\n              <button @click.stop=\"deleteChocolate(chocolate.id)\" class=\"btn btn-outline-danger\">Delete</button>\r\n            </span>\r\n          </div>\r\n        </li>\r\n      </ul>\r\n\r\n      <!-- Sekcija za ažuriranje količine, samo za WORKER ulogu -->\r\n      <div v-if=\"selectedChocolate && userRole === 'WORKER'\" class=\"edit-quantity text-center\">\r\n        <h3>Update quantity for: {{ selectedChocolate.name }}</h3>\r\n        <input v-model.number=\"newQuantity\" type=\"number\" min=\"0\" placeholder=\"Enter new quantity\" class=\"form-control half-width\">\r\n        <button @click=\"updateQuantity\" class=\"btn btn-outline-primary mt-2\">Update Quantity</button>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from 'axios';\r\nimport { ref, onMounted } from 'vue';\r\n\r\nexport default {\r\n  setup() {\r\n    const chocolates = ref([]);\r\n    const selectedChocolate = ref(null);\r\n    const newQuantity = ref(0);\r\n    const userRole = ref(null); // Dodavanje uloge korisnika\r\n\r\n    const fetchWorkerData = async () => {\r\n      try {\r\n        // Dohvatanje trenutnog korisnika\r\n        const response = await axios.get('http://localhost:8080/WebShopAppREST/rest/currentUser', {\r\n          withCredentials: true,\r\n        });\r\n        const worker = response.data;\r\n        userRole.value = worker.role; // Provera uloge korisnika\r\n\r\n        if (worker.role === 'WORKER' || worker.role === 'MANAGER') {\r\n          // Fetch all chocolates\r\n          const chocolatesResponse = await axios.get('http://localhost:8080/WebShopAppREST/rest/chocolates', {\r\n            withCredentials: true,\r\n          });\r\n          chocolates.value = chocolatesResponse.data;\r\n        } else {\r\n          console.warn('Only workers and managers can manage chocolates.');\r\n        }\r\n      } catch (error) {\r\n        console.error('Error fetching worker data:', error);\r\n      }\r\n    };\r\n\r\n    const selectChocolate = (chocolate) => {\r\n      selectedChocolate.value = chocolate;\r\n      newQuantity.value = chocolate.quantity;\r\n    };\r\n\r\n    const updateQuantity = async () => {\r\n      if (selectedChocolate.value && newQuantity.value >= 0) {\r\n        try {\r\n          const updatedChocolate = { ...selectedChocolate.value, quantity: newQuantity.value };\r\n          const response = await axios.put(`http://localhost:8080/WebShopAppREST/rest/chocolates/${selectedChocolate.value.id}/quantity`, updatedChocolate, {\r\n            withCredentials: true,\r\n          });\r\n          selectedChocolate.value.quantity = newQuantity.value;\r\n          alert('Quantity updated successfully.');\r\n        } catch (error) {\r\n          console.error('Error updating chocolate quantity:', error);\r\n          if (error.response && error.response.status === 403) {\r\n            alert('Access denied: You can only update quantities for chocolates in your factory.');\r\n          } else {\r\n            alert('An error occurred while updating quantity.');\r\n          }\r\n        }\r\n      }\r\n    };\r\n\r\n    const editChocolate = (chocolate) => {\r\n      alert(`Editing chocolate: ${chocolate.name}`);\r\n      // Ovde možete navigirati do stranice za uređivanje ili omogućiti modal za editovanje\r\n    };\r\n\r\n    const deleteChocolate = async (id) => {\r\n      try {\r\n        await axios.delete(`http://localhost:8080/WebShopAppREST/rest/chocolates/${id}`, {\r\n          withCredentials: true,\r\n        });\r\n        chocolates.value = chocolates.value.filter(chocolate => chocolate.id !== id);\r\n        alert('Chocolate deleted successfully.');\r\n      } catch (error) {\r\n        console.error('Error deleting chocolate:', error);\r\n        alert('An error occurred while deleting the chocolate.');\r\n      }\r\n    };\r\n\r\n    onMounted(() => {\r\n      fetchWorkerData();\r\n    });\r\n\r\n    return {\r\n      chocolates,\r\n      selectedChocolate,\r\n      newQuantity,\r\n      selectChocolate,\r\n      updateQuantity,\r\n      userRole, // Vraćanje uloge korisnika\r\n      editChocolate, // Funkcija za editovanje\r\n      deleteChocolate, // Funkcija za brisanje\r\n    };\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.d-flex {\r\n  min-height: 75vh;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n}\r\n\r\n.card {\r\n  border: 1px solid #ddd;\r\n  border-radius: 8px;\r\n  padding: 30px;\r\n  background-color: #e9f5ff; /* Svetlo plava pozadina */\r\n  box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);\r\n  text-align: center;\r\n}\r\n\r\nh2 {\r\n  color: #007bff;\r\n  font-size: 2rem;\r\n  font-weight: normal;\r\n}\r\n\r\n.chocolates-list {\r\n  list-style-type: none;\r\n  padding: 0;\r\n}\r\n\r\n.chocolates-list li {\r\n  padding: 10px;\r\n  cursor: pointer;\r\n  background-color: #f2f2f2;\r\n  margin-bottom: 10px;\r\n  border-radius: 8px;\r\n  text-align: center;\r\n  transition: background-color 0.3s ease;\r\n}\r\n\r\n.chocolates-list li:hover {\r\n  background-color: #e0e0e0;\r\n}\r\n\r\n.chocolate-info {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  flex-wrap: wrap;\r\n  gap: 10px;\r\n  text-align: left;\r\n}\r\n\r\n/* Sekcija za ažuriranje količine */\r\n.edit-quantity {\r\n  margin-top: 20px;\r\n}\r\n\r\n.edit-quantity input {\r\n  margin-right: 10px;\r\n  padding: 10px;\r\n  width: 50%;\r\n  border: 1px solid #007bff;\r\n  border-radius: 8px;\r\n  font-size: 1.1rem;\r\n  transition: border-color 0.3s ease, box-shadow 0.3s ease;\r\n}\r\n\r\n.edit-quantity input:focus {\r\n  border-color: #007bff;\r\n  box-shadow: 0 0 5px rgba(0, 123, 255, 0.25);\r\n}\r\n\r\n.edit-quantity button {\r\n  padding: 10px;\r\n  background-color: transparent;\r\n  color: #007bff;\r\n  border: 1px solid #007bff;\r\n  border-radius: 8px;\r\n  font-size: 1.1rem;\r\n  transition: background-color 0.3s ease, color 0.3s ease;\r\n}\r\n\r\n.edit-quantity button:hover {\r\n  background-color: #007bff;\r\n  color: white;\r\n}\r\n\r\n.btn-outline-warning {\r\n  color: #ffc107;\r\n  border-color: #ffc107;\r\n}\r\n\r\n.btn-outline-warning:hover {\r\n  background-color: #ffc107;\r\n  color: #fff;\r\n}\r\n\r\n.btn-outline-danger {\r\n  color: #dc3545;\r\n  border-color: #dc3545;\r\n}\r\n\r\n.btn-outline-danger:hover {\r\n  background-color: #dc3545;\r\n  color: #fff;\r\n}\r\n</style>\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}